//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.28 at 10:51:43 PM CET 
//


package nl.games.xrebirth.generated.savegame;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the nl.meijboom.neo4j.xrebirth.generated.savegame package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Savegame_QNAME = new QName("", "savegame");
    private final static QName _RelationsTypeRelation_QNAME = new QName("", "relation");
    private final static QName _TargetpointsTypeTargetpoint_QNAME = new QName("", "targetpoint");
    private final static QName _QueueTypeItem_QNAME = new QName("", "item");
    private final static QName _QueueTypeEfficiency_QNAME = new QName("", "efficiency");
    private final static QName _TradeTypeSource_QNAME = new QName("", "source");
    private final static QName _TradeTypeOffers_QNAME = new QName("", "offers");
    private final static QName _TradeTypeBuyer_QNAME = new QName("", "buyer");
    private final static QName _TradeTypeOrders_QNAME = new QName("", "orders");
    private final static QName _TradeTypeSeller_QNAME = new QName("", "seller");
    private final static QName _ScriptTypeVars_QNAME = new QName("", "vars");
    private final static QName _ScriptTypeRefs_QNAME = new QName("", "refs");
    private final static QName _ScriptTypeCommand_QNAME = new QName("", "command");
    private final static QName _ScriptTypeLibrary_QNAME = new QName("", "library");
    private final static QName _ScriptTypeCounters_QNAME = new QName("", "counters");
    private final static QName _ScriptTypeCue_QNAME = new QName("", "cue");
    private final static QName _RefTypeUpgrade_QNAME = new QName("", "upgrade");
    private final static QName _RefTypeValue_QNAME = new QName("", "value");
    private final static QName _RefTypeMembers_QNAME = new QName("", "members");
    private final static QName _FormationTypeShape_QNAME = new QName("", "shape");
    private final static QName _TargetpointTypeOffset_QNAME = new QName("", "offset");
    private final static QName _FloatTypeControl_QNAME = new QName("", "control");
    private final static QName _ReadTypeAccelerationLinear_QNAME = new QName("", "linear");
    private final static QName _ReadTypeAccelerationAngular_QNAME = new QName("", "angular");
    private final static QName _MissionTypeObjective_QNAME = new QName("", "objective");
    private final static QName _MissionTypeTrade_QNAME = new QName("", "trade");
    private final static QName _MissionTypeBriefing_QNAME = new QName("", "briefing");
    private final static QName _CueTypeActors_QNAME = new QName("", "actors");
    private final static QName _CueTypeInstances_QNAME = new QName("", "instances");
    private final static QName _AmmunitionTypeUnavailable_QNAME = new QName("", "unavailable");
    private final static QName _AmmunitionTypeAvailable_QNAME = new QName("", "available");
    private final static QName _ConnectionsTypeConnection_QNAME = new QName("", "connection");
    private final static QName _BuildTypeResources_QNAME = new QName("", "resources");
    private final static QName _BuildTypeComponents_QNAME = new QName("", "components");
    private final static QName _BuildTypeUnits_QNAME = new QName("", "units");
    private final static QName _SummaryTypeWare_QNAME = new QName("", "ware");
    private final static QName _EntityTypeScript_QNAME = new QName("", "script");
    private final static QName _PositionTypeWrite_QNAME = new QName("", "write");
    private final static QName _PositionTypeRead_QNAME = new QName("", "read");
    private final static QName _NetworkTypeQuotalistsQuotalist_QNAME = new QName("", "quotalist");
    private final static QName _ConnectionTypeComponent_QNAME = new QName("", "component");
    private final static QName _ConnectionTypeConnected_QNAME = new QName("", "connected");
    private final static QName _FlightcontrolmodelTypeBehavior_QNAME = new QName("", "behavior");
    private final static QName _EventTypeSafepos_QNAME = new QName("", "safepos");
    private final static QName _ObjectiveTypeTargets_QNAME = new QName("", "targets");
    private final static QName _ComponentTypeSkills_QNAME = new QName("", "skills");
    private final static QName _ComponentTypeAnimations_QNAME = new QName("", "animations");
    private final static QName _ComponentTypeSurface_QNAME = new QName("", "surface");
    private final static QName _ComponentTypeMasstraffic_QNAME = new QName("", "masstraffic");
    private final static QName _ComponentTypeNpcseed_QNAME = new QName("", "npcseed");
    private final static QName _ComponentTypeEvents_QNAME = new QName("", "events");
    private final static QName _ComponentTypeDrop_QNAME = new QName("", "drop");
    private final static QName _ComponentTypeEntity_QNAME = new QName("", "entity");
    private final static QName _ComponentTypeInfluences_QNAME = new QName("", "influences");
    private final static QName _ComponentTypeHull_QNAME = new QName("", "hull");
    private final static QName _ComponentTypeBuild_QNAME = new QName("", "build");
    private final static QName _ComponentTypeProduction_QNAME = new QName("", "production");
    private final static QName _ComponentTypeCargo_QNAME = new QName("", "cargo");
    private final static QName _ComponentTypeNpcanimation_QNAME = new QName("", "npcanimation");
    private final static QName _ComponentTypeShootcontroller_QNAME = new QName("", "shootcontroller");
    private final static QName _ComponentTypeMovement_QNAME = new QName("", "movement");
    private final static QName _ComponentTypeTurrets_QNAME = new QName("", "turrets");
    private final static QName _ComponentTypeConnections_QNAME = new QName("", "connections");
    private final static QName _ComponentTypeTrails_QNAME = new QName("", "trails");
    private final static QName _ComponentTypeWares_QNAME = new QName("", "wares");
    private final static QName _ComponentTypeSigns_QNAME = new QName("", "signs");
    private final static QName _ComponentTypeListeners_QNAME = new QName("", "listeners");
    private final static QName _ComponentTypeUpgrades_QNAME = new QName("", "upgrades");
    private final static QName _ComponentTypeAmmunition_QNAME = new QName("", "ammunition");
    private final static QName _ComponentTypeSnapshot_QNAME = new QName("", "snapshot");
    private final static QName _ComponentTypeTint_QNAME = new QName("", "tint");
    private final static QName _ComponentTypeLastglobalanimation_QNAME = new QName("", "lastglobalanimation");
    private final static QName _ComponentTypeControltexture_QNAME = new QName("", "controltexture");
    private final static QName _ComponentTypeJump_QNAME = new QName("", "jump");
    private final static QName _ComponentTypeGate_QNAME = new QName("", "gate");
    private final static QName _ComponentTypeRender_QNAME = new QName("", "render");
    private final static QName _ComponentTypeShields_QNAME = new QName("", "shields");
    private final static QName _ComponentTypeCommander_QNAME = new QName("", "commander");
    private final static QName _ComponentTypeEffect_QNAME = new QName("", "effect");
    private final static QName _ComponentTypeBlackboard_QNAME = new QName("", "blackboard");
    private final static QName _ComponentTypeInventory_QNAME = new QName("", "inventory");
    private final static QName _ComponentTypeGravidar_QNAME = new QName("", "gravidar");
    private final static QName _ComponentTypeAccount_QNAME = new QName("", "account");
    private final static QName _ComponentTypeScan_QNAME = new QName("", "scan");
    private final static QName _ComponentTypeBoost_QNAME = new QName("", "boost");
    private final static QName _ComponentTypeWeaponcycle_QNAME = new QName("", "weaponcycle");
    private final static QName _ComponentTypeKnown_QNAME = new QName("", "known");
    private final static QName _ComponentTypeStorage_QNAME = new QName("", "storage");
    private final static QName _ParameterTypeVolatile_QNAME = new QName("", "volatile");
    private final static QName _ParameterTypePersistent_QNAME = new QName("", "persistent");
    private final static QName _CommandTypeParam_QNAME = new QName("", "param");
    private final static QName _MovementTypePosition_QNAME = new QName("", "position");
    private final static QName _MovementTypeCameraoffset_QNAME = new QName("", "cameraoffset");
    private final static QName _MovementTypeTime_QNAME = new QName("", "time");
    private final static QName _MovementTypeAnimation_QNAME = new QName("", "animation");
    private final static QName _MovementTypeTargetpoints_QNAME = new QName("", "targetpoints");
    private final static QName _MovementTypeFlightcontrolmodel_QNAME = new QName("", "flightcontrolmodel");
    private final static QName _MovementTypeAcceleration_QNAME = new QName("", "acceleration");
    private final static QName _MovementTypeVelocity_QNAME = new QName("", "velocity");
    private final static QName _MovementTypeTransition_QNAME = new QName("", "transition");
    private final static QName _MovementTypeDeceleration_QNAME = new QName("", "deceleration");
    private final static QName _MovementTypeFormation_QNAME = new QName("", "formation");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nl.meijboom.neo4j.xrebirth.generated.savegame
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ReadType }
     * 
     */
    public ReadType createReadType() {
        return new ReadType();
    }

    /**
     * Create an instance of {@link ComponentType }
     * 
     */
    public ComponentType createComponentType() {
        return new ComponentType();
    }

    /**
     * Create an instance of {@link WriteType }
     * 
     */
    public WriteType createWriteType() {
        return new WriteType();
    }

    /**
     * Create an instance of {@link NetworkType }
     * 
     */
    public NetworkType createNetworkType() {
        return new NetworkType();
    }

    /**
     * Create an instance of {@link SavegameType }
     * 
     */
    public SavegameType createSavegameType() {
        return new SavegameType();
    }

    /**
     * Create an instance of {@link TrailsType }
     * 
     */
    public TrailsType createTrailsType() {
        return new TrailsType();
    }

    /**
     * Create an instance of {@link ChannelType }
     * 
     */
    public ChannelType createChannelType() {
        return new ChannelType();
    }

    /**
     * Create an instance of {@link RotationType }
     * 
     */
    public RotationType createRotationType() {
        return new RotationType();
    }

    /**
     * Create an instance of {@link CameraType }
     * 
     */
    public CameraType createCameraType() {
        return new CameraType();
    }

    /**
     * Create an instance of {@link TurretsType }
     * 
     */
    public TurretsType createTurretsType() {
        return new TurretsType();
    }

    /**
     * Create an instance of {@link InfoType }
     * 
     */
    public InfoType createInfoType() {
        return new InfoType();
    }

    /**
     * Create an instance of {@link RelationsType }
     * 
     */
    public RelationsType createRelationsType() {
        return new RelationsType();
    }

    /**
     * Create an instance of {@link FlightcontrolmodelType }
     * 
     */
    public FlightcontrolmodelType createFlightcontrolmodelType() {
        return new FlightcontrolmodelType();
    }

    /**
     * Create an instance of {@link EntityType }
     * 
     */
    public EntityType createEntityType() {
        return new EntityType();
    }

    /**
     * Create an instance of {@link BuildtreeType }
     * 
     */
    public BuildtreeType createBuildtreeType() {
        return new BuildtreeType();
    }

    /**
     * Create an instance of {@link TimeType }
     * 
     */
    public TimeType createTimeType() {
        return new TimeType();
    }

    /**
     * Create an instance of {@link CueType }
     * 
     */
    public CueType createCueType() {
        return new CueType();
    }

    /**
     * Create an instance of {@link ControltextureType }
     * 
     */
    public ControltextureType createControltextureType() {
        return new ControltextureType();
    }

    /**
     * Create an instance of {@link SkillType }
     * 
     */
    public SkillType createSkillType() {
        return new SkillType();
    }

    /**
     * Create an instance of {@link WaresType }
     * 
     */
    public WaresType createWaresType() {
        return new WaresType();
    }

    /**
     * Create an instance of {@link UniverseType }
     * 
     */
    public UniverseType createUniverseType() {
        return new UniverseType();
    }

    /**
     * Create an instance of {@link ParamType }
     * 
     */
    public ParamType createParamType() {
        return new ParamType();
    }

    /**
     * Create an instance of {@link RefType }
     * 
     */
    public RefType createRefType() {
        return new RefType();
    }

    /**
     * Create an instance of {@link GroupType }
     * 
     */
    public GroupType createGroupType() {
        return new GroupType();
    }

    /**
     * Create an instance of {@link AvailableType }
     * 
     */
    public AvailableType createAvailableType() {
        return new AvailableType();
    }

    /**
     * Create an instance of {@link GateType }
     * 
     */
    public GateType createGateType() {
        return new GateType();
    }

    /**
     * Create an instance of {@link UnitType }
     * 
     */
    public UnitType createUnitType() {
        return new UnitType();
    }

    /**
     * Create an instance of {@link LinearType }
     * 
     */
    public LinearType createLinearType() {
        return new LinearType();
    }

    /**
     * Create an instance of {@link AmmunitionType }
     * 
     */
    public AmmunitionType createAmmunitionType() {
        return new AmmunitionType();
    }

    /**
     * Create an instance of {@link LibraryType }
     * 
     */
    public LibraryType createLibraryType() {
        return new LibraryType();
    }

    /**
     * Create an instance of {@link ControlType }
     * 
     */
    public ControlType createControlType() {
        return new ControlType();
    }

    /**
     * Create an instance of {@link FactionsType }
     * 
     */
    public FactionsType createFactionsType() {
        return new FactionsType();
    }

    /**
     * Create an instance of {@link ProductionType }
     * 
     */
    public ProductionType createProductionType() {
        return new ProductionType();
    }

    /**
     * Create an instance of {@link OverridesType }
     * 
     */
    public OverridesType createOverridesType() {
        return new OverridesType();
    }

    /**
     * Create an instance of {@link MasstrafficType }
     * 
     */
    public MasstrafficType createMasstrafficType() {
        return new MasstrafficType();
    }

    /**
     * Create an instance of {@link ControlpointsType }
     * 
     */
    public ControlpointsType createControlpointsType() {
        return new ControlpointsType();
    }

    /**
     * Create an instance of {@link BlackboardType }
     * 
     */
    public BlackboardType createBlackboardType() {
        return new BlackboardType();
    }

    /**
     * Create an instance of {@link RenderType }
     * 
     */
    public RenderType createRenderType() {
        return new RenderType();
    }

    /**
     * Create an instance of {@link BuildType }
     * 
     */
    public BuildType createBuildType() {
        return new BuildType();
    }

    /**
     * Create an instance of {@link CommandType }
     * 
     */
    public CommandType createCommandType() {
        return new CommandType();
    }

    /**
     * Create an instance of {@link MissionsType }
     * 
     */
    public MissionsType createMissionsType() {
        return new MissionsType();
    }

    /**
     * Create an instance of {@link TradeType }
     * 
     */
    public TradeType createTradeType() {
        return new TradeType();
    }

    /**
     * Create an instance of {@link RelationType }
     * 
     */
    public RelationType createRelationType() {
        return new RelationType();
    }

    /**
     * Create an instance of {@link GameType }
     * 
     */
    public GameType createGameType() {
        return new GameType();
    }

    /**
     * Create an instance of {@link DropType }
     * 
     */
    public DropType createDropType() {
        return new DropType();
    }

    /**
     * Create an instance of {@link SnapshotType }
     * 
     */
    public SnapshotType createSnapshotType() {
        return new SnapshotType();
    }

    /**
     * Create an instance of {@link BuyerType }
     * 
     */
    public BuyerType createBuyerType() {
        return new BuyerType();
    }

    /**
     * Create an instance of {@link FloatType }
     * 
     */
    public FloatType createFloatType() {
        return new FloatType();
    }

    /**
     * Create an instance of {@link EventType }
     * 
     */
    public EventType createEventType() {
        return new EventType();
    }

    /**
     * Create an instance of {@link CommanderType }
     * 
     */
    public CommanderType createCommanderType() {
        return new CommanderType();
    }

    /**
     * Create an instance of {@link JumpType }
     * 
     */
    public JumpType createJumpType() {
        return new JumpType();
    }

    /**
     * Create an instance of {@link CountersType }
     * 
     */
    public CountersType createCountersType() {
        return new CountersType();
    }

    /**
     * Create an instance of {@link PersistentType }
     * 
     */
    public PersistentType createPersistentType() {
        return new PersistentType();
    }

    /**
     * Create an instance of {@link InventoryType }
     * 
     */
    public InventoryType createInventoryType() {
        return new InventoryType();
    }

    /**
     * Create an instance of {@link AddonsType }
     * 
     */
    public AddonsType createAddonsType() {
        return new AddonsType();
    }

    /**
     * Create an instance of {@link CameraoffsetType }
     * 
     */
    public CameraoffsetType createCameraoffsetType() {
        return new CameraoffsetType();
    }

    /**
     * Create an instance of {@link CamerasType }
     * 
     */
    public CamerasType createCamerasType() {
        return new CamerasType();
    }

    /**
     * Create an instance of {@link ParameterType }
     * 
     */
    public ParameterType createParameterType() {
        return new ParameterType();
    }

    /**
     * Create an instance of {@link ActorsType }
     * 
     */
    public ActorsType createActorsType() {
        return new ActorsType();
    }

    /**
     * Create an instance of {@link SourceType }
     * 
     */
    public SourceType createSourceType() {
        return new SourceType();
    }

    /**
     * Create an instance of {@link PlayerType }
     * 
     */
    public PlayerType createPlayerType() {
        return new PlayerType();
    }

    /**
     * Create an instance of {@link ScriptType }
     * 
     */
    public ScriptType createScriptType() {
        return new ScriptType();
    }

    /**
     * Create an instance of {@link SignsType }
     * 
     */
    public SignsType createSignsType() {
        return new SignsType();
    }

    /**
     * Create an instance of {@link ItemType }
     * 
     */
    public ItemType createItemType() {
        return new ItemType();
    }

    /**
     * Create an instance of {@link QuotalistType }
     * 
     */
    public QuotalistType createQuotalistType() {
        return new QuotalistType();
    }

    /**
     * Create an instance of {@link EffectType }
     * 
     */
    public EffectType createEffectType() {
        return new EffectType();
    }

    /**
     * Create an instance of {@link EventsType }
     * 
     */
    public EventsType createEventsType() {
        return new EventsType();
    }

    /**
     * Create an instance of {@link DecelerationType }
     * 
     */
    public DecelerationType createDecelerationType() {
        return new DecelerationType();
    }

    /**
     * Create an instance of {@link ActorType }
     * 
     */
    public ActorType createActorType() {
        return new ActorType();
    }

    /**
     * Create an instance of {@link StatType }
     * 
     */
    public StatType createStatType() {
        return new StatType();
    }

    /**
     * Create an instance of {@link UnitsType }
     * 
     */
    public UnitsType createUnitsType() {
        return new UnitsType();
    }

    /**
     * Create an instance of {@link NpcanimationType }
     * 
     */
    public NpcanimationType createNpcanimationType() {
        return new NpcanimationType();
    }

    /**
     * Create an instance of {@link QueueType }
     * 
     */
    public QueueType createQueueType() {
        return new QueueType();
    }

    /**
     * Create an instance of {@link WeaponcycleType }
     * 
     */
    public WeaponcycleType createWeaponcycleType() {
        return new WeaponcycleType();
    }

    /**
     * Create an instance of {@link AccountType }
     * 
     */
    public AccountType createAccountType() {
        return new AccountType();
    }

    /**
     * Create an instance of {@link CounterType }
     * 
     */
    public CounterType createCounterType() {
        return new CounterType();
    }

    /**
     * Create an instance of {@link QuotaType }
     * 
     */
    public QuotaType createQuotaType() {
        return new QuotaType();
    }

    /**
     * Create an instance of {@link LicencesType }
     * 
     */
    public LicencesType createLicencesType() {
        return new LicencesType();
    }

    /**
     * Create an instance of {@link WareType }
     * 
     */
    public WareType createWareType() {
        return new WareType();
    }

    /**
     * Create an instance of {@link TargetpointsType }
     * 
     */
    public TargetpointsType createTargetpointsType() {
        return new TargetpointsType();
    }

    /**
     * Create an instance of {@link StatsType }
     * 
     */
    public StatsType createStatsType() {
        return new StatsType();
    }

    /**
     * Create an instance of {@link UpgradesType }
     * 
     */
    public UpgradesType createUpgradesType() {
        return new UpgradesType();
    }

    /**
     * Create an instance of {@link LastglobalanimationType }
     * 
     */
    public LastglobalanimationType createLastglobalanimationType() {
        return new LastglobalanimationType();
    }

    /**
     * Create an instance of {@link SlotType }
     * 
     */
    public SlotType createSlotType() {
        return new SlotType();
    }

    /**
     * Create an instance of {@link SaveType }
     * 
     */
    public SaveType createSaveType() {
        return new SaveType();
    }

    /**
     * Create an instance of {@link MembersType }
     * 
     */
    public MembersType createMembersType() {
        return new MembersType();
    }

    /**
     * Create an instance of {@link ListenerType }
     * 
     */
    public ListenerType createListenerType() {
        return new ListenerType();
    }

    /**
     * Create an instance of {@link ConnectedType }
     * 
     */
    public ConnectedType createConnectedType() {
        return new ConnectedType();
    }

    /**
     * Create an instance of {@link CycleType }
     * 
     */
    public CycleType createCycleType() {
        return new CycleType();
    }

    /**
     * Create an instance of {@link UiType }
     * 
     */
    public UiType createUiType() {
        return new UiType();
    }

    /**
     * Create an instance of {@link KnownType }
     * 
     */
    public KnownType createKnownType() {
        return new KnownType();
    }

    /**
     * Create an instance of {@link MovementType }
     * 
     */
    public MovementType createMovementType() {
        return new MovementType();
    }

    /**
     * Create an instance of {@link ShootcontrollerType }
     * 
     */
    public ShootcontrollerType createShootcontrollerType() {
        return new ShootcontrollerType();
    }

    /**
     * Create an instance of {@link LicenceType }
     * 
     */
    public LicenceType createLicenceType() {
        return new LicenceType();
    }

    /**
     * Create an instance of {@link FormationType }
     * 
     */
    public FormationType createFormationType() {
        return new FormationType();
    }

    /**
     * Create an instance of {@link FactionType }
     * 
     */
    public FactionType createFactionType() {
        return new FactionType();
    }

    /**
     * Create an instance of {@link BehaviorType }
     * 
     */
    public BehaviorType createBehaviorType() {
        return new BehaviorType();
    }

    /**
     * Create an instance of {@link AllowedType }
     * 
     */
    public AllowedType createAllowedType() {
        return new AllowedType();
    }

    /**
     * Create an instance of {@link AnimationType }
     * 
     */
    public AnimationType createAnimationType() {
        return new AnimationType();
    }

    /**
     * Create an instance of {@link VarsType }
     * 
     */
    public VarsType createVarsType() {
        return new VarsType();
    }

    /**
     * Create an instance of {@link ObjectiveType }
     * 
     */
    public ObjectiveType createObjectiveType() {
        return new ObjectiveType();
    }

    /**
     * Create an instance of {@link ResourcesType }
     * 
     */
    public ResourcesType createResourcesType() {
        return new ResourcesType();
    }

    /**
     * Create an instance of {@link ConnectionType }
     * 
     */
    public ConnectionType createConnectionType() {
        return new ConnectionType();
    }

    /**
     * Create an instance of {@link ShapeType }
     * 
     */
    public ShapeType createShapeType() {
        return new ShapeType();
    }

    /**
     * Create an instance of {@link ShieldsType }
     * 
     */
    public ShieldsType createShieldsType() {
        return new ShieldsType();
    }

    /**
     * Create an instance of {@link InvolvedType }
     * 
     */
    public InvolvedType createInvolvedType() {
        return new InvolvedType();
    }

    /**
     * Create an instance of {@link TargetsType }
     * 
     */
    public TargetsType createTargetsType() {
        return new TargetsType();
    }

    /**
     * Create an instance of {@link SurfaceType }
     * 
     */
    public SurfaceType createSurfaceType() {
        return new SurfaceType();
    }

    /**
     * Create an instance of {@link ProfileType }
     * 
     */
    public ProfileType createProfileType() {
        return new ProfileType();
    }

    /**
     * Create an instance of {@link EfficiencyType }
     * 
     */
    public EfficiencyType createEfficiencyType() {
        return new EfficiencyType();
    }

    /**
     * Create an instance of {@link EntriesType }
     * 
     */
    public EntriesType createEntriesType() {
        return new EntriesType();
    }

    /**
     * Create an instance of {@link InstancesType }
     * 
     */
    public InstancesType createInstancesType() {
        return new InstancesType();
    }

    /**
     * Create an instance of {@link TargetpointType }
     * 
     */
    public TargetpointType createTargetpointType() {
        return new TargetpointType();
    }

    /**
     * Create an instance of {@link GravidarType }
     * 
     */
    public GravidarType createGravidarType() {
        return new GravidarType();
    }

    /**
     * Create an instance of {@link AidirectorType }
     * 
     */
    public AidirectorType createAidirectorType() {
        return new AidirectorType();
    }

    /**
     * Create an instance of {@link QuotasType }
     * 
     */
    public QuotasType createQuotasType() {
        return new QuotasType();
    }

    /**
     * Create an instance of {@link InfluenceType }
     * 
     */
    public InfluenceType createInfluenceType() {
        return new InfluenceType();
    }

    /**
     * Create an instance of {@link TextureType }
     * 
     */
    public TextureType createTextureType() {
        return new TextureType();
    }

    /**
     * Create an instance of {@link SafeposType }
     * 
     */
    public SafeposType createSafeposType() {
        return new SafeposType();
    }

    /**
     * Create an instance of {@link AccelerationType }
     * 
     */
    public AccelerationType createAccelerationType() {
        return new AccelerationType();
    }

    /**
     * Create an instance of {@link MemberType }
     * 
     */
    public MemberType createMemberType() {
        return new MemberType();
    }

    /**
     * Create an instance of {@link SellerType }
     * 
     */
    public SellerType createSellerType() {
        return new SellerType();
    }

    /**
     * Create an instance of {@link AngularType }
     * 
     */
    public AngularType createAngularType() {
        return new AngularType();
    }

    /**
     * Create an instance of {@link UpgradeType }
     * 
     */
    public UpgradeType createUpgradeType() {
        return new UpgradeType();
    }

    /**
     * Create an instance of {@link VolatileType }
     * 
     */
    public VolatileType createVolatileType() {
        return new VolatileType();
    }

    /**
     * Create an instance of {@link CargoType }
     * 
     */
    public CargoType createCargoType() {
        return new CargoType();
    }

    /**
     * Create an instance of {@link PositionType }
     * 
     */
    public PositionType createPositionType() {
        return new PositionType();
    }

    /**
     * Create an instance of {@link ColorType }
     * 
     */
    public ColorType createColorType() {
        return new ColorType();
    }

    /**
     * Create an instance of {@link ControlpointType }
     * 
     */
    public ControlpointType createControlpointType() {
        return new ControlpointType();
    }

    /**
     * Create an instance of {@link OffsetType }
     * 
     */
    public OffsetType createOffsetType() {
        return new OffsetType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link ListenersType }
     * 
     */
    public ListenersType createListenersType() {
        return new ListenersType();
    }

    /**
     * Create an instance of {@link MissionType }
     * 
     */
    public MissionType createMissionType() {
        return new MissionType();
    }

    /**
     * Create an instance of {@link RefsType }
     * 
     */
    public RefsType createRefsType() {
        return new RefsType();
    }

    /**
     * Create an instance of {@link ControltexturesType }
     * 
     */
    public ControltexturesType createControltexturesType() {
        return new ControltexturesType();
    }

    /**
     * Create an instance of {@link ComponentsType }
     * 
     */
    public ComponentsType createComponentsType() {
        return new ComponentsType();
    }

    /**
     * Create an instance of {@link TargetType }
     * 
     */
    public TargetType createTargetType() {
        return new TargetType();
    }

    /**
     * Create an instance of {@link PatchesType }
     * 
     */
    public PatchesType createPatchesType() {
        return new PatchesType();
    }

    /**
     * Create an instance of {@link TintType }
     * 
     */
    public TintType createTintType() {
        return new TintType();
    }

    /**
     * Create an instance of {@link PartType }
     * 
     */
    public PartType createPartType() {
        return new PartType();
    }

    /**
     * Create an instance of {@link MdType }
     * 
     */
    public MdType createMdType() {
        return new MdType();
    }

    /**
     * Create an instance of {@link UnavailableType }
     * 
     */
    public UnavailableType createUnavailableType() {
        return new UnavailableType();
    }

    /**
     * Create an instance of {@link BriefingType }
     * 
     */
    public BriefingType createBriefingType() {
        return new BriefingType();
    }

    /**
     * Create an instance of {@link TrailType }
     * 
     */
    public TrailType createTrailType() {
        return new TrailType();
    }

    /**
     * Create an instance of {@link BoostType }
     * 
     */
    public BoostType createBoostType() {
        return new BoostType();
    }

    /**
     * Create an instance of {@link ConnectionsType }
     * 
     */
    public ConnectionsType createConnectionsType() {
        return new ConnectionsType();
    }

    /**
     * Create an instance of {@link OrdersType }
     * 
     */
    public OrdersType createOrdersType() {
        return new OrdersType();
    }

    /**
     * Create an instance of {@link ScanType }
     * 
     */
    public ScanType createScanType() {
        return new ScanType();
    }

    /**
     * Create an instance of {@link SummaryType }
     * 
     */
    public SummaryType createSummaryType() {
        return new SummaryType();
    }

    /**
     * Create an instance of {@link PatchType }
     * 
     */
    public PatchType createPatchType() {
        return new PatchType();
    }

    /**
     * Create an instance of {@link AnimationsType }
     * 
     */
    public AnimationsType createAnimationsType() {
        return new AnimationsType();
    }

    /**
     * Create an instance of {@link DataType }
     * 
     */
    public DataType createDataType() {
        return new DataType();
    }

    /**
     * Create an instance of {@link NpcseedType }
     * 
     */
    public NpcseedType createNpcseedType() {
        return new NpcseedType();
    }

    /**
     * Create an instance of {@link EntryType }
     * 
     */
    public EntryType createEntryType() {
        return new EntryType();
    }

    /**
     * Create an instance of {@link QuotalistsType }
     * 
     */
    public QuotalistsType createQuotalistsType() {
        return new QuotalistsType();
    }

    /**
     * Create an instance of {@link InfluencesType }
     * 
     */
    public InfluencesType createInfluencesType() {
        return new InfluencesType();
    }

    /**
     * Create an instance of {@link OverrideType }
     * 
     */
    public OverrideType createOverrideType() {
        return new OverrideType();
    }

    /**
     * Create an instance of {@link StorageType }
     * 
     */
    public StorageType createStorageType() {
        return new StorageType();
    }

    /**
     * Create an instance of {@link OffersType }
     * 
     */
    public OffersType createOffersType() {
        return new OffersType();
    }

    /**
     * Create an instance of {@link HullType }
     * 
     */
    public HullType createHullType() {
        return new HullType();
    }

    /**
     * Create an instance of {@link VelocityType }
     * 
     */
    public VelocityType createVelocityType() {
        return new VelocityType();
    }

    /**
     * Create an instance of {@link ObjectType }
     * 
     */
    public ObjectType createObjectType() {
        return new ObjectType();
    }

    /**
     * Create an instance of {@link SkillsType }
     * 
     */
    public SkillsType createSkillsType() {
        return new SkillsType();
    }

    /**
     * Create an instance of {@link ReadType.Acceleration }
     * 
     */
    public ReadType.Acceleration createReadTypeAcceleration() {
        return new ReadType.Acceleration();
    }

    /**
     * Create an instance of {@link ComponentType.Gravidar }
     * 
     */
    public ComponentType.Gravidar createComponentTypeGravidar() {
        return new ComponentType.Gravidar();
    }

    /**
     * Create an instance of {@link WriteType.Acceleration }
     * 
     */
    public WriteType.Acceleration createWriteTypeAcceleration() {
        return new WriteType.Acceleration();
    }

    /**
     * Create an instance of {@link NetworkType.Quotalists }
     * 
     */
    public NetworkType.Quotalists createNetworkTypeQuotalists() {
        return new NetworkType.Quotalists();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SavegameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "savegame")
    public JAXBElement<SavegameType> createSavegame(SavegameType value) {
        return new JAXBElement<SavegameType>(_Savegame_QNAME, SavegameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "relation", scope = RelationsType.class)
    public JAXBElement<RelationType> createRelationsTypeRelation(RelationType value) {
        return new JAXBElement<RelationType>(_RelationsTypeRelation_QNAME, RelationType.class, RelationsType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TargetpointType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "targetpoint", scope = TargetpointsType.class)
    public JAXBElement<TargetpointType> createTargetpointsTypeTargetpoint(TargetpointType value) {
        return new JAXBElement<TargetpointType>(_TargetpointsTypeTargetpoint_QNAME, TargetpointType.class, TargetpointsType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "item", scope = QueueType.class)
    public JAXBElement<ItemType> createQueueTypeItem(ItemType value) {
        return new JAXBElement<ItemType>(_QueueTypeItem_QNAME, ItemType.class, QueueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EfficiencyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "efficiency", scope = QueueType.class)
    public JAXBElement<EfficiencyType> createQueueTypeEfficiency(EfficiencyType value) {
        return new JAXBElement<EfficiencyType>(_QueueTypeEfficiency_QNAME, EfficiencyType.class, QueueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "source", scope = TradeType.class)
    public JAXBElement<SourceType> createTradeTypeSource(SourceType value) {
        return new JAXBElement<SourceType>(_TradeTypeSource_QNAME, SourceType.class, TradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OffersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "offers", scope = TradeType.class)
    public JAXBElement<OffersType> createTradeTypeOffers(OffersType value) {
        return new JAXBElement<OffersType>(_TradeTypeOffers_QNAME, OffersType.class, TradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BuyerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "buyer", scope = TradeType.class)
    public JAXBElement<BuyerType> createTradeTypeBuyer(BuyerType value) {
        return new JAXBElement<BuyerType>(_TradeTypeBuyer_QNAME, BuyerType.class, TradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OrdersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "orders", scope = TradeType.class)
    public JAXBElement<OrdersType> createTradeTypeOrders(OrdersType value) {
        return new JAXBElement<OrdersType>(_TradeTypeOrders_QNAME, OrdersType.class, TradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SellerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "seller", scope = TradeType.class)
    public JAXBElement<SellerType> createTradeTypeSeller(SellerType value) {
        return new JAXBElement<SellerType>(_TradeTypeSeller_QNAME, SellerType.class, TradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VarsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "vars", scope = ScriptType.class)
    public JAXBElement<VarsType> createScriptTypeVars(VarsType value) {
        return new JAXBElement<VarsType>(_ScriptTypeVars_QNAME, VarsType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RefsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "refs", scope = ScriptType.class)
    public JAXBElement<RefsType> createScriptTypeRefs(RefsType value) {
        return new JAXBElement<RefsType>(_ScriptTypeRefs_QNAME, RefsType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommandType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "command", scope = ScriptType.class)
    public JAXBElement<CommandType> createScriptTypeCommand(CommandType value) {
        return new JAXBElement<CommandType>(_ScriptTypeCommand_QNAME, CommandType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LibraryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "library", scope = ScriptType.class)
    public JAXBElement<LibraryType> createScriptTypeLibrary(LibraryType value) {
        return new JAXBElement<LibraryType>(_ScriptTypeLibrary_QNAME, LibraryType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CountersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "counters", scope = ScriptType.class)
    public JAXBElement<CountersType> createScriptTypeCounters(CountersType value) {
        return new JAXBElement<CountersType>(_ScriptTypeCounters_QNAME, CountersType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cue", scope = ScriptType.class)
    public JAXBElement<CueType> createScriptTypeCue(CueType value) {
        return new JAXBElement<CueType>(_ScriptTypeCue_QNAME, CueType.class, ScriptType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UpgradeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "upgrade", scope = RefType.class)
    public JAXBElement<UpgradeType> createRefTypeUpgrade(UpgradeType value) {
        return new JAXBElement<UpgradeType>(_RefTypeUpgrade_QNAME, UpgradeType.class, RefType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "value", scope = RefType.class)
    public JAXBElement<ValueType> createRefTypeValue(ValueType value) {
        return new JAXBElement<ValueType>(_RefTypeValue_QNAME, ValueType.class, RefType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MembersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "members", scope = RefType.class)
    public JAXBElement<MembersType> createRefTypeMembers(MembersType value) {
        return new JAXBElement<MembersType>(_RefTypeMembers_QNAME, MembersType.class, RefType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UpgradeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "upgrade", scope = UpgradeType.class)
    public JAXBElement<UpgradeType> createUpgradeTypeUpgrade(UpgradeType value) {
        return new JAXBElement<UpgradeType>(_RefTypeUpgrade_QNAME, UpgradeType.class, UpgradeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShapeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "shape", scope = FormationType.class)
    public JAXBElement<ShapeType> createFormationTypeShape(ShapeType value) {
        return new JAXBElement<ShapeType>(_FormationTypeShape_QNAME, ShapeType.class, FormationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MembersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "members", scope = FormationType.class)
    public JAXBElement<MembersType> createFormationTypeMembers(MembersType value) {
        return new JAXBElement<MembersType>(_RefTypeMembers_QNAME, MembersType.class, FormationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OffsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "offset", scope = TargetpointType.class)
    public JAXBElement<OffsetType> createTargetpointTypeOffset(OffsetType value) {
        return new JAXBElement<OffsetType>(_TargetpointTypeOffset_QNAME, OffsetType.class, TargetpointType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "control", scope = FloatType.class)
    public JAXBElement<ControlType> createFloatTypeControl(ControlType value) {
        return new JAXBElement<ControlType>(_FloatTypeControl_QNAME, ControlType.class, FloatType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "linear", scope = ReadType.Acceleration.class)
    public JAXBElement<LinearType> createReadTypeAccelerationLinear(LinearType value) {
        return new JAXBElement<LinearType>(_ReadTypeAccelerationLinear_QNAME, LinearType.class, ReadType.Acceleration.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AngularType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "angular", scope = ReadType.Acceleration.class)
    public JAXBElement<AngularType> createReadTypeAccelerationAngular(AngularType value) {
        return new JAXBElement<AngularType>(_ReadTypeAccelerationAngular_QNAME, AngularType.class, ReadType.Acceleration.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ObjectiveType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "objective", scope = MissionType.class)
    public JAXBElement<ObjectiveType> createMissionTypeObjective(ObjectiveType value) {
        return new JAXBElement<ObjectiveType>(_MissionTypeObjective_QNAME, ObjectiveType.class, MissionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TradeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "trade", scope = MissionType.class)
    public JAXBElement<TradeType> createMissionTypeTrade(TradeType value) {
        return new JAXBElement<TradeType>(_MissionTypeTrade_QNAME, TradeType.class, MissionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BriefingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "briefing", scope = MissionType.class)
    public JAXBElement<BriefingType> createMissionTypeBriefing(BriefingType value) {
        return new JAXBElement<BriefingType>(_MissionTypeBriefing_QNAME, BriefingType.class, MissionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VarsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "vars", scope = CueType.class)
    public JAXBElement<VarsType> createCueTypeVars(VarsType value) {
        return new JAXBElement<VarsType>(_ScriptTypeVars_QNAME, VarsType.class, CueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActorsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "actors", scope = CueType.class)
    public JAXBElement<ActorsType> createCueTypeActors(ActorsType value) {
        return new JAXBElement<ActorsType>(_CueTypeActors_QNAME, ActorsType.class, CueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstancesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "instances", scope = CueType.class)
    public JAXBElement<InstancesType> createCueTypeInstances(InstancesType value) {
        return new JAXBElement<InstancesType>(_CueTypeInstances_QNAME, InstancesType.class, CueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cue", scope = CueType.class)
    public JAXBElement<CueType> createCueTypeCue(CueType value) {
        return new JAXBElement<CueType>(_ScriptTypeCue_QNAME, CueType.class, CueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnavailableType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "unavailable", scope = AmmunitionType.class)
    public JAXBElement<UnavailableType> createAmmunitionTypeUnavailable(UnavailableType value) {
        return new JAXBElement<UnavailableType>(_AmmunitionTypeUnavailable_QNAME, UnavailableType.class, AmmunitionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AvailableType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "available", scope = AmmunitionType.class)
    public JAXBElement<AvailableType> createAmmunitionTypeAvailable(AvailableType value) {
        return new JAXBElement<AvailableType>(_AmmunitionTypeAvailable_QNAME, AvailableType.class, AmmunitionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConnectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "connection", scope = ConnectionsType.class)
    public JAXBElement<ConnectionType> createConnectionsTypeConnection(ConnectionType value) {
        return new JAXBElement<ConnectionType>(_ConnectionsTypeConnection_QNAME, ConnectionType.class, ConnectionsType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ResourcesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "resources", scope = BuildType.class)
    public JAXBElement<ResourcesType> createBuildTypeResources(ResourcesType value) {
        return new JAXBElement<ResourcesType>(_BuildTypeResources_QNAME, ResourcesType.class, BuildType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "components", scope = BuildType.class)
    public JAXBElement<ComponentsType> createBuildTypeComponents(ComponentsType value) {
        return new JAXBElement<ComponentsType>(_BuildTypeComponents_QNAME, ComponentsType.class, BuildType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnitsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "units", scope = BuildType.class)
    public JAXBElement<UnitsType> createBuildTypeUnits(UnitsType value) {
        return new JAXBElement<UnitsType>(_BuildTypeUnits_QNAME, UnitsType.class, BuildType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WareType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ware", scope = SummaryType.class)
    public JAXBElement<WareType> createSummaryTypeWare(WareType value) {
        return new JAXBElement<WareType>(_SummaryTypeWare_QNAME, WareType.class, SummaryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ScriptType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "script", scope = EntityType.class)
    public JAXBElement<ScriptType> createEntityTypeScript(ScriptType value) {
        return new JAXBElement<ScriptType>(_EntityTypeScript_QNAME, ScriptType.class, EntityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WriteType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "write", scope = PositionType.class)
    public JAXBElement<WriteType> createPositionTypeWrite(WriteType value) {
        return new JAXBElement<WriteType>(_PositionTypeWrite_QNAME, WriteType.class, PositionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReadType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "read", scope = PositionType.class)
    public JAXBElement<ReadType> createPositionTypeRead(ReadType value) {
        return new JAXBElement<ReadType>(_PositionTypeRead_QNAME, ReadType.class, PositionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuotalistType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "quotalist", scope = NetworkType.Quotalists.class)
    public JAXBElement<QuotalistType> createNetworkTypeQuotalistsQuotalist(QuotalistType value) {
        return new JAXBElement<QuotalistType>(_NetworkTypeQuotalistsQuotalist_QNAME, QuotalistType.class, NetworkType.Quotalists.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "linear", scope = WriteType.Acceleration.class)
    public JAXBElement<LinearType> createWriteTypeAccelerationLinear(LinearType value) {
        return new JAXBElement<LinearType>(_ReadTypeAccelerationLinear_QNAME, LinearType.class, WriteType.Acceleration.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AngularType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "angular", scope = WriteType.Acceleration.class)
    public JAXBElement<AngularType> createWriteTypeAccelerationAngular(AngularType value) {
        return new JAXBElement<AngularType>(_ReadTypeAccelerationAngular_QNAME, AngularType.class, WriteType.Acceleration.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "component", scope = ConnectionType.class)
    public JAXBElement<ComponentType> createConnectionTypeComponent(ComponentType value) {
        return new JAXBElement<ComponentType>(_ConnectionTypeComponent_QNAME, ComponentType.class, ConnectionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConnectedType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "connected", scope = ConnectionType.class)
    public JAXBElement<ConnectedType> createConnectionTypeConnected(ConnectedType value) {
        return new JAXBElement<ConnectedType>(_ConnectionTypeConnected_QNAME, ConnectedType.class, ConnectionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BehaviorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "behavior", scope = FlightcontrolmodelType.class)
    public JAXBElement<BehaviorType> createFlightcontrolmodelTypeBehavior(BehaviorType value) {
        return new JAXBElement<BehaviorType>(_FlightcontrolmodelTypeBehavior_QNAME, BehaviorType.class, FlightcontrolmodelType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "control", scope = ValueType.class)
    public JAXBElement<ControlType> createValueTypeControl(ControlType value) {
        return new JAXBElement<ControlType>(_FloatTypeControl_QNAME, ControlType.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VarsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "vars", scope = LibraryType.class)
    public JAXBElement<VarsType> createLibraryTypeVars(VarsType value) {
        return new JAXBElement<VarsType>(_ScriptTypeVars_QNAME, VarsType.class, LibraryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActorsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "actors", scope = LibraryType.class)
    public JAXBElement<ActorsType> createLibraryTypeActors(ActorsType value) {
        return new JAXBElement<ActorsType>(_CueTypeActors_QNAME, ActorsType.class, LibraryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstancesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "instances", scope = LibraryType.class)
    public JAXBElement<InstancesType> createLibraryTypeInstances(InstancesType value) {
        return new JAXBElement<InstancesType>(_CueTypeInstances_QNAME, InstancesType.class, LibraryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cue", scope = LibraryType.class)
    public JAXBElement<CueType> createLibraryTypeCue(CueType value) {
        return new JAXBElement<CueType>(_ScriptTypeCue_QNAME, CueType.class, LibraryType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SafeposType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "safepos", scope = EventType.class)
    public JAXBElement<SafeposType> createEventTypeSafepos(SafeposType value) {
        return new JAXBElement<SafeposType>(_EventTypeSafepos_QNAME, SafeposType.class, EventType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TradeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "trade", scope = EventType.class)
    public JAXBElement<TradeType> createEventTypeTrade(TradeType value) {
        return new JAXBElement<TradeType>(_MissionTypeTrade_QNAME, TradeType.class, EventType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OffsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "offset", scope = EventType.class)
    public JAXBElement<OffsetType> createEventTypeOffset(OffsetType value) {
        return new JAXBElement<OffsetType>(_TargetpointTypeOffset_QNAME, OffsetType.class, EventType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "linear", scope = VelocityType.class)
    public JAXBElement<LinearType> createVelocityTypeLinear(LinearType value) {
        return new JAXBElement<LinearType>(_ReadTypeAccelerationLinear_QNAME, LinearType.class, VelocityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AngularType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "angular", scope = VelocityType.class)
    public JAXBElement<AngularType> createVelocityTypeAngular(AngularType value) {
        return new JAXBElement<AngularType>(_ReadTypeAccelerationAngular_QNAME, AngularType.class, VelocityType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TargetsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "targets", scope = ObjectiveType.class)
    public JAXBElement<TargetsType> createObjectiveTypeTargets(TargetsType value) {
        return new JAXBElement<TargetsType>(_ObjectiveTypeTargets_QNAME, TargetsType.class, ObjectiveType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SkillsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "skills", scope = ComponentType.class)
    public JAXBElement<SkillsType> createComponentTypeSkills(SkillsType value) {
        return new JAXBElement<SkillsType>(_ComponentTypeSkills_QNAME, SkillsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnimationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "animations", scope = ComponentType.class)
    public JAXBElement<AnimationsType> createComponentTypeAnimations(AnimationsType value) {
        return new JAXBElement<AnimationsType>(_ComponentTypeAnimations_QNAME, AnimationsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SurfaceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "surface", scope = ComponentType.class)
    public JAXBElement<SurfaceType> createComponentTypeSurface(SurfaceType value) {
        return new JAXBElement<SurfaceType>(_ComponentTypeSurface_QNAME, SurfaceType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MasstrafficType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "masstraffic", scope = ComponentType.class)
    public JAXBElement<MasstrafficType> createComponentTypeMasstraffic(MasstrafficType value) {
        return new JAXBElement<MasstrafficType>(_ComponentTypeMasstraffic_QNAME, MasstrafficType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NpcseedType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "npcseed", scope = ComponentType.class)
    public JAXBElement<NpcseedType> createComponentTypeNpcseed(NpcseedType value) {
        return new JAXBElement<NpcseedType>(_ComponentTypeNpcseed_QNAME, NpcseedType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TradeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "trade", scope = ComponentType.class)
    public JAXBElement<TradeType> createComponentTypeTrade(TradeType value) {
        return new JAXBElement<TradeType>(_MissionTypeTrade_QNAME, TradeType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EventsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "events", scope = ComponentType.class)
    public JAXBElement<EventsType> createComponentTypeEvents(EventsType value) {
        return new JAXBElement<EventsType>(_ComponentTypeEvents_QNAME, EventsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DropType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "drop", scope = ComponentType.class)
    public JAXBElement<DropType> createComponentTypeDrop(DropType value) {
        return new JAXBElement<DropType>(_ComponentTypeDrop_QNAME, DropType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EntityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "entity", scope = ComponentType.class)
    public JAXBElement<EntityType> createComponentTypeEntity(EntityType value) {
        return new JAXBElement<EntityType>(_ComponentTypeEntity_QNAME, EntityType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InfluencesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "influences", scope = ComponentType.class)
    public JAXBElement<InfluencesType> createComponentTypeInfluences(InfluencesType value) {
        return new JAXBElement<InfluencesType>(_ComponentTypeInfluences_QNAME, InfluencesType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HullType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "hull", scope = ComponentType.class)
    public JAXBElement<HullType> createComponentTypeHull(HullType value) {
        return new JAXBElement<HullType>(_ComponentTypeHull_QNAME, HullType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BuildType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "build", scope = ComponentType.class)
    public JAXBElement<BuildType> createComponentTypeBuild(BuildType value) {
        return new JAXBElement<BuildType>(_ComponentTypeBuild_QNAME, BuildType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "production", scope = ComponentType.class)
    public JAXBElement<ProductionType> createComponentTypeProduction(ProductionType value) {
        return new JAXBElement<ProductionType>(_ComponentTypeProduction_QNAME, ProductionType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CargoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cargo", scope = ComponentType.class)
    public JAXBElement<CargoType> createComponentTypeCargo(CargoType value) {
        return new JAXBElement<CargoType>(_ComponentTypeCargo_QNAME, CargoType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NpcanimationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "npcanimation", scope = ComponentType.class)
    public JAXBElement<NpcanimationType> createComponentTypeNpcanimation(NpcanimationType value) {
        return new JAXBElement<NpcanimationType>(_ComponentTypeNpcanimation_QNAME, NpcanimationType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShootcontrollerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "shootcontroller", scope = ComponentType.class)
    public JAXBElement<ShootcontrollerType> createComponentTypeShootcontroller(ShootcontrollerType value) {
        return new JAXBElement<ShootcontrollerType>(_ComponentTypeShootcontroller_QNAME, ShootcontrollerType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MovementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "movement", scope = ComponentType.class)
    public JAXBElement<MovementType> createComponentTypeMovement(MovementType value) {
        return new JAXBElement<MovementType>(_ComponentTypeMovement_QNAME, MovementType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TurretsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "turrets", scope = ComponentType.class)
    public JAXBElement<TurretsType> createComponentTypeTurrets(TurretsType value) {
        return new JAXBElement<TurretsType>(_ComponentTypeTurrets_QNAME, TurretsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConnectionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "connections", scope = ComponentType.class)
    public JAXBElement<ConnectionsType> createComponentTypeConnections(ConnectionsType value) {
        return new JAXBElement<ConnectionsType>(_ComponentTypeConnections_QNAME, ConnectionsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TrailsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "trails", scope = ComponentType.class)
    public JAXBElement<TrailsType> createComponentTypeTrails(TrailsType value) {
        return new JAXBElement<TrailsType>(_ComponentTypeTrails_QNAME, TrailsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OffsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "offset", scope = ComponentType.class)
    public JAXBElement<OffsetType> createComponentTypeOffset(OffsetType value) {
        return new JAXBElement<OffsetType>(_TargetpointTypeOffset_QNAME, OffsetType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WaresType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "wares", scope = ComponentType.class)
    public JAXBElement<WaresType> createComponentTypeWares(WaresType value) {
        return new JAXBElement<WaresType>(_ComponentTypeWares_QNAME, WaresType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SignsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "signs", scope = ComponentType.class)
    public JAXBElement<SignsType> createComponentTypeSigns(SignsType value) {
        return new JAXBElement<SignsType>(_ComponentTypeSigns_QNAME, SignsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ListenersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "listeners", scope = ComponentType.class)
    public JAXBElement<ListenersType> createComponentTypeListeners(ListenersType value) {
        return new JAXBElement<ListenersType>(_ComponentTypeListeners_QNAME, ListenersType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UpgradesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "upgrades", scope = ComponentType.class)
    public JAXBElement<UpgradesType> createComponentTypeUpgrades(UpgradesType value) {
        return new JAXBElement<UpgradesType>(_ComponentTypeUpgrades_QNAME, UpgradesType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AmmunitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ammunition", scope = ComponentType.class)
    public JAXBElement<AmmunitionType> createComponentTypeAmmunition(AmmunitionType value) {
        return new JAXBElement<AmmunitionType>(_ComponentTypeAmmunition_QNAME, AmmunitionType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SnapshotType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "snapshot", scope = ComponentType.class)
    public JAXBElement<SnapshotType> createComponentTypeSnapshot(SnapshotType value) {
        return new JAXBElement<SnapshotType>(_ComponentTypeSnapshot_QNAME, SnapshotType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TintType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tint", scope = ComponentType.class)
    public JAXBElement<TintType> createComponentTypeTint(TintType value) {
        return new JAXBElement<TintType>(_ComponentTypeTint_QNAME, TintType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LastglobalanimationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lastglobalanimation", scope = ComponentType.class)
    public JAXBElement<LastglobalanimationType> createComponentTypeLastglobalanimation(LastglobalanimationType value) {
        return new JAXBElement<LastglobalanimationType>(_ComponentTypeLastglobalanimation_QNAME, LastglobalanimationType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControltextureType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "controltexture", scope = ComponentType.class)
    public JAXBElement<ControltextureType> createComponentTypeControltexture(ControltextureType value) {
        return new JAXBElement<ControltextureType>(_ComponentTypeControltexture_QNAME, ControltextureType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JumpType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "jump", scope = ComponentType.class)
    public JAXBElement<JumpType> createComponentTypeJump(JumpType value) {
        return new JAXBElement<JumpType>(_ComponentTypeJump_QNAME, JumpType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "gate", scope = ComponentType.class)
    public JAXBElement<GateType> createComponentTypeGate(GateType value) {
        return new JAXBElement<GateType>(_ComponentTypeGate_QNAME, GateType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RenderType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "render", scope = ComponentType.class)
    public JAXBElement<RenderType> createComponentTypeRender(RenderType value) {
        return new JAXBElement<RenderType>(_ComponentTypeRender_QNAME, RenderType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShieldsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "shields", scope = ComponentType.class)
    public JAXBElement<ShieldsType> createComponentTypeShields(ShieldsType value) {
        return new JAXBElement<ShieldsType>(_ComponentTypeShields_QNAME, ShieldsType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommanderType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "commander", scope = ComponentType.class)
    public JAXBElement<CommanderType> createComponentTypeCommander(CommanderType value) {
        return new JAXBElement<CommanderType>(_ComponentTypeCommander_QNAME, CommanderType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EffectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "effect", scope = ComponentType.class)
    public JAXBElement<EffectType> createComponentTypeEffect(EffectType value) {
        return new JAXBElement<EffectType>(_ComponentTypeEffect_QNAME, EffectType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BlackboardType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "blackboard", scope = ComponentType.class)
    public JAXBElement<BlackboardType> createComponentTypeBlackboard(BlackboardType value) {
        return new JAXBElement<BlackboardType>(_ComponentTypeBlackboard_QNAME, BlackboardType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "source", scope = ComponentType.class)
    public JAXBElement<SourceType> createComponentTypeSource(SourceType value) {
        return new JAXBElement<SourceType>(_TradeTypeSource_QNAME, SourceType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InventoryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "inventory", scope = ComponentType.class)
    public JAXBElement<InventoryType> createComponentTypeInventory(InventoryType value) {
        return new JAXBElement<InventoryType>(_ComponentTypeInventory_QNAME, InventoryType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentType.Gravidar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "gravidar", scope = ComponentType.class)
    public JAXBElement<ComponentType.Gravidar> createComponentTypeGravidar(ComponentType.Gravidar value) {
        return new JAXBElement<ComponentType.Gravidar>(_ComponentTypeGravidar_QNAME, ComponentType.Gravidar.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AccountType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "account", scope = ComponentType.class)
    public JAXBElement<AccountType> createComponentTypeAccount(AccountType value) {
        return new JAXBElement<AccountType>(_ComponentTypeAccount_QNAME, AccountType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ScanType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "scan", scope = ComponentType.class)
    public JAXBElement<ScanType> createComponentTypeScan(ScanType value) {
        return new JAXBElement<ScanType>(_ComponentTypeScan_QNAME, ScanType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BoostType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "boost", scope = ComponentType.class)
    public JAXBElement<BoostType> createComponentTypeBoost(BoostType value) {
        return new JAXBElement<BoostType>(_ComponentTypeBoost_QNAME, BoostType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WeaponcycleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "weaponcycle", scope = ComponentType.class)
    public JAXBElement<WeaponcycleType> createComponentTypeWeaponcycle(WeaponcycleType value) {
        return new JAXBElement<WeaponcycleType>(_ComponentTypeWeaponcycle_QNAME, WeaponcycleType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KnownType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "known", scope = ComponentType.class)
    public JAXBElement<KnownType> createComponentTypeKnown(KnownType value) {
        return new JAXBElement<KnownType>(_ComponentTypeKnown_QNAME, KnownType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StorageType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "storage", scope = ComponentType.class)
    public JAXBElement<StorageType> createComponentTypeStorage(StorageType value) {
        return new JAXBElement<StorageType>(_ComponentTypeStorage_QNAME, StorageType.class, ComponentType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VolatileType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "volatile", scope = ParameterType.class)
    public JAXBElement<VolatileType> createParameterTypeVolatile(VolatileType value) {
        return new JAXBElement<VolatileType>(_ParameterTypeVolatile_QNAME, VolatileType.class, ParameterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PersistentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "persistent", scope = ParameterType.class)
    public JAXBElement<PersistentType> createParameterTypePersistent(PersistentType value) {
        return new JAXBElement<PersistentType>(_ParameterTypePersistent_QNAME, PersistentType.class, ParameterType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParamType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "param", scope = CommandType.class)
    public JAXBElement<ParamType> createCommandTypeParam(ParamType value) {
        return new JAXBElement<ParamType>(_CommandTypeParam_QNAME, ParamType.class, CommandType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "control", scope = PartType.class)
    public JAXBElement<ControlType> createPartTypeControl(ControlType value) {
        return new JAXBElement<ControlType>(_FloatTypeControl_QNAME, ControlType.class, PartType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PositionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "position", scope = MovementType.class)
    public JAXBElement<PositionType> createMovementTypePosition(PositionType value) {
        return new JAXBElement<PositionType>(_MovementTypePosition_QNAME, PositionType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CameraoffsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "cameraoffset", scope = MovementType.class)
    public JAXBElement<CameraoffsetType> createMovementTypeCameraoffset(CameraoffsetType value) {
        return new JAXBElement<CameraoffsetType>(_MovementTypeCameraoffset_QNAME, CameraoffsetType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TimeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "time", scope = MovementType.class)
    public JAXBElement<TimeType> createMovementTypeTime(TimeType value) {
        return new JAXBElement<TimeType>(_MovementTypeTime_QNAME, TimeType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnimationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "animation", scope = MovementType.class)
    public JAXBElement<AnimationType> createMovementTypeAnimation(AnimationType value) {
        return new JAXBElement<AnimationType>(_MovementTypeAnimation_QNAME, AnimationType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TargetpointsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "targetpoints", scope = MovementType.class)
    public JAXBElement<TargetpointsType> createMovementTypeTargetpoints(TargetpointsType value) {
        return new JAXBElement<TargetpointsType>(_MovementTypeTargetpoints_QNAME, TargetpointsType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlightcontrolmodelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "flightcontrolmodel", scope = MovementType.class)
    public JAXBElement<FlightcontrolmodelType> createMovementTypeFlightcontrolmodel(FlightcontrolmodelType value) {
        return new JAXBElement<FlightcontrolmodelType>(_MovementTypeFlightcontrolmodel_QNAME, FlightcontrolmodelType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AccelerationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "acceleration", scope = MovementType.class)
    public JAXBElement<AccelerationType> createMovementTypeAcceleration(AccelerationType value) {
        return new JAXBElement<AccelerationType>(_MovementTypeAcceleration_QNAME, AccelerationType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VelocityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "velocity", scope = MovementType.class)
    public JAXBElement<VelocityType> createMovementTypeVelocity(VelocityType value) {
        return new JAXBElement<VelocityType>(_MovementTypeVelocity_QNAME, VelocityType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "transition", scope = MovementType.class)
    public JAXBElement<String> createMovementTypeTransition(String value) {
        return new JAXBElement<String>(_MovementTypeTransition_QNAME, String.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DecelerationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "deceleration", scope = MovementType.class)
    public JAXBElement<DecelerationType> createMovementTypeDeceleration(DecelerationType value) {
        return new JAXBElement<DecelerationType>(_MovementTypeDeceleration_QNAME, DecelerationType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OffsetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "offset", scope = MovementType.class)
    public JAXBElement<OffsetType> createMovementTypeOffset(OffsetType value) {
        return new JAXBElement<OffsetType>(_TargetpointTypeOffset_QNAME, OffsetType.class, MovementType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FormationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "formation", scope = MovementType.class)
    public JAXBElement<FormationType> createMovementTypeFormation(FormationType value) {
        return new JAXBElement<FormationType>(_MovementTypeFormation_QNAME, FormationType.class, MovementType.class, value);
    }

}
