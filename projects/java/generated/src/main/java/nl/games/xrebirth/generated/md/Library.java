//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.28 at 11:19:24 PM CET 
//


package nl.games.xrebirth.generated.md;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *         A library cue
 *       
 * 
 * <p>Java class for library complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="library">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="documentation" type="{}cuedoc" minOccurs="0"/>
 *         &lt;element name="params" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *                   &lt;element name="param">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="name" use="required" type="{}paramname" />
 *                           &lt;attribute name="default" type="{}expression" />
 *                           &lt;attribute name="comment" type="{}comment" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;group ref="{}cue"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{}cue"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "library", propOrder = {
    "documentation",
    "params",
    "conditions",
    "delay",
    "actions",
    "force",
    "patch",
    "cues"
})
public class Library {

    protected Cuedoc documentation;
    protected Library.Params params;
    protected Library.Conditions conditions;
    protected Library.Delay delay;
    protected Library.Actions actions;
    protected Library.Force force;
    protected Library.Patch patch;
    protected Cues cues;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "version")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger version;
    @XmlAttribute(name = "module")
    protected String module;
    @XmlAttribute(name = "namespace")
    protected Namespacelookup namespace;
    @XmlAttribute(name = "instantiate")
    protected Boolean instantiate;
    @XmlAttribute(name = "checktime")
    protected String checktime;
    @XmlAttribute(name = "checkinterval")
    protected String checkinterval;
    @XmlAttribute(name = "onfail")
    protected Onfaillookup onfail;
    @XmlAttribute(name = "comment")
    protected String comment;

    /**
     * Gets the value of the documentation property.
     * 
     * @return
     *     possible object is
     *     {@link Cuedoc }
     *     
     */
    public Cuedoc getDocumentation() {
        return documentation;
    }

    /**
     * Sets the value of the documentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Cuedoc }
     *     
     */
    public void setDocumentation(Cuedoc value) {
        this.documentation = value;
    }

    /**
     * Gets the value of the params property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Params }
     *     
     */
    public Library.Params getParams() {
        return params;
    }

    /**
     * Sets the value of the params property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Params }
     *     
     */
    public void setParams(Library.Params value) {
        this.params = value;
    }

    /**
     * Gets the value of the conditions property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Conditions }
     *     
     */
    public Library.Conditions getConditions() {
        return conditions;
    }

    /**
     * Sets the value of the conditions property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Conditions }
     *     
     */
    public void setConditions(Library.Conditions value) {
        this.conditions = value;
    }

    /**
     * Gets the value of the delay property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Delay }
     *     
     */
    public Library.Delay getDelay() {
        return delay;
    }

    /**
     * Sets the value of the delay property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Delay }
     *     
     */
    public void setDelay(Library.Delay value) {
        this.delay = value;
    }

    /**
     * Gets the value of the actions property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Actions }
     *     
     */
    public Library.Actions getActions() {
        return actions;
    }

    /**
     * Sets the value of the actions property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Actions }
     *     
     */
    public void setActions(Library.Actions value) {
        this.actions = value;
    }

    /**
     * Gets the value of the force property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Force }
     *     
     */
    public Library.Force getForce() {
        return force;
    }

    /**
     * Sets the value of the force property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Force }
     *     
     */
    public void setForce(Library.Force value) {
        this.force = value;
    }

    /**
     * Gets the value of the patch property.
     * 
     * @return
     *     possible object is
     *     {@link Library.Patch }
     *     
     */
    public Library.Patch getPatch() {
        return patch;
    }

    /**
     * Sets the value of the patch property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library.Patch }
     *     
     */
    public void setPatch(Library.Patch value) {
        this.patch = value;
    }

    /**
     * Gets the value of the cues property.
     * 
     * @return
     *     possible object is
     *     {@link Cues }
     *     
     */
    public Cues getCues() {
        return cues;
    }

    /**
     * Sets the value of the cues property.
     * 
     * @param value
     *     allowed object is
     *     {@link Cues }
     *     
     */
    public void setCues(Cues value) {
        this.cues = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setVersion(BigInteger value) {
        this.version = value;
    }

    /**
     * Gets the value of the module property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getModule() {
        return module;
    }

    /**
     * Sets the value of the module property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setModule(String value) {
        this.module = value;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link Namespacelookup }
     *     
     */
    public Namespacelookup getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link Namespacelookup }
     *     
     */
    public void setNamespace(Namespacelookup value) {
        this.namespace = value;
    }

    /**
     * Gets the value of the instantiate property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isInstantiate() {
        return instantiate;
    }

    /**
     * Sets the value of the instantiate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInstantiate(Boolean value) {
        this.instantiate = value;
    }

    /**
     * Gets the value of the checktime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChecktime() {
        return checktime;
    }

    /**
     * Sets the value of the checktime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChecktime(String value) {
        this.checktime = value;
    }

    /**
     * Gets the value of the checkinterval property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCheckinterval() {
        return checkinterval;
    }

    /**
     * Sets the value of the checkinterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCheckinterval(String value) {
        this.checkinterval = value;
    }

    /**
     * Gets the value of the onfail property.
     * 
     * @return
     *     possible object is
     *     {@link Onfaillookup }
     *     
     */
    public Onfaillookup getOnfail() {
        return onfail;
    }

    /**
     * Sets the value of the onfail property.
     * 
     * @param value
     *     allowed object is
     *     {@link Onfaillookup }
     *     
     */
    public void setOnfail(Onfaillookup value) {
        this.onfail = value;
    }

    /**
     * Gets the value of the comment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the value of the comment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComment(String value) {
        this.comment = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{}actions"/>
     *       &lt;attribute name="comment" type="{}comment" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "doAllOrDoAnyOrDoIf"
    })
    public static class Actions {

        @XmlElements({
            @XmlElement(name = "do_all", type = Doall.class),
            @XmlElement(name = "do_any", type = Doany.class),
            @XmlElement(name = "do_if", type = Doif.class),
            @XmlElement(name = "do_elseif", type = Doelseif.class),
            @XmlElement(name = "do_else", type = Doelse.class),
            @XmlElement(name = "do_while", type = Dowhile.class),
            @XmlElement(name = "abort_hack", type = Dowhile.AbortHack.class),
            @XmlElement(name = "abort_scan", type = Dowhile.AbortScan.class),
            @XmlElement(name = "abort_scripts", type = Dowhile.AbortScripts.class),
            @XmlElement(name = "activate_battlestate", type = Dowhile.ActivateBattlestate.class),
            @XmlElement(name = "activate_flaks", type = Dowhile.ActivateFlaks.class),
            @XmlElement(name = "activate_weapon", type = Dowhile.ActivateWeapon.class),
            @XmlElement(name = "add_actor_to_platform", type = Dowhile.AddActorToPlatform.class),
            @XmlElement(name = "add_actor_to_playership", type = Dowhile.AddActorToPlayership.class),
            @XmlElement(name = "add_copilot", type = Dowhile.AddCopilot.class),
            @XmlElement(name = "create_build_plan", type = Dowhile.CreateBuildPlan.class),
            @XmlElement(name = "add_build_plan", type = Dowhile.AddBuildPlan.class),
            @XmlElement(name = "add_ammo", type = Dowhile.AddAmmo.class),
            @XmlElement(name = "remove_ammo", type = Dowhile.RemoveAmmo.class),
            @XmlElement(name = "deplete_ammo", type = Dowhile.DepleteAmmo.class),
            @XmlElement(name = "evaluate_ammo_storage", type = Dowhile.EvaluateAmmoStorage.class),
            @XmlElement(name = "add_cargo", type = Dowhile.AddCargo.class),
            @XmlElement(name = "remove_cargo", type = Dowhile.RemoveCargo.class),
            @XmlElement(name = "add_commission", type = Dowhile.AddCommission.class),
            @XmlElement(name = "add_player_commission", type = Dowhile.AddPlayerCommission.class),
            @XmlElement(name = "remove_commission", type = Dowhile.RemoveCommission.class),
            @XmlElement(name = "remove_player_commission", type = Dowhile.RemovePlayerCommission.class),
            @XmlElement(name = "add_default_production_wares", type = Dowhile.AddDefaultProductionWares.class),
            @XmlElement(name = "add_skill", type = Dowhile.AddSkill.class),
            @XmlElement(name = "add_tradeware", type = Dowhile.AddTradeware.class),
            @XmlElement(name = "remove_tradeware", type = Dowhile.RemoveTradeware.class),
            @XmlElement(name = "add_discount", type = Dowhile.AddDiscount.class),
            @XmlElement(name = "add_player_discount", type = Dowhile.AddPlayerDiscount.class),
            @XmlElement(name = "remove_discount", type = Dowhile.RemoveDiscount.class),
            @XmlElement(name = "remove_player_discount", type = Dowhile.RemovePlayerDiscount.class),
            @XmlElement(name = "add_production_salesreps", type = Dowhile.AddProductionSalesreps.class),
            @XmlElement(name = "add_watchdog_units_to_masstraffic", type = Dowhile.AddWatchdogUnitsToMasstraffic.class),
            @XmlElement(name = "get_next_bonus_unlocktime", type = Dowhile.GetNextBonusUnlocktime.class),
            @XmlElement(name = "get_production_specialist_types", type = Dowhile.GetProductionSpecialistTypes.class),
            @XmlElement(name = "set_next_bonus_unlocktime", type = Dowhile.SetNextBonusUnlocktime.class),
            @XmlElement(name = "add_buy_order", type = Dowhile.AddBuyOrder.class),
            @XmlElement(name = "add_sell_order", type = Dowhile.AddSellOrder.class),
            @XmlElement(name = "remove_trade_order", type = Dowhile.RemoveTradeOrder.class),
            @XmlElement(name = "get_trade_from_shoppinglist", type = Dowhile.GetTradeFromShoppinglist.class),
            @XmlElement(name = "get_tradeoffer_locations", type = Dowhile.GetTradeofferLocations.class),
            @XmlElement(name = "add_conversation_view", type = Dowhile.AddConversationView.class),
            @XmlElement(name = "add_faction_relation", type = Dowhile.AddFactionRelation.class),
            @XmlElement(name = "get_factions_by_relation", type = Dowhile.GetFactionsByRelation.class),
            @XmlElement(name = "set_faction_known", type = Dowhile.SetFactionKnown.class),
            @XmlElement(name = "set_known", type = Dowhile.SetKnown.class),
            @XmlElement(name = "add_inventory", type = Dowhile.AddInventory.class),
            @XmlElement(name = "remove_inventory", type = Dowhile.RemoveInventory.class),
            @XmlElement(name = "add_licence", type = Dowhile.AddLicence.class),
            @XmlElement(name = "remove_licence", type = Dowhile.RemoveLicence.class),
            @XmlElement(name = "add_npc_line", type = Dowhile.AddNpcLine.class),
            @XmlElement(name = "add_player_choice", type = Dowhile.AddPlayerChoice.class),
            @XmlElement(name = "add_player_choice_sub", type = Dowhile.AddPlayerChoiceSub.class),
            @XmlElement(name = "add_player_choice_subconv", type = Dowhile.AddPlayerChoiceSubconv.class),
            @XmlElement(name = "add_player_choice_return", type = Dowhile.AddPlayerChoiceReturn.class),
            @XmlElement(name = "set_conversation_return_section", type = Dowhile.SetConversationReturnSection.class),
            @XmlElement(name = "add_relation_boost", type = Dowhile.AddRelationBoost.class),
            @XmlElement(name = "add_to_group", type = Dowhile.AddToGroup.class),
            @XmlElement(name = "add_to_player_squad", type = Dowhile.AddToPlayerSquad.class),
            @XmlElement(name = "add_tolerance_boost", type = Dowhile.AddToleranceBoost.class),
            @XmlElement(name = "aim_turret", type = Dowhile.AimTurret.class),
            @XmlElement(name = "add_units", type = Dowhile.AddUnits.class),
            @XmlElement(name = "remove_units", type = Dowhile.RemoveUnits.class),
            @XmlElement(name = "request_units", type = Dowhile.RequestUnits.class),
            @XmlElement(name = "return_units", type = Dowhile.ReturnUnits.class),
            @XmlElement(name = "allow_conversation_escape", type = Dowhile.AllowConversationEscape.class),
            @XmlElement(name = "append_to_list", type = Dowhile.AppendToList.class),
            @XmlElement(name = "apply_attackstrength", type = Dowhile.ApplyAttackstrength.class),
            @XmlElement(name = "assert", type = Dowhile.Assert.class),
            @XmlElement(name = "assign_pilot", type = Dowhile.AssignPilot.class),
            @XmlElement(name = "assign_architect", type = Dowhile.AssignArchitect.class),
            @XmlElement(name = "assign_boarding_commander", type = Dowhile.AssignBoardingCommander.class),
            @XmlElement(name = "assign_defence_manager", type = Dowhile.AssignDefenceManager.class),
            @XmlElement(name = "assign_engineer", type = Dowhile.AssignEngineer.class),
            @XmlElement(name = "assign_trade_manager", type = Dowhile.AssignTradeManager.class),
            @XmlElement(name = "assign_control_entity", type = Dowhile.AssignControlEntity.class),
            @XmlElement(name = "dismiss_control_entity", type = Dowhile.DismissControlEntity.class),
            @XmlElement(name = "get_control_entities", type = Dowhile.GetControlEntities.class),
            @XmlElement(name = "attach_object_to_target", type = Dowhile.AttachObjectToTarget.class),
            @XmlElement(name = "break", type = Dowhile.Break.class),
            @XmlElement(name = "break_formation", type = Dowhile.BreakFormation.class),
            @XmlElement(name = "cease_fire", type = Dowhile.CeaseFire.class),
            @XmlElement(name = "change_relation_on_attack", type = Dowhile.ChangeRelationOnAttack.class),
            @XmlElement(name = "change_relation_on_kill", type = Dowhile.ChangeRelationOnKill.class),
            @XmlElement(name = "check_line_of_sight", type = Dowhile.CheckLineOfSight.class),
            @XmlElement(name = "check_is_in_security_area", type = Dowhile.CheckIsInSecurityArea.class),
            @XmlElement(name = "check_is_area_obstructed", type = Dowhile.CheckIsAreaObstructed.class),
            @XmlElement(name = "start_observation", type = Dowhile.StartObservation.class),
            @XmlElement(name = "stop_observation", type = Dowhile.StopObservation.class),
            @XmlElement(name = "start_attack", type = Dowhile.StartAttack.class),
            @XmlElement(name = "stop_attack", type = Dowhile.StopAttack.class),
            @XmlElement(name = "report_illegal_activity", type = Dowhile.ReportIllegalActivity.class),
            @XmlElement(name = "claim_ship", type = Dowhile.ClaimShip.class),
            @XmlElement(name = "clear_collision_filter", type = Dowhile.ClearCollisionFilter.class),
            @XmlElement(name = "clear_group", type = Dowhile.ClearGroup.class),
            @XmlElement(name = "clear_list", type = Dowhile.ClearList.class),
            @XmlElement(name = "close_dockingbay_doors", type = Dowhile.CloseDockingbayDoors.class),
            @XmlElement(name = "get_building_position", type = Dowhile.GetBuildingPosition.class),
            @XmlElement(name = "connect_to_build_location", type = Dowhile.ConnectToBuildLocation.class),
            @XmlElement(name = "connect_to_trade_location", type = Dowhile.ConnectToTradeLocation.class),
            @XmlElement(name = "disconnect_from_trade_location", type = Dowhile.DisconnectFromTradeLocation.class),
            @XmlElement(name = "construct_ship", type = Dowhile.ConstructShip.class),
            @XmlElement(name = "construct_station", type = Dowhile.ConstructStation.class),
            @XmlElement(name = "set_buildmodule_macro", type = Dowhile.SetBuildmoduleMacro.class),
            @XmlElement(name = "clear_buildmodule", type = Dowhile.ClearBuildmodule.class),
            @XmlElement(name = "continue", type = Dowhile.Continue.class),
            @XmlElement(name = "create_ai_unit", type = Dowhile.CreateAiUnit.class),
            @XmlElement(name = "create_group", type = Dowhile.CreateGroup.class),
            @XmlElement(name = "create_list", type = Dowhile.CreateList.class),
            @XmlElement(name = "create_formation", type = Dowhile.CreateFormation.class),
            @XmlElement(name = "create_object", type = Dowhile.CreateObject.class),
            @XmlElement(name = "create_orientation", type = Dowhile.CreateOrientation.class),
            @XmlElement(name = "create_random_position_in_boundingbox", type = Dowhile.CreateRandomPositionInBoundingbox.class),
            @XmlElement(name = "create_random_position_outside_boundingbox", type = Dowhile.CreateRandomPositionOutsideBoundingbox.class),
            @XmlElement(name = "create_trade_offer", type = Dowhile.CreateTradeOffer.class),
            @XmlElement(name = "add_trade_offer", type = Dowhile.AddTradeOffer.class),
            @XmlElement(name = "remove_trade_offer", type = Dowhile.RemoveTradeOffer.class),
            @XmlElement(name = "create_position_outside_boundingbox", type = Dowhile.CreatePositionOutsideBoundingbox.class),
            @XmlElement(name = "find_object_surface", type = Dowhile.FindObjectSurface.class),
            @XmlElement(name = "create_position", type = Dowhile.CreatePosition.class),
            @XmlElement(name = "transform_position", type = Dowhile.TransformPosition.class),
            @XmlElement(name = "create_rotation", type = Dowhile.CreateRotation.class),
            @XmlElement(name = "create_ship", type = Dowhile.CreateShip.class),
            @XmlElement(name = "create_station", type = Dowhile.CreateStation.class),
            @XmlElement(name = "create_defence_officer", type = Dowhile.CreateDefenceOfficer.class),
            @XmlElement(name = "create_engineer", type = Dowhile.CreateEngineer.class),
            @XmlElement(name = "create_pilot", type = Dowhile.CreatePilot.class),
            @XmlElement(name = "cutscene_event", type = Dowhile.CutsceneEvent.class),
            @XmlElement(name = "debug_text", type = Dowhile.DebugText.class),
            @XmlElement(name = "deplete_yield", type = Dowhile.DepleteYield.class),
            @XmlElement(name = "get_resource_gatherrate", type = Dowhile.GetResourceGatherrate.class),
            @XmlElement(name = "destroy_object", type = Dowhile.DestroyObject.class),
            @XmlElement(name = "destroy_group", type = Dowhile.DestroyGroup.class),
            @XmlElement(name = "restore_object", type = Dowhile.RestoreObject.class),
            @XmlElement(name = "repair_object", type = Dowhile.RepairObject.class),
            @XmlElement(name = "repair_component", type = Dowhile.RepairComponent.class),
            @XmlElement(name = "disable_collisions_between", type = Dowhile.DisableCollisionsBetween.class),
            @XmlElement(name = "dock", type = Dowhile.Dock.class),
            @XmlElement(name = "dock_drone", type = Dowhile.DockDrone.class),
            @XmlElement(name = "drop_cargo", type = Dowhile.DropCargo.class),
            @XmlElement(name = "drop_illegal_cargo", type = Dowhile.DropIllegalCargo.class),
            @XmlElement(name = "drop_illegal_inventory", type = Dowhile.DropIllegalInventory.class),
            @XmlElement(name = "drop_inventory", type = Dowhile.DropInventory.class),
            @XmlElement(name = "eject_npcs", type = Dowhile.EjectNpcs.class),
            @XmlElement(name = "enable_collisions_between", type = Dowhile.EnableCollisionsBetween.class),
            @XmlElement(name = "equip_weapon", type = Dowhile.EquipWeapon.class),
            @XmlElement(name = "find_asteroid_in_region", type = Dowhile.FindAsteroidInRegion.class),
            @XmlElement(name = "find_buy_offer", type = Dowhile.FindBuyOffer.class),
            @XmlElement(name = "find_closest_navmesh_object", type = Dowhile.FindClosestNavmeshObject.class),
            @XmlElement(name = "find_closest_region", type = Dowhile.FindClosestRegion.class),
            @XmlElement(name = "find_closest_resource", type = Dowhile.FindClosestResource.class),
            @XmlElement(name = "find_closest_station_part", type = Dowhile.FindClosestStationPart.class),
            @XmlElement(name = "find_cluster", type = Dowhile.FindCluster.class),
            @XmlElement(name = "find_dock_location", type = Dowhile.FindDockLocation.class),
            @XmlElement(name = "find_dockingbay_for_trade", type = Dowhile.FindDockingbayForTrade.class),
            @XmlElement(name = "find_gravidar_contact", type = Dowhile.FindGravidarContact.class),
            @XmlElement(name = "find_infopoint_location", type = Dowhile.FindInfopointLocation.class),
            @XmlElement(name = "find_object_component", type = Dowhile.FindObjectComponent.class),
            @XmlElement(name = "find_resource", type = Dowhile.FindResource.class),
            @XmlElement(name = "check_object", type = Dowhile.CheckObject.class),
            @XmlElement(name = "find_pos_in_mass_traffic_at_time", type = Dowhile.FindPosInMassTrafficAtTime.class),
            @XmlElement(name = "find_random_pos_in_mass_traffic", type = Dowhile.FindRandomPosInMassTraffic.class),
            @XmlElement(name = "find_summarised_adsign", type = Dowhile.FindSummarisedAdsign.class),
            @XmlElement(name = "find_summarised_efficiencyupgrade", type = Dowhile.FindSummarisedEfficiencyupgrade.class),
            @XmlElement(name = "find_summarised_flakcontroller", type = Dowhile.FindSummarisedFlakcontroller.class),
            @XmlElement(name = "find_summarised_shield", type = Dowhile.FindSummarisedShield.class),
            @XmlElement(name = "find_summarised_surfacedestructible", type = Dowhile.FindSummarisedSurfacedestructible.class),
            @XmlElement(name = "find_summarised_turret", type = Dowhile.FindSummarisedTurret.class),
            @XmlElement(name = "find_object", type = Dowhile.FindObject.class),
            @XmlElement(name = "find_sector", type = Dowhile.FindSector.class),
            @XmlElement(name = "find_sell_offer", type = Dowhile.FindSellOffer.class),
            @XmlElement(name = "find_ship", type = Dowhile.FindShip.class),
            @XmlElement(name = "find_station", type = Dowhile.FindStation.class),
            @XmlElement(name = "find_tradeoffer_parking_slot", type = Dowhile.FindTradeofferParkingSlot.class),
            @XmlElement(name = "find_zone", type = Dowhile.FindZone.class),
            @XmlElement(name = "fire_turret", type = Dowhile.FireTurret.class),
            @XmlElement(name = "get_attackstrength", type = Dowhile.GetAttackstrength.class),
            @XmlElement(name = "get_character_definition", type = Dowhile.GetCharacterDefinition.class),
            @XmlElement(name = "get_docking_approach_pos", type = Dowhile.GetDockingApproachPos.class),
            @XmlElement(name = "get_gate_approach_pos", type = Dowhile.GetGateApproachPos.class),
            @XmlElement(name = "get_global_path", type = Dowhile.GetGlobalPath.class),
            @XmlElement(name = "get_jump_path", type = Dowhile.GetJumpPath.class),
            @XmlElement(name = "get_closest_highway_offset", type = Dowhile.GetClosestHighwayOffset.class),
            @XmlElement(name = "get_closest_jumpbeacon", type = Dowhile.GetClosestJumpbeacon.class),
            @XmlElement(name = "get_safe_pos", type = Dowhile.GetSafePos.class),
            @XmlElement(name = "get_ship_definition", type = Dowhile.GetShipDefinition.class),
            @XmlElement(name = "get_target_points", type = Dowhile.GetTargetPoints.class),
            @XmlElement(name = "get_text_ids_in_range", type = Dowhile.GetTextIdsInRange.class),
            @XmlElement(name = "get_trade_parking_pos", type = Dowhile.GetTradeParkingPos.class),
            @XmlElement(name = "get_zone_exit_pos", type = Dowhile.GetZoneExitPos.class),
            @XmlElement(name = "precache_hint", type = Dowhile.PrecacheHint.class),
            @XmlElement(name = "is_in_quadrant", type = Dowhile.IsInQuadrant.class),
            @XmlElement(name = "join_formation", type = Dowhile.JoinFormation.class),
            @XmlElement(name = "launch_drone", type = Dowhile.LaunchDrone.class),
            @XmlElement(name = "launch_masstraffic_drone", type = Dowhile.LaunchMasstrafficDrone.class),
            @XmlElement(name = "launch_war_drones", type = Dowhile.LaunchWarDrones.class),
            @XmlElement(name = "launch_repair_drones", type = Dowhile.LaunchRepairDrones.class),
            @XmlElement(name = "leave_formation", type = Dowhile.LeaveFormation.class),
            @XmlElement(name = "open_conversation_menu", type = Dowhile.OpenConversationMenu.class),
            @XmlElement(name = "open_dockingbay_doors", type = Dowhile.OpenDockingbayDoors.class),
            @XmlElement(name = "pickup_target", type = Dowhile.PickupTarget.class),
            @XmlElement(name = "play_cutscene", type = Dowhile.PlayCutscene.class),
            @XmlElement(name = "remove_actor_account", type = Dowhile.RemoveActorAccount.class),
            @XmlElement(name = "remove_actor_from_room", type = Dowhile.RemoveActorFromRoom.class),
            @XmlElement(name = "remove_from_group", type = Dowhile.RemoveFromGroup.class),
            @XmlElement(name = "remove_from_player_squad", type = Dowhile.RemoveFromPlayerSquad.class),
            @XmlElement(name = "remove_object_commander", type = Dowhile.RemoveObjectCommander.class),
            @XmlElement(name = "remove_representative", type = Dowhile.RemoveRepresentative.class),
            @XmlElement(name = "remove_value", type = Dowhile.RemoveValue.class),
            @XmlElement(name = "remove_weapon", type = Dowhile.RemoveWeapon.class),
            @XmlElement(name = "check_weapon_active", type = Dowhile.CheckWeaponActive.class),
            @XmlElement(name = "check_weapon_installed", type = Dowhile.CheckWeaponInstalled.class),
            @XmlElement(name = "request_docking", type = Dowhile.RequestDocking.class),
            @XmlElement(name = "add_mass_traffic_quota", type = Dowhile.AddMassTrafficQuota.class),
            @XmlElement(name = "stop_mass_traffic_quota", type = Dowhile.StopMassTrafficQuota.class),
            @XmlElement(name = "get_macros_in_mass_traffic", type = Dowhile.GetMacrosInMassTraffic.class),
            @XmlElement(name = "request_mass_traffic_ship", type = Dowhile.RequestMassTrafficShip.class),
            @XmlElement(name = "request_undocking", type = Dowhile.RequestUndocking.class),
            @XmlElement(name = "request_boarding_support", type = Dowhile.RequestBoardingSupport.class),
            @XmlElement(name = "notify_boarding_support_failed", type = Dowhile.NotifyBoardingSupportFailed.class),
            @XmlElement(name = "notify_boarding_support_succeeded", type = Dowhile.NotifyBoardingSupportSucceeded.class),
            @XmlElement(name = "request_repair", type = Dowhile.RequestRepair.class),
            @XmlElement(name = "reset_relation_boost", type = Dowhile.ResetRelationBoost.class),
            @XmlElement(name = "reset_tolerance_boost", type = Dowhile.ResetToleranceBoost.class),
            @XmlElement(name = "reset_turret", type = Dowhile.ResetTurret.class),
            @XmlElement(name = "resize_list", type = Dowhile.ResizeList.class),
            @XmlElement(name = "reward_player", type = Dowhile.RewardPlayer.class),
            @XmlElement(name = "set_actor_account", type = Dowhile.SetActorAccount.class),
            @XmlElement(name = "set_actor_max_budget", type = Dowhile.SetActorMaxBudget.class),
            @XmlElement(name = "set_actor_min_budget", type = Dowhile.SetActorMinBudget.class),
            @XmlElement(name = "transfer_money", type = Dowhile.TransferMoney.class),
            @XmlElement(name = "set_buildanchor", type = Dowhile.SetBuildanchor.class),
            @XmlElement(name = "set_cockpit_tint", type = Dowhile.SetCockpitTint.class),
            @XmlElement(name = "set_comm_handler", type = Dowhile.SetCommHandler.class),
            @XmlElement(name = "set_object_active", type = Dowhile.SetObjectActive.class),
            @XmlElement(name = "set_object_capturable", type = Dowhile.SetObjectCapturable.class),
            @XmlElement(name = "set_object_radar_visible", type = Dowhile.SetObjectRadarVisible.class),
            @XmlElement(name = "set_object_commander", type = Dowhile.SetObjectCommander.class),
            @XmlElement(name = "add_drone", type = Dowhile.AddDrone.class),
            @XmlElement(name = "set_object_min_hull", type = Dowhile.SetObjectMinHull.class),
            @XmlElement(name = "set_object_min_shield", type = Dowhile.SetObjectMinShield.class),
            @XmlElement(name = "set_object_hull", type = Dowhile.SetObjectHull.class),
            @XmlElement(name = "set_object_relation_behaviour", type = Dowhile.SetObjectRelationBehaviour.class),
            @XmlElement(name = "set_object_shield", type = Dowhile.SetObjectShield.class),
            @XmlElement(name = "set_object_max_hull", type = Dowhile.SetObjectMaxHull.class),
            @XmlElement(name = "set_summarised_adsign_state", type = Dowhile.SetSummarisedAdsignState.class),
            @XmlElement(name = "set_summarised_efficiencyupgrade_state", type = Dowhile.SetSummarisedEfficiencyupgradeState.class),
            @XmlElement(name = "set_summarised_flakcontroller_state", type = Dowhile.SetSummarisedFlakcontrollerState.class),
            @XmlElement(name = "set_summarised_shield_state", type = Dowhile.SetSummarisedShieldState.class),
            @XmlElement(name = "set_summarised_surfacedestructible_state", type = Dowhile.SetSummarisedSurfacedestructibleState.class),
            @XmlElement(name = "set_summarised_turret_state", type = Dowhile.SetSummarisedTurretState.class),
            @XmlElement(name = "set_object_scanned", type = Dowhile.SetObjectScanned.class),
            @XmlElement(name = "set_object_hacked", type = Dowhile.SetObjectHacked.class),
            @XmlElement(name = "set_room_locked", type = Dowhile.SetRoomLocked.class),
            @XmlElement(name = "set_allow_drop", type = Dowhile.SetAllowDrop.class),
            @XmlElement(name = "set_drop_object", type = Dowhile.SetDropObject.class),
            @XmlElement(name = "spawn_drop", type = Dowhile.SpawnDrop.class),
            @XmlElement(name = "set_entity_type", type = Dowhile.SetEntityType.class),
            @XmlElement(name = "set_faction_relation", type = Dowhile.SetFactionRelation.class),
            @XmlElement(name = "set_mass_traffic_object_persistence", type = Dowhile.SetMassTrafficObjectPersistence.class),
            @XmlElement(name = "set_region_object_persistence", type = Dowhile.SetRegionObjectPersistence.class),
            @XmlElement(name = "end_mass_traffic", type = Dowhile.EndMassTraffic.class),
            @XmlElement(name = "set_order_moveto", type = Dowhile.SetOrderMoveto.class),
            @XmlElement(name = "set_order_pickup_target", type = Dowhile.SetOrderPickupTarget.class),
            @XmlElement(name = "set_owner", type = Dowhile.SetOwner.class),
            @XmlElement(name = "set_cover_owner", type = Dowhile.SetCoverOwner.class),
            @XmlElement(name = "set_player_activity", type = Dowhile.SetPlayerActivity.class),
            @XmlElement(name = "set_player_entity_position", type = Dowhile.SetPlayerEntityPosition.class),
            @XmlElement(name = "set_relation_boost", type = Dowhile.SetRelationBoost.class),
            @XmlElement(name = "set_representative", type = Dowhile.SetRepresentative.class),
            @XmlElement(name = "set_hack_target", type = Dowhile.SetHackTarget.class),
            @XmlElement(name = "set_scan_target", type = Dowhile.SetScanTarget.class),
            @XmlElement(name = "set_skill", type = Dowhile.SetSkill.class),
            @XmlElement(name = "set_skills_visible", type = Dowhile.SetSkillsVisible.class),
            @XmlElement(name = "set_tolerance_boost", type = Dowhile.SetToleranceBoost.class),
            @XmlElement(name = "set_allowed_weapon_systems", type = Dowhile.SetAllowedWeaponSystems.class),
            @XmlElement(name = "set_trade_restrictions", type = Dowhile.SetTradeRestrictions.class),
            @XmlElement(name = "set_turret_targets", type = Dowhile.SetTurretTargets.class),
            @XmlElement(name = "set_value", type = Dowhile.SetValue.class),
            @XmlElement(name = "setup_conversation_minigame", type = Dowhile.SetupConversationMinigame.class),
            @XmlElement(name = "show_help", type = Dowhile.ShowHelp.class),
            @XmlElement(name = "remove_help", type = Dowhile.RemoveHelp.class),
            @XmlElement(name = "save_ai_action_state", type = Dowhile.SaveAiActionState.class),
            @XmlElement(name = "show_input_help", type = Dowhile.ShowInputHelp.class),
            @XmlElement(name = "show_notification", type = Dowhile.ShowNotification.class),
            @XmlElement(name = "signal_objects", type = Dowhile.SignalObjects.class),
            @XmlElement(name = "speak", type = Dowhile.Speak.class),
            @XmlElement(name = "start_boost", type = Dowhile.StartBoost.class),
            @XmlElement(name = "start_conversation", type = Dowhile.StartConversation.class),
            @XmlElement(name = "cancel_conversation", type = Dowhile.CancelConversation.class),
            @XmlElement(name = "start_long_range_scan", type = Dowhile.StartLongRangeScan.class),
            @XmlElement(name = "stop_long_range_scan", type = Dowhile.StopLongRangeScan.class),
            @XmlElement(name = "start_script", type = Dowhile.StartScript.class),
            @XmlElement(name = "stop_boost", type = Dowhile.StopBoost.class),
            @XmlElement(name = "stop_cutscene", type = Dowhile.StopCutscene.class),
            @XmlElement(name = "stop_firing_at_target", type = Dowhile.StopFiringAtTarget.class),
            @XmlElement(name = "substitute_text", type = Dowhile.SubstituteText.class),
            @XmlElement(name = "trigger_autosave", type = Dowhile.TriggerAutosave.class),
            @XmlElement(name = "trigger_boarding", type = Dowhile.TriggerBoarding.class),
            @XmlElement(name = "undock", type = Dowhile.Undock.class),
            @XmlElement(name = "unlock_achievement", type = Dowhile.UnlockAchievement.class),
            @XmlElement(name = "indicate_achievement_progress", type = Dowhile.IndicateAchievementProgress.class),
            @XmlElement(name = "update_trade", type = Dowhile.UpdateTrade.class),
            @XmlElement(name = "upgrade_object_by_macro", type = Dowhile.UpgradeObjectByMacro.class),
            @XmlElement(name = "upgrade_object_by_tag", type = Dowhile.UpgradeObjectByTag.class),
            @XmlElement(name = "build_object_upgrades", type = Dowhile.BuildObjectUpgrades.class),
            @XmlElement(name = "build_component_upgrades", type = Dowhile.BuildComponentUpgrades.class),
            @XmlElement(name = "get_build_slot_price", type = Dowhile.GetBuildSlotPrice.class),
            @XmlElement(name = "get_pilot_dockslot", type = Dowhile.GetPilotDockslot.class),
            @XmlElement(name = "warp", type = Dowhile.Warp.class),
            @XmlElement(name = "sort_trades", type = Dowhile.SortTrades.class),
            @XmlElement(name = "add_experience_progress", type = Dowhile.AddExperienceProgress.class),
            @XmlElement(name = "set_experience_progress", type = Dowhile.SetExperienceProgress.class),
            @XmlElement(name = "add_effect", type = Dowhile.AddEffect.class),
            @XmlElement(name = "remove_effect", type = Dowhile.RemoveEffect.class),
            @XmlElement(name = "play_sound", type = Dowhile.PlaySound.class),
            @XmlElement(name = "play_music", type = Dowhile.PlayMusic.class),
            @XmlElement(name = "stop_music", type = Dowhile.StopMusic.class),
            @XmlElement(name = "quit_gameover", type = Dowhile.QuitGameover.class),
            @XmlElement(name = "quit_to_desktop", type = Dowhile.QuitToDesktop.class),
            @XmlElement(name = "quit_to_startmenu", type = Dowhile.QuitToStartmenu.class),
            @XmlElement(name = "cancel_cue", type = Dowhile.CancelCue.class),
            @XmlElement(name = "complete_cue", type = Dowhile.CompleteCue.class),
            @XmlElement(name = "create_cue_actor", type = Dowhile.CreateCueActor.class),
            @XmlElement(name = "create_mission", type = Dowhile.CreateMission.class),
            @XmlElement(name = "create_offer", type = Dowhile.CreateOffer.class),
            @XmlElement(name = "create_platform_actor", type = Dowhile.CreatePlatformActor.class),
            @XmlElement(name = "create_presentation_cluster", type = Dowhile.CreatePresentationCluster.class),
            @XmlElement(name = "create_representative_actor", type = Dowhile.CreateRepresentativeActor.class),
            @XmlElement(name = "create_target_points", type = Dowhile.CreateTargetPoints.class),
            @XmlElement(name = "find_mission_offer_location", type = Dowhile.FindMissionOfferLocation.class),
            @XmlElement(name = "force_cue", type = Dowhile.ForceCue.class),
            @XmlElement(name = "include_actions", type = Dowhile.IncludeActions.class),
            @XmlElement(name = "populate_platforms", type = Dowhile.PopulatePlatforms.class),
            @XmlElement(name = "remove_all_cue_actors", type = Dowhile.RemoveAllCueActors.class),
            @XmlElement(name = "remove_cue_actor", type = Dowhile.RemoveCueActor.class),
            @XmlElement(name = "remove_mission", type = Dowhile.RemoveMission.class),
            @XmlElement(name = "remove_offer", type = Dowhile.RemoveOffer.class),
            @XmlElement(name = "remove_target_points", type = Dowhile.RemoveTargetPoints.class),
            @XmlElement(name = "reset_cue", type = Dowhile.ResetCue.class),
            @XmlElement(name = "add_holomap", type = Dowhile.AddHolomap.class),
            @XmlElement(name = "remove_holomap", type = Dowhile.RemoveHolomap.class),
            @XmlElement(name = "set_holomap_target", type = Dowhile.SetHolomapTarget.class),
            @XmlElement(name = "set_job_active", type = Dowhile.SetJobActive.class),
            @XmlElement(name = "set_mission_actor", type = Dowhile.SetMissionActor.class),
            @XmlElement(name = "set_objective", type = Dowhile.SetObjective.class),
            @XmlElement(name = "update_objective_progress", type = Dowhile.UpdateObjectiveProgress.class),
            @XmlElement(name = "update_mission", type = Dowhile.UpdateMission.class),
            @XmlElement(name = "update_objective_endtime", type = Dowhile.UpdateObjectiveEndtime.class),
            @XmlElement(name = "update_offer", type = Dowhile.UpdateOffer.class),
            @XmlElement(name = "enter_playership", type = Dowhile.EnterPlayership.class),
            @XmlElement(name = "leave_cockpit", type = Dowhile.LeaveCockpit.class),
            @XmlElement(name = "force_player_speed", type = Dowhile.ForcePlayerSpeed.class),
            @XmlElement(name = "signal_cue", type = Dowhile.SignalCue.class),
            @XmlElement(name = "signal_cue_instantly", type = Dowhile.SignalCueInstantly.class)
        })
        protected List<Object> doAllOrDoAnyOrDoIf;
        @XmlAttribute(name = "comment")
        protected String comment;

        /**
         * Gets the value of the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getDoAllOrDoAnyOrDoIf().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Doall }
         * {@link Doany }
         * {@link Doif }
         * {@link Doelseif }
         * {@link Doelse }
         * {@link Dowhile }
         * {@link Dowhile.AbortHack }
         * {@link Dowhile.AbortScan }
         * {@link Dowhile.AbortScripts }
         * {@link Dowhile.ActivateBattlestate }
         * {@link Dowhile.ActivateFlaks }
         * {@link Dowhile.ActivateWeapon }
         * {@link Dowhile.AddActorToPlatform }
         * {@link Dowhile.AddActorToPlayership }
         * {@link Dowhile.AddCopilot }
         * {@link Dowhile.CreateBuildPlan }
         * {@link Dowhile.AddBuildPlan }
         * {@link Dowhile.AddAmmo }
         * {@link Dowhile.RemoveAmmo }
         * {@link Dowhile.DepleteAmmo }
         * {@link Dowhile.EvaluateAmmoStorage }
         * {@link Dowhile.AddCargo }
         * {@link Dowhile.RemoveCargo }
         * {@link Dowhile.AddCommission }
         * {@link Dowhile.AddPlayerCommission }
         * {@link Dowhile.RemoveCommission }
         * {@link Dowhile.RemovePlayerCommission }
         * {@link Dowhile.AddDefaultProductionWares }
         * {@link Dowhile.AddSkill }
         * {@link Dowhile.AddTradeware }
         * {@link Dowhile.RemoveTradeware }
         * {@link Dowhile.AddDiscount }
         * {@link Dowhile.AddPlayerDiscount }
         * {@link Dowhile.RemoveDiscount }
         * {@link Dowhile.RemovePlayerDiscount }
         * {@link Dowhile.AddProductionSalesreps }
         * {@link Dowhile.AddWatchdogUnitsToMasstraffic }
         * {@link Dowhile.GetNextBonusUnlocktime }
         * {@link Dowhile.GetProductionSpecialistTypes }
         * {@link Dowhile.SetNextBonusUnlocktime }
         * {@link Dowhile.AddBuyOrder }
         * {@link Dowhile.AddSellOrder }
         * {@link Dowhile.RemoveTradeOrder }
         * {@link Dowhile.GetTradeFromShoppinglist }
         * {@link Dowhile.GetTradeofferLocations }
         * {@link Dowhile.AddConversationView }
         * {@link Dowhile.AddFactionRelation }
         * {@link Dowhile.GetFactionsByRelation }
         * {@link Dowhile.SetFactionKnown }
         * {@link Dowhile.SetKnown }
         * {@link Dowhile.AddInventory }
         * {@link Dowhile.RemoveInventory }
         * {@link Dowhile.AddLicence }
         * {@link Dowhile.RemoveLicence }
         * {@link Dowhile.AddNpcLine }
         * {@link Dowhile.AddPlayerChoice }
         * {@link Dowhile.AddPlayerChoiceSub }
         * {@link Dowhile.AddPlayerChoiceSubconv }
         * {@link Dowhile.AddPlayerChoiceReturn }
         * {@link Dowhile.SetConversationReturnSection }
         * {@link Dowhile.AddRelationBoost }
         * {@link Dowhile.AddToGroup }
         * {@link Dowhile.AddToPlayerSquad }
         * {@link Dowhile.AddToleranceBoost }
         * {@link Dowhile.AimTurret }
         * {@link Dowhile.AddUnits }
         * {@link Dowhile.RemoveUnits }
         * {@link Dowhile.RequestUnits }
         * {@link Dowhile.ReturnUnits }
         * {@link Dowhile.AllowConversationEscape }
         * {@link Dowhile.AppendToList }
         * {@link Dowhile.ApplyAttackstrength }
         * {@link Dowhile.Assert }
         * {@link Dowhile.AssignPilot }
         * {@link Dowhile.AssignArchitect }
         * {@link Dowhile.AssignBoardingCommander }
         * {@link Dowhile.AssignDefenceManager }
         * {@link Dowhile.AssignEngineer }
         * {@link Dowhile.AssignTradeManager }
         * {@link Dowhile.AssignControlEntity }
         * {@link Dowhile.DismissControlEntity }
         * {@link Dowhile.GetControlEntities }
         * {@link Dowhile.AttachObjectToTarget }
         * {@link Dowhile.Break }
         * {@link Dowhile.BreakFormation }
         * {@link Dowhile.CeaseFire }
         * {@link Dowhile.ChangeRelationOnAttack }
         * {@link Dowhile.ChangeRelationOnKill }
         * {@link Dowhile.CheckLineOfSight }
         * {@link Dowhile.CheckIsInSecurityArea }
         * {@link Dowhile.CheckIsAreaObstructed }
         * {@link Dowhile.StartObservation }
         * {@link Dowhile.StopObservation }
         * {@link Dowhile.StartAttack }
         * {@link Dowhile.StopAttack }
         * {@link Dowhile.ReportIllegalActivity }
         * {@link Dowhile.ClaimShip }
         * {@link Dowhile.ClearCollisionFilter }
         * {@link Dowhile.ClearGroup }
         * {@link Dowhile.ClearList }
         * {@link Dowhile.CloseDockingbayDoors }
         * {@link Dowhile.GetBuildingPosition }
         * {@link Dowhile.ConnectToBuildLocation }
         * {@link Dowhile.ConnectToTradeLocation }
         * {@link Dowhile.DisconnectFromTradeLocation }
         * {@link Dowhile.ConstructShip }
         * {@link Dowhile.ConstructStation }
         * {@link Dowhile.SetBuildmoduleMacro }
         * {@link Dowhile.ClearBuildmodule }
         * {@link Dowhile.Continue }
         * {@link Dowhile.CreateAiUnit }
         * {@link Dowhile.CreateGroup }
         * {@link Dowhile.CreateList }
         * {@link Dowhile.CreateFormation }
         * {@link Dowhile.CreateObject }
         * {@link Dowhile.CreateOrientation }
         * {@link Dowhile.CreateRandomPositionInBoundingbox }
         * {@link Dowhile.CreateRandomPositionOutsideBoundingbox }
         * {@link Dowhile.CreateTradeOffer }
         * {@link Dowhile.AddTradeOffer }
         * {@link Dowhile.RemoveTradeOffer }
         * {@link Dowhile.CreatePositionOutsideBoundingbox }
         * {@link Dowhile.FindObjectSurface }
         * {@link Dowhile.CreatePosition }
         * {@link Dowhile.TransformPosition }
         * {@link Dowhile.CreateRotation }
         * {@link Dowhile.CreateShip }
         * {@link Dowhile.CreateStation }
         * {@link Dowhile.CreateDefenceOfficer }
         * {@link Dowhile.CreateEngineer }
         * {@link Dowhile.CreatePilot }
         * {@link Dowhile.CutsceneEvent }
         * {@link Dowhile.DebugText }
         * {@link Dowhile.DepleteYield }
         * {@link Dowhile.GetResourceGatherrate }
         * {@link Dowhile.DestroyObject }
         * {@link Dowhile.DestroyGroup }
         * {@link Dowhile.RestoreObject }
         * {@link Dowhile.RepairObject }
         * {@link Dowhile.RepairComponent }
         * {@link Dowhile.DisableCollisionsBetween }
         * {@link Dowhile.Dock }
         * {@link Dowhile.DockDrone }
         * {@link Dowhile.DropCargo }
         * {@link Dowhile.DropIllegalCargo }
         * {@link Dowhile.DropIllegalInventory }
         * {@link Dowhile.DropInventory }
         * {@link Dowhile.EjectNpcs }
         * {@link Dowhile.EnableCollisionsBetween }
         * {@link Dowhile.EquipWeapon }
         * {@link Dowhile.FindAsteroidInRegion }
         * {@link Dowhile.FindBuyOffer }
         * {@link Dowhile.FindClosestNavmeshObject }
         * {@link Dowhile.FindClosestRegion }
         * {@link Dowhile.FindClosestResource }
         * {@link Dowhile.FindClosestStationPart }
         * {@link Dowhile.FindCluster }
         * {@link Dowhile.FindDockLocation }
         * {@link Dowhile.FindDockingbayForTrade }
         * {@link Dowhile.FindGravidarContact }
         * {@link Dowhile.FindInfopointLocation }
         * {@link Dowhile.FindObjectComponent }
         * {@link Dowhile.FindResource }
         * {@link Dowhile.CheckObject }
         * {@link Dowhile.FindPosInMassTrafficAtTime }
         * {@link Dowhile.FindRandomPosInMassTraffic }
         * {@link Dowhile.FindSummarisedAdsign }
         * {@link Dowhile.FindSummarisedEfficiencyupgrade }
         * {@link Dowhile.FindSummarisedFlakcontroller }
         * {@link Dowhile.FindSummarisedShield }
         * {@link Dowhile.FindSummarisedSurfacedestructible }
         * {@link Dowhile.FindSummarisedTurret }
         * {@link Dowhile.FindObject }
         * {@link Dowhile.FindSector }
         * {@link Dowhile.FindSellOffer }
         * {@link Dowhile.FindShip }
         * {@link Dowhile.FindStation }
         * {@link Dowhile.FindTradeofferParkingSlot }
         * {@link Dowhile.FindZone }
         * {@link Dowhile.FireTurret }
         * {@link Dowhile.GetAttackstrength }
         * {@link Dowhile.GetCharacterDefinition }
         * {@link Dowhile.GetDockingApproachPos }
         * {@link Dowhile.GetGateApproachPos }
         * {@link Dowhile.GetGlobalPath }
         * {@link Dowhile.GetJumpPath }
         * {@link Dowhile.GetClosestHighwayOffset }
         * {@link Dowhile.GetClosestJumpbeacon }
         * {@link Dowhile.GetSafePos }
         * {@link Dowhile.GetShipDefinition }
         * {@link Dowhile.GetTargetPoints }
         * {@link Dowhile.GetTextIdsInRange }
         * {@link Dowhile.GetTradeParkingPos }
         * {@link Dowhile.GetZoneExitPos }
         * {@link Dowhile.PrecacheHint }
         * {@link Dowhile.IsInQuadrant }
         * {@link Dowhile.JoinFormation }
         * {@link Dowhile.LaunchDrone }
         * {@link Dowhile.LaunchMasstrafficDrone }
         * {@link Dowhile.LaunchWarDrones }
         * {@link Dowhile.LaunchRepairDrones }
         * {@link Dowhile.LeaveFormation }
         * {@link Dowhile.OpenConversationMenu }
         * {@link Dowhile.OpenDockingbayDoors }
         * {@link Dowhile.PickupTarget }
         * {@link Dowhile.PlayCutscene }
         * {@link Dowhile.RemoveActorAccount }
         * {@link Dowhile.RemoveActorFromRoom }
         * {@link Dowhile.RemoveFromGroup }
         * {@link Dowhile.RemoveFromPlayerSquad }
         * {@link Dowhile.RemoveObjectCommander }
         * {@link Dowhile.RemoveRepresentative }
         * {@link Dowhile.RemoveValue }
         * {@link Dowhile.RemoveWeapon }
         * {@link Dowhile.CheckWeaponActive }
         * {@link Dowhile.CheckWeaponInstalled }
         * {@link Dowhile.RequestDocking }
         * {@link Dowhile.AddMassTrafficQuota }
         * {@link Dowhile.StopMassTrafficQuota }
         * {@link Dowhile.GetMacrosInMassTraffic }
         * {@link Dowhile.RequestMassTrafficShip }
         * {@link Dowhile.RequestUndocking }
         * {@link Dowhile.RequestBoardingSupport }
         * {@link Dowhile.NotifyBoardingSupportFailed }
         * {@link Dowhile.NotifyBoardingSupportSucceeded }
         * {@link Dowhile.RequestRepair }
         * {@link Dowhile.ResetRelationBoost }
         * {@link Dowhile.ResetToleranceBoost }
         * {@link Dowhile.ResetTurret }
         * {@link Dowhile.ResizeList }
         * {@link Dowhile.RewardPlayer }
         * {@link Dowhile.SetActorAccount }
         * {@link Dowhile.SetActorMaxBudget }
         * {@link Dowhile.SetActorMinBudget }
         * {@link Dowhile.TransferMoney }
         * {@link Dowhile.SetBuildanchor }
         * {@link Dowhile.SetCockpitTint }
         * {@link Dowhile.SetCommHandler }
         * {@link Dowhile.SetObjectActive }
         * {@link Dowhile.SetObjectCapturable }
         * {@link Dowhile.SetObjectRadarVisible }
         * {@link Dowhile.SetObjectCommander }
         * {@link Dowhile.AddDrone }
         * {@link Dowhile.SetObjectMinHull }
         * {@link Dowhile.SetObjectMinShield }
         * {@link Dowhile.SetObjectHull }
         * {@link Dowhile.SetObjectRelationBehaviour }
         * {@link Dowhile.SetObjectShield }
         * {@link Dowhile.SetObjectMaxHull }
         * {@link Dowhile.SetSummarisedAdsignState }
         * {@link Dowhile.SetSummarisedEfficiencyupgradeState }
         * {@link Dowhile.SetSummarisedFlakcontrollerState }
         * {@link Dowhile.SetSummarisedShieldState }
         * {@link Dowhile.SetSummarisedSurfacedestructibleState }
         * {@link Dowhile.SetSummarisedTurretState }
         * {@link Dowhile.SetObjectScanned }
         * {@link Dowhile.SetObjectHacked }
         * {@link Dowhile.SetRoomLocked }
         * {@link Dowhile.SetAllowDrop }
         * {@link Dowhile.SetDropObject }
         * {@link Dowhile.SpawnDrop }
         * {@link Dowhile.SetEntityType }
         * {@link Dowhile.SetFactionRelation }
         * {@link Dowhile.SetMassTrafficObjectPersistence }
         * {@link Dowhile.SetRegionObjectPersistence }
         * {@link Dowhile.EndMassTraffic }
         * {@link Dowhile.SetOrderMoveto }
         * {@link Dowhile.SetOrderPickupTarget }
         * {@link Dowhile.SetOwner }
         * {@link Dowhile.SetCoverOwner }
         * {@link Dowhile.SetPlayerActivity }
         * {@link Dowhile.SetPlayerEntityPosition }
         * {@link Dowhile.SetRelationBoost }
         * {@link Dowhile.SetRepresentative }
         * {@link Dowhile.SetHackTarget }
         * {@link Dowhile.SetScanTarget }
         * {@link Dowhile.SetSkill }
         * {@link Dowhile.SetSkillsVisible }
         * {@link Dowhile.SetToleranceBoost }
         * {@link Dowhile.SetAllowedWeaponSystems }
         * {@link Dowhile.SetTradeRestrictions }
         * {@link Dowhile.SetTurretTargets }
         * {@link Dowhile.SetValue }
         * {@link Dowhile.SetupConversationMinigame }
         * {@link Dowhile.ShowHelp }
         * {@link Dowhile.RemoveHelp }
         * {@link Dowhile.SaveAiActionState }
         * {@link Dowhile.ShowInputHelp }
         * {@link Dowhile.ShowNotification }
         * {@link Dowhile.SignalObjects }
         * {@link Dowhile.Speak }
         * {@link Dowhile.StartBoost }
         * {@link Dowhile.StartConversation }
         * {@link Dowhile.CancelConversation }
         * {@link Dowhile.StartLongRangeScan }
         * {@link Dowhile.StopLongRangeScan }
         * {@link Dowhile.StartScript }
         * {@link Dowhile.StopBoost }
         * {@link Dowhile.StopCutscene }
         * {@link Dowhile.StopFiringAtTarget }
         * {@link Dowhile.SubstituteText }
         * {@link Dowhile.TriggerAutosave }
         * {@link Dowhile.TriggerBoarding }
         * {@link Dowhile.Undock }
         * {@link Dowhile.UnlockAchievement }
         * {@link Dowhile.IndicateAchievementProgress }
         * {@link Dowhile.UpdateTrade }
         * {@link Dowhile.UpgradeObjectByMacro }
         * {@link Dowhile.UpgradeObjectByTag }
         * {@link Dowhile.BuildObjectUpgrades }
         * {@link Dowhile.BuildComponentUpgrades }
         * {@link Dowhile.GetBuildSlotPrice }
         * {@link Dowhile.GetPilotDockslot }
         * {@link Dowhile.Warp }
         * {@link Dowhile.SortTrades }
         * {@link Dowhile.AddExperienceProgress }
         * {@link Dowhile.SetExperienceProgress }
         * {@link Dowhile.AddEffect }
         * {@link Dowhile.RemoveEffect }
         * {@link Dowhile.PlaySound }
         * {@link Dowhile.PlayMusic }
         * {@link Dowhile.StopMusic }
         * {@link Dowhile.QuitGameover }
         * {@link Dowhile.QuitToDesktop }
         * {@link Dowhile.QuitToStartmenu }
         * {@link Dowhile.CancelCue }
         * {@link Dowhile.CompleteCue }
         * {@link Dowhile.CreateCueActor }
         * {@link Dowhile.CreateMission }
         * {@link Dowhile.CreateOffer }
         * {@link Dowhile.CreatePlatformActor }
         * {@link Dowhile.CreatePresentationCluster }
         * {@link Dowhile.CreateRepresentativeActor }
         * {@link Dowhile.CreateTargetPoints }
         * {@link Dowhile.FindMissionOfferLocation }
         * {@link Dowhile.ForceCue }
         * {@link Dowhile.IncludeActions }
         * {@link Dowhile.PopulatePlatforms }
         * {@link Dowhile.RemoveAllCueActors }
         * {@link Dowhile.RemoveCueActor }
         * {@link Dowhile.RemoveMission }
         * {@link Dowhile.RemoveOffer }
         * {@link Dowhile.RemoveTargetPoints }
         * {@link Dowhile.ResetCue }
         * {@link Dowhile.AddHolomap }
         * {@link Dowhile.RemoveHolomap }
         * {@link Dowhile.SetHolomapTarget }
         * {@link Dowhile.SetJobActive }
         * {@link Dowhile.SetMissionActor }
         * {@link Dowhile.SetObjective }
         * {@link Dowhile.UpdateObjectiveProgress }
         * {@link Dowhile.UpdateMission }
         * {@link Dowhile.UpdateObjectiveEndtime }
         * {@link Dowhile.UpdateOffer }
         * {@link Dowhile.EnterPlayership }
         * {@link Dowhile.LeaveCockpit }
         * {@link Dowhile.ForcePlayerSpeed }
         * {@link Dowhile.SignalCue }
         * {@link Dowhile.SignalCueInstantly }
         * 
         * 
         */
        public List<Object> getDoAllOrDoAnyOrDoIf() {
            if (doAllOrDoAnyOrDoIf == null) {
                doAllOrDoAnyOrDoIf = new ArrayList<Object>();
            }
            return this.doAllOrDoAnyOrDoIf;
        }

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{}conditions"/>
     *       &lt;attribute name="comment" type="{}comment" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "eventRepairRequested",
        "eventUiTriggered",
        "eventUnitDestroyed",
        "eventUnitStartedBuilding",
        "eventUnitStoppedBuilding",
        "eventUnitStartedRepairing",
        "eventUnitStoppedRepairing",
        "eventBoardingSupportFailed",
        "eventBoardingSupportSucceeded",
        "eventBoostChargingAborted",
        "eventBoostChargingStarted",
        "eventBoostStarted",
        "eventBoostStopped",
        "eventBuildStarted",
        "eventBuildFinished",
        "eventControlEntityAdded",
        "eventConversationFinished",
        "eventConversationNextSection",
        "eventConversationReturnedToSection",
        "eventConversationStarted",
        "eventCopilotWarning",
        "eventCutsceneSignal",
        "eventCutsceneStarted",
        "eventCutsceneStopped",
        "eventMasstrafficShipRemoved",
        "eventObjectAddedSecurityArea",
        "eventIllegalActivityDetected",
        "eventObjectApproachingWaypoint",
        "eventObjectArrivedAtWaypoint",
        "eventGravidarHasScanned",
        "eventObjectJumpCompleted",
        "eventObjectJumpAborted",
        "eventObjectAttacked",
        "eventObjectAttackedObject",
        "eventObjectHullDamaged",
        "eventObjectHullRepaired",
        "eventObjectHullAboveFunctionThreshold",
        "eventObjectHullBelowFunctionThreshold",
        "eventObjectAbandoned",
        "eventObjectChangedAttention",
        "eventObjectChangedCluster",
        "eventObjectChangedOwner",
        "eventObjectChangedSector",
        "eventObjectChangedRoom",
        "eventObjectChangedZone",
        "eventObjectCollapsed",
        "eventObjectExpanded",
        "eventObjectClaimed",
        "eventObjectCollectedAmmo",
        "eventObjectCollectedPowerup",
        "eventObjectCollectedResource",
        "eventObjectCollectedWare",
        "eventObjectCommanderSet",
        "eventObjectCycledWeapons",
        "eventObjectDestroyed",
        "eventObjectDocked",
        "eventObjectDroneAdded",
        "eventObjectDroneCommanderSet",
        "eventObjectDroneRemoved",
        "eventObjectDroppedObjects",
        "eventObjectEnemyFound",
        "eventObjectIncomingMissile",
        "eventObjectFollowerCannotJump",
        "eventObjectKilledObject",
        "eventObjectLaunchedMissile",
        "eventObjectShoppinglistTradeAdded",
        "eventObjectShoppinglistTradeRemoved",
        "eventObjectSignalled",
        "eventObjectStartedRemoteControl",
        "eventObjectStoppedRemoteControl",
        "eventObjectSubordinateAdded",
        "eventObjectSubordinateRemoved",
        "eventObjectTagged",
        "eventObjectTargetInvalid",
        "eventObjectUndocked",
        "eventPlayerAttackedObject",
        "eventPlayerBoostChargingAborted",
        "eventPlayerBoostChargingStarted",
        "eventPlayerBoostStarted",
        "eventPlayerBoostStopped",
        "eventPlayerBuildStarted",
        "eventPlayerBuildFinished",
        "eventPlayerChangedTarget",
        "eventPlayerInteraction",
        "eventPlayerOwnedClaimedObject",
        "eventPlayerCollectedAmmo",
        "eventPlayerCollectedPowerup",
        "eventPlayerCollectedWare",
        "eventPlayerCommissionAdded",
        "eventPlayerDiscountAdded",
        "eventPlayerCycledWeapons",
        "eventPlayerCreated",
        "eventPlayerDiscoveredObject",
        "eventPlayerDiscoveredMissionOffer",
        "eventPlayerDiscoveredPlatform",
        "eventPlayerIncomingMissile",
        "eventPlayerFollowerCannotJump",
        "eventPlayerKilledObject",
        "eventPlayerLaunchedMissile",
        "eventPlayerLicenceAdded",
        "eventPlayerLicenceLost",
        "eventPlayerMissionOpportunity",
        "eventPlayerInformationUnlocked",
        "eventPlayerMoneyUpdated",
        "eventPlayerOwnedCollectedResource",
        "eventPlayerOwnedDestroyed",
        "eventPlayerOwnedKilledObject",
        "eventPlayerOpenedCrate",
        "eventPlayerOutOfAmmo",
        "eventPlayerPerformedBuildAction",
        "eventPlayerPerformedInfoAction",
        "eventPlayerPerformedTradeAction",
        "eventPlayerRelationChanged",
        "eventPlayerStartedRemoteControl",
        "eventPlayerStoppedRemoteControl",
        "eventPlayerStartedControl",
        "eventPlayerStoppedControl",
        "eventPlayerSubordinateAdded",
        "eventPlayerSubordinateRemoved",
        "eventPlayerTradeDiscovered",
        "eventPlayerTradeOrderCancelled",
        "eventPlayerTradeOrderCompleted",
        "eventPlayerTradeOrderStarted",
        "eventPlayerShoppinglistTradeAdded",
        "eventPlayerShoppinglistTradeRemoved",
        "eventScanAborted",
        "eventScanFinished",
        "eventScanStarted",
        "eventHackAborted",
        "eventHackFinished",
        "eventHackStarted",
        "eventSpeakFinished",
        "eventTradeOrderCancelled",
        "eventTradeOrderCompleted",
        "eventTradeOrderStarted",
        "eventDetachedFromMasstraffic",
        "eventMasstrafficNetworkRemoved",
        "eventWeaponFired",
        "eventBriefingStarted",
        "eventBriefingCancelled",
        "eventCueActivated",
        "eventCueCancelled",
        "eventCueCompleted",
        "eventCueSignalled",
        "eventGuidanceDisabled",
        "eventGuidanceEnabled",
        "eventMissionAborted",
        "eventOfferAccepted",
        "eventPlatformActorCreated",
        "eventPlayerDroneScanTriggered",
        "eventPlayerDroneHackTriggered",
        "eventBoardingTriggered",
        "eventBoardingSupportRequested",
        "checkAllOrCheckAnyOrCheckValue"
    })
    public static class Conditions {

        @XmlElement(name = "event_repair_requested")
        protected Checkall.EventRepairRequested eventRepairRequested;
        @XmlElement(name = "event_ui_triggered")
        protected Checkall.EventUiTriggered eventUiTriggered;
        @XmlElement(name = "event_unit_destroyed")
        protected Checkall.EventUnitDestroyed eventUnitDestroyed;
        @XmlElement(name = "event_unit_started_building")
        protected Checkall.EventUnitStartedBuilding eventUnitStartedBuilding;
        @XmlElement(name = "event_unit_stopped_building")
        protected Checkall.EventUnitStoppedBuilding eventUnitStoppedBuilding;
        @XmlElement(name = "event_unit_started_repairing")
        protected Checkall.EventUnitStartedRepairing eventUnitStartedRepairing;
        @XmlElement(name = "event_unit_stopped_repairing")
        protected Checkall.EventUnitStoppedRepairing eventUnitStoppedRepairing;
        @XmlElement(name = "event_boarding_support_failed")
        protected Checkall.EventBoardingSupportFailed eventBoardingSupportFailed;
        @XmlElement(name = "event_boarding_support_succeeded")
        protected Checkall.EventBoardingSupportSucceeded eventBoardingSupportSucceeded;
        @XmlElement(name = "event_boost_charging_aborted")
        protected Checkall.EventBoostChargingAborted eventBoostChargingAborted;
        @XmlElement(name = "event_boost_charging_started")
        protected Checkall.EventBoostChargingStarted eventBoostChargingStarted;
        @XmlElement(name = "event_boost_started")
        protected Checkall.EventBoostStarted eventBoostStarted;
        @XmlElement(name = "event_boost_stopped")
        protected Checkall.EventBoostStopped eventBoostStopped;
        @XmlElement(name = "event_build_started")
        protected Checkall.EventBuildStarted eventBuildStarted;
        @XmlElement(name = "event_build_finished")
        protected Checkall.EventBuildFinished eventBuildFinished;
        @XmlElement(name = "event_control_entity_added")
        protected Checkall.EventControlEntityAdded eventControlEntityAdded;
        @XmlElement(name = "event_conversation_finished")
        protected Checkall.EventConversationFinished eventConversationFinished;
        @XmlElement(name = "event_conversation_next_section")
        protected Checkall.EventConversationNextSection eventConversationNextSection;
        @XmlElement(name = "event_conversation_returned_to_section")
        protected Checkall.EventConversationReturnedToSection eventConversationReturnedToSection;
        @XmlElement(name = "event_conversation_started")
        protected Checkall.EventConversationStarted eventConversationStarted;
        @XmlElement(name = "event_copilot_warning")
        protected Checkall.EventCopilotWarning eventCopilotWarning;
        @XmlElement(name = "event_cutscene_signal")
        protected Checkall.EventCutsceneSignal eventCutsceneSignal;
        @XmlElement(name = "event_cutscene_started")
        protected Checkall.EventCutsceneStarted eventCutsceneStarted;
        @XmlElement(name = "event_cutscene_stopped")
        protected Checkall.EventCutsceneStopped eventCutsceneStopped;
        @XmlElement(name = "event_masstraffic_ship_removed")
        protected Checkall.EventMasstrafficShipRemoved eventMasstrafficShipRemoved;
        @XmlElement(name = "event_object_added_security_area")
        protected Checkall.EventObjectAddedSecurityArea eventObjectAddedSecurityArea;
        @XmlElement(name = "event_illegal_activity_detected")
        protected Checkall.EventIllegalActivityDetected eventIllegalActivityDetected;
        @XmlElement(name = "event_object_approaching_waypoint")
        protected Checkall.EventObjectApproachingWaypoint eventObjectApproachingWaypoint;
        @XmlElement(name = "event_object_arrived_at_waypoint")
        protected Checkall.EventObjectArrivedAtWaypoint eventObjectArrivedAtWaypoint;
        @XmlElement(name = "event_gravidar_has_scanned")
        protected Checkall.EventGravidarHasScanned eventGravidarHasScanned;
        @XmlElement(name = "event_object_jump_completed")
        protected Checkall.EventObjectJumpCompleted eventObjectJumpCompleted;
        @XmlElement(name = "event_object_jump_aborted")
        protected Checkall.EventObjectJumpAborted eventObjectJumpAborted;
        @XmlElement(name = "event_object_attacked")
        protected Checkall.EventObjectAttacked eventObjectAttacked;
        @XmlElement(name = "event_object_attacked_object")
        protected Checkall.EventObjectAttackedObject eventObjectAttackedObject;
        @XmlElement(name = "event_object_hull_damaged")
        protected Checkall.EventObjectHullDamaged eventObjectHullDamaged;
        @XmlElement(name = "event_object_hull_repaired")
        protected Checkall.EventObjectHullRepaired eventObjectHullRepaired;
        @XmlElement(name = "event_object_hull_above_function_threshold")
        protected Checkall.EventObjectHullAboveFunctionThreshold eventObjectHullAboveFunctionThreshold;
        @XmlElement(name = "event_object_hull_below_function_threshold")
        protected Checkall.EventObjectHullBelowFunctionThreshold eventObjectHullBelowFunctionThreshold;
        @XmlElement(name = "event_object_abandoned")
        protected Checkall.EventObjectAbandoned eventObjectAbandoned;
        @XmlElement(name = "event_object_changed_attention")
        protected Checkall.EventObjectChangedAttention eventObjectChangedAttention;
        @XmlElement(name = "event_object_changed_cluster")
        protected Checkall.EventObjectChangedCluster eventObjectChangedCluster;
        @XmlElement(name = "event_object_changed_owner")
        protected Checkall.EventObjectChangedOwner eventObjectChangedOwner;
        @XmlElement(name = "event_object_changed_sector")
        protected Checkall.EventObjectChangedSector eventObjectChangedSector;
        @XmlElement(name = "event_object_changed_room")
        protected Checkall.EventObjectChangedRoom eventObjectChangedRoom;
        @XmlElement(name = "event_object_changed_zone")
        protected Checkall.EventObjectChangedZone eventObjectChangedZone;
        @XmlElement(name = "event_object_collapsed")
        protected Checkall.EventObjectCollapsed eventObjectCollapsed;
        @XmlElement(name = "event_object_expanded")
        protected Checkall.EventObjectExpanded eventObjectExpanded;
        @XmlElement(name = "event_object_claimed")
        protected Checkall.EventObjectClaimed eventObjectClaimed;
        @XmlElement(name = "event_object_collected_ammo")
        protected Checkall.EventObjectCollectedAmmo eventObjectCollectedAmmo;
        @XmlElement(name = "event_object_collected_powerup")
        protected Checkall.EventObjectCollectedPowerup eventObjectCollectedPowerup;
        @XmlElement(name = "event_object_collected_resource")
        protected Checkall.EventObjectCollectedResource eventObjectCollectedResource;
        @XmlElement(name = "event_object_collected_ware")
        protected Checkall.EventObjectCollectedWare eventObjectCollectedWare;
        @XmlElement(name = "event_object_commander_set")
        protected Checkall.EventObjectCommanderSet eventObjectCommanderSet;
        @XmlElement(name = "event_object_cycled_weapons")
        protected Checkall.EventObjectCycledWeapons eventObjectCycledWeapons;
        @XmlElement(name = "event_object_destroyed")
        protected Checkall.EventObjectDestroyed eventObjectDestroyed;
        @XmlElement(name = "event_object_docked")
        protected Checkall.EventObjectDocked eventObjectDocked;
        @XmlElement(name = "event_object_drone_added")
        protected Checkall.EventObjectDroneAdded eventObjectDroneAdded;
        @XmlElement(name = "event_object_drone_commander_set")
        protected Checkall.EventObjectDroneCommanderSet eventObjectDroneCommanderSet;
        @XmlElement(name = "event_object_drone_removed")
        protected Checkall.EventObjectDroneRemoved eventObjectDroneRemoved;
        @XmlElement(name = "event_object_dropped_objects")
        protected Checkall.EventObjectDroppedObjects eventObjectDroppedObjects;
        @XmlElement(name = "event_object_enemy_found")
        protected Checkall.EventObjectEnemyFound eventObjectEnemyFound;
        @XmlElement(name = "event_object_incoming_missile")
        protected Checkall.EventObjectIncomingMissile eventObjectIncomingMissile;
        @XmlElement(name = "event_object_follower_cannot_jump")
        protected Checkall.EventObjectFollowerCannotJump eventObjectFollowerCannotJump;
        @XmlElement(name = "event_object_killed_object")
        protected Checkall.EventObjectKilledObject eventObjectKilledObject;
        @XmlElement(name = "event_object_launched_missile")
        protected Checkall.EventObjectLaunchedMissile eventObjectLaunchedMissile;
        @XmlElement(name = "event_object_shoppinglist_trade_added")
        protected Checkall.EventObjectShoppinglistTradeAdded eventObjectShoppinglistTradeAdded;
        @XmlElement(name = "event_object_shoppinglist_trade_removed")
        protected Checkall.EventObjectShoppinglistTradeRemoved eventObjectShoppinglistTradeRemoved;
        @XmlElement(name = "event_object_signalled")
        protected Checkall.EventObjectSignalled eventObjectSignalled;
        @XmlElement(name = "event_object_started_remote_control")
        protected Checkall.EventObjectStartedRemoteControl eventObjectStartedRemoteControl;
        @XmlElement(name = "event_object_stopped_remote_control")
        protected Checkall.EventObjectStoppedRemoteControl eventObjectStoppedRemoteControl;
        @XmlElement(name = "event_object_subordinate_added")
        protected Checkall.EventObjectSubordinateAdded eventObjectSubordinateAdded;
        @XmlElement(name = "event_object_subordinate_removed")
        protected Checkall.EventObjectSubordinateRemoved eventObjectSubordinateRemoved;
        @XmlElement(name = "event_object_tagged")
        protected Checkall.EventObjectTagged eventObjectTagged;
        @XmlElement(name = "event_object_target_invalid")
        protected Checkall.EventObjectTargetInvalid eventObjectTargetInvalid;
        @XmlElement(name = "event_object_undocked")
        protected Checkall.EventObjectUndocked eventObjectUndocked;
        @XmlElement(name = "event_player_attacked_object")
        protected Checkall.EventPlayerAttackedObject eventPlayerAttackedObject;
        @XmlElement(name = "event_player_boost_charging_aborted")
        protected Checkall.EventPlayerBoostChargingAborted eventPlayerBoostChargingAborted;
        @XmlElement(name = "event_player_boost_charging_started")
        protected Checkall.EventPlayerBoostChargingStarted eventPlayerBoostChargingStarted;
        @XmlElement(name = "event_player_boost_started")
        protected Checkall.EventPlayerBoostStarted eventPlayerBoostStarted;
        @XmlElement(name = "event_player_boost_stopped")
        protected Checkall.EventPlayerBoostStopped eventPlayerBoostStopped;
        @XmlElement(name = "event_player_build_started")
        protected Checkall.EventPlayerBuildStarted eventPlayerBuildStarted;
        @XmlElement(name = "event_player_build_finished")
        protected Checkall.EventPlayerBuildFinished eventPlayerBuildFinished;
        @XmlElement(name = "event_player_changed_target")
        protected Checkall.EventPlayerChangedTarget eventPlayerChangedTarget;
        @XmlElement(name = "event_player_interaction")
        protected Checkall.EventPlayerInteraction eventPlayerInteraction;
        @XmlElement(name = "event_player_owned_claimed_object")
        protected Checkall.EventPlayerOwnedClaimedObject eventPlayerOwnedClaimedObject;
        @XmlElement(name = "event_player_collected_ammo")
        protected Checkall.EventPlayerCollectedAmmo eventPlayerCollectedAmmo;
        @XmlElement(name = "event_player_collected_powerup")
        protected Checkall.EventPlayerCollectedPowerup eventPlayerCollectedPowerup;
        @XmlElement(name = "event_player_collected_ware")
        protected Checkall.EventPlayerCollectedWare eventPlayerCollectedWare;
        @XmlElement(name = "event_player_commission_added")
        protected EventPlayerpricemodifier eventPlayerCommissionAdded;
        @XmlElement(name = "event_player_discount_added")
        protected EventPlayerpricemodifier eventPlayerDiscountAdded;
        @XmlElement(name = "event_player_cycled_weapons")
        protected Checkall.EventPlayerCycledWeapons eventPlayerCycledWeapons;
        @XmlElement(name = "event_player_created")
        protected Checkall.EventPlayerCreated eventPlayerCreated;
        @XmlElement(name = "event_player_discovered_object")
        protected Checkall.EventPlayerDiscoveredObject eventPlayerDiscoveredObject;
        @XmlElement(name = "event_player_discovered_mission_offer")
        protected Checkall.EventPlayerDiscoveredMissionOffer eventPlayerDiscoveredMissionOffer;
        @XmlElement(name = "event_player_discovered_platform")
        protected Checkall.EventPlayerDiscoveredPlatform eventPlayerDiscoveredPlatform;
        @XmlElement(name = "event_player_incoming_missile")
        protected Checkall.EventPlayerIncomingMissile eventPlayerIncomingMissile;
        @XmlElement(name = "event_player_follower_cannot_jump")
        protected Checkall.EventPlayerFollowerCannotJump eventPlayerFollowerCannotJump;
        @XmlElement(name = "event_player_killed_object")
        protected Checkall.EventPlayerKilledObject eventPlayerKilledObject;
        @XmlElement(name = "event_player_launched_missile")
        protected Checkall.EventPlayerLaunchedMissile eventPlayerLaunchedMissile;
        @XmlElement(name = "event_player_licence_added")
        protected Checkall.EventPlayerLicenceAdded eventPlayerLicenceAdded;
        @XmlElement(name = "event_player_licence_lost")
        protected Checkall.EventPlayerLicenceLost eventPlayerLicenceLost;
        @XmlElement(name = "event_player_mission_opportunity")
        protected Checkall.EventPlayerMissionOpportunity eventPlayerMissionOpportunity;
        @XmlElement(name = "event_player_information_unlocked")
        protected Checkall.EventPlayerInformationUnlocked eventPlayerInformationUnlocked;
        @XmlElement(name = "event_player_money_updated")
        protected Checkall.EventPlayerMoneyUpdated eventPlayerMoneyUpdated;
        @XmlElement(name = "event_player_owned_collected_resource")
        protected Checkall.EventPlayerOwnedCollectedResource eventPlayerOwnedCollectedResource;
        @XmlElement(name = "event_player_owned_destroyed")
        protected Checkall.EventPlayerOwnedDestroyed eventPlayerOwnedDestroyed;
        @XmlElement(name = "event_player_owned_killed_object")
        protected Checkall.EventPlayerOwnedKilledObject eventPlayerOwnedKilledObject;
        @XmlElement(name = "event_player_opened_crate")
        protected Checkall.EventPlayerOpenedCrate eventPlayerOpenedCrate;
        @XmlElement(name = "event_player_out_of_ammo")
        protected Checkall.EventPlayerOutOfAmmo eventPlayerOutOfAmmo;
        @XmlElement(name = "event_player_performed_build_action")
        protected Checkall.EventPlayerPerformedBuildAction eventPlayerPerformedBuildAction;
        @XmlElement(name = "event_player_performed_info_action")
        protected Checkall.EventPlayerPerformedInfoAction eventPlayerPerformedInfoAction;
        @XmlElement(name = "event_player_performed_trade_action")
        protected Checkall.EventPlayerPerformedTradeAction eventPlayerPerformedTradeAction;
        @XmlElement(name = "event_player_relation_changed")
        protected Checkall.EventPlayerRelationChanged eventPlayerRelationChanged;
        @XmlElement(name = "event_player_started_remote_control")
        protected Checkall.EventPlayerStartedRemoteControl eventPlayerStartedRemoteControl;
        @XmlElement(name = "event_player_stopped_remote_control")
        protected Checkall.EventPlayerStoppedRemoteControl eventPlayerStoppedRemoteControl;
        @XmlElement(name = "event_player_started_control")
        protected Checkall.EventPlayerStartedControl eventPlayerStartedControl;
        @XmlElement(name = "event_player_stopped_control")
        protected Checkall.EventPlayerStoppedControl eventPlayerStoppedControl;
        @XmlElement(name = "event_player_subordinate_added")
        protected Checkall.EventPlayerSubordinateAdded eventPlayerSubordinateAdded;
        @XmlElement(name = "event_player_subordinate_removed")
        protected Checkall.EventPlayerSubordinateRemoved eventPlayerSubordinateRemoved;
        @XmlElement(name = "event_player_trade_discovered")
        protected Checkall.EventPlayerTradeDiscovered eventPlayerTradeDiscovered;
        @XmlElement(name = "event_player_trade_order_cancelled")
        protected Checkall.EventPlayerTradeOrderCancelled eventPlayerTradeOrderCancelled;
        @XmlElement(name = "event_player_trade_order_completed")
        protected Checkall.EventPlayerTradeOrderCompleted eventPlayerTradeOrderCompleted;
        @XmlElement(name = "event_player_trade_order_started")
        protected Checkall.EventPlayerTradeOrderStarted eventPlayerTradeOrderStarted;
        @XmlElement(name = "event_player_shoppinglist_trade_added")
        protected Checkall.EventPlayerShoppinglistTradeAdded eventPlayerShoppinglistTradeAdded;
        @XmlElement(name = "event_player_shoppinglist_trade_removed")
        protected Checkall.EventPlayerShoppinglistTradeRemoved eventPlayerShoppinglistTradeRemoved;
        @XmlElement(name = "event_scan_aborted")
        protected Checkall.EventScanAborted eventScanAborted;
        @XmlElement(name = "event_scan_finished")
        protected Checkall.EventScanFinished eventScanFinished;
        @XmlElement(name = "event_scan_started")
        protected Checkall.EventScanStarted eventScanStarted;
        @XmlElement(name = "event_hack_aborted")
        protected Checkall.EventHackAborted eventHackAborted;
        @XmlElement(name = "event_hack_finished")
        protected Checkall.EventHackFinished eventHackFinished;
        @XmlElement(name = "event_hack_started")
        protected Checkall.EventHackStarted eventHackStarted;
        @XmlElement(name = "event_speak_finished")
        protected Checkall.EventSpeakFinished eventSpeakFinished;
        @XmlElement(name = "event_trade_order_cancelled")
        protected Checkall.EventTradeOrderCancelled eventTradeOrderCancelled;
        @XmlElement(name = "event_trade_order_completed")
        protected Checkall.EventTradeOrderCompleted eventTradeOrderCompleted;
        @XmlElement(name = "event_trade_order_started")
        protected Checkall.EventTradeOrderStarted eventTradeOrderStarted;
        @XmlElement(name = "event_detached_from_masstraffic")
        protected Checkall.EventDetachedFromMasstraffic eventDetachedFromMasstraffic;
        @XmlElement(name = "event_masstraffic_network_removed")
        protected Checkall.EventMasstrafficNetworkRemoved eventMasstrafficNetworkRemoved;
        @XmlElement(name = "event_weapon_fired")
        protected Checkall.EventWeaponFired eventWeaponFired;
        @XmlElement(name = "event_briefing_started")
        protected Checkall.EventBriefingStarted eventBriefingStarted;
        @XmlElement(name = "event_briefing_cancelled")
        protected Checkall.EventBriefingCancelled eventBriefingCancelled;
        @XmlElement(name = "event_cue_activated")
        protected Checkall.EventCueActivated eventCueActivated;
        @XmlElement(name = "event_cue_cancelled")
        protected Checkall.EventCueCancelled eventCueCancelled;
        @XmlElement(name = "event_cue_completed")
        protected Checkall.EventCueCompleted eventCueCompleted;
        @XmlElement(name = "event_cue_signalled")
        protected Checkall.EventCueSignalled eventCueSignalled;
        @XmlElement(name = "event_guidance_disabled")
        protected Checkall.EventGuidanceDisabled eventGuidanceDisabled;
        @XmlElement(name = "event_guidance_enabled")
        protected Checkall.EventGuidanceEnabled eventGuidanceEnabled;
        @XmlElement(name = "event_mission_aborted")
        protected Checkall.EventMissionAborted eventMissionAborted;
        @XmlElement(name = "event_offer_accepted")
        protected Checkall.EventOfferAccepted eventOfferAccepted;
        @XmlElement(name = "event_platform_actor_created")
        protected Checkall.EventPlatformActorCreated eventPlatformActorCreated;
        @XmlElement(name = "event_player_drone_scan_triggered")
        protected Checkall.EventPlayerDroneScanTriggered eventPlayerDroneScanTriggered;
        @XmlElement(name = "event_player_drone_hack_triggered")
        protected Checkall.EventPlayerDroneHackTriggered eventPlayerDroneHackTriggered;
        @XmlElement(name = "event_boarding_triggered")
        protected Checkall.EventBoardingTriggered eventBoardingTriggered;
        @XmlElement(name = "event_boarding_support_requested")
        protected Checkall.EventBoardingSupportRequested eventBoardingSupportRequested;
        @XmlElements({
            @XmlElement(name = "check_all", type = Checkall.class),
            @XmlElement(name = "check_any", type = Checkany.class),
            @XmlElement(name = "check_value", type = Checkall.CheckValue.class),
            @XmlElement(name = "check_age", type = Checkall.CheckAge.class),
            @XmlElement(name = "check_object", type = Checkall.CheckObject.class),
            @XmlElement(name = "check_weapon_active", type = Checkall.CheckWeaponActive.class),
            @XmlElement(name = "check_weapon_installed", type = Checkall.CheckWeaponInstalled.class),
            @XmlElement(name = "count_clusters", type = Checkall.CountClusters.class),
            @XmlElement(name = "count_gravidar_contacts", type = Checkall.CountGravidarContacts.class),
            @XmlElement(name = "count_object_components", type = Checkall.CountObjectComponents.class),
            @XmlElement(name = "count_objects", type = Checkall.CountObjects.class),
            @XmlElement(name = "count_sectors", type = Checkall.CountSectors.class),
            @XmlElement(name = "count_ships", type = Checkall.CountShips.class),
            @XmlElement(name = "count_stations", type = Checkall.CountStations.class),
            @XmlElement(name = "count_zones", type = Checkall.CountZones.class),
            @XmlElement(name = "debug_text", type = Checkall.DebugText.class),
            @XmlElement(name = "match_object", type = Checkall.MatchObject.class),
            @XmlElement(name = "match_any_object", type = Checkall.MatchAnyObject.class),
            @XmlElement(name = "match_all_objects", type = Checkall.MatchAllObjects.class),
            @XmlElement(name = "remove_value", type = Checkall.RemoveValue.class),
            @XmlElement(name = "set_value", type = Checkall.SetValue.class),
            @XmlElement(name = "cue_is_active", type = Checkall.CueIsActive.class),
            @XmlElement(name = "cue_is_cancelled", type = Checkall.CueIsCancelled.class),
            @XmlElement(name = "cue_is_complete", type = Checkall.CueIsComplete.class),
            @XmlElement(name = "cue_is_disabled", type = Checkall.CueIsDisabled.class),
            @XmlElement(name = "cue_is_waiting", type = Checkall.CueIsWaiting.class),
            @XmlElement(name = "guidance_is_active", type = Checkall.GuidanceIsActive.class)
        })
        protected List<Object> checkAllOrCheckAnyOrCheckValue;
        @XmlAttribute(name = "comment")
        protected String comment;

        /**
         * Gets the value of the eventRepairRequested property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventRepairRequested }
         *     
         */
        public Checkall.EventRepairRequested getEventRepairRequested() {
            return eventRepairRequested;
        }

        /**
         * Sets the value of the eventRepairRequested property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventRepairRequested }
         *     
         */
        public void setEventRepairRequested(Checkall.EventRepairRequested value) {
            this.eventRepairRequested = value;
        }

        /**
         * Gets the value of the eventUiTriggered property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUiTriggered }
         *     
         */
        public Checkall.EventUiTriggered getEventUiTriggered() {
            return eventUiTriggered;
        }

        /**
         * Sets the value of the eventUiTriggered property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUiTriggered }
         *     
         */
        public void setEventUiTriggered(Checkall.EventUiTriggered value) {
            this.eventUiTriggered = value;
        }

        /**
         * Gets the value of the eventUnitDestroyed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUnitDestroyed }
         *     
         */
        public Checkall.EventUnitDestroyed getEventUnitDestroyed() {
            return eventUnitDestroyed;
        }

        /**
         * Sets the value of the eventUnitDestroyed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUnitDestroyed }
         *     
         */
        public void setEventUnitDestroyed(Checkall.EventUnitDestroyed value) {
            this.eventUnitDestroyed = value;
        }

        /**
         * Gets the value of the eventUnitStartedBuilding property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUnitStartedBuilding }
         *     
         */
        public Checkall.EventUnitStartedBuilding getEventUnitStartedBuilding() {
            return eventUnitStartedBuilding;
        }

        /**
         * Sets the value of the eventUnitStartedBuilding property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUnitStartedBuilding }
         *     
         */
        public void setEventUnitStartedBuilding(Checkall.EventUnitStartedBuilding value) {
            this.eventUnitStartedBuilding = value;
        }

        /**
         * Gets the value of the eventUnitStoppedBuilding property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUnitStoppedBuilding }
         *     
         */
        public Checkall.EventUnitStoppedBuilding getEventUnitStoppedBuilding() {
            return eventUnitStoppedBuilding;
        }

        /**
         * Sets the value of the eventUnitStoppedBuilding property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUnitStoppedBuilding }
         *     
         */
        public void setEventUnitStoppedBuilding(Checkall.EventUnitStoppedBuilding value) {
            this.eventUnitStoppedBuilding = value;
        }

        /**
         * Gets the value of the eventUnitStartedRepairing property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUnitStartedRepairing }
         *     
         */
        public Checkall.EventUnitStartedRepairing getEventUnitStartedRepairing() {
            return eventUnitStartedRepairing;
        }

        /**
         * Sets the value of the eventUnitStartedRepairing property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUnitStartedRepairing }
         *     
         */
        public void setEventUnitStartedRepairing(Checkall.EventUnitStartedRepairing value) {
            this.eventUnitStartedRepairing = value;
        }

        /**
         * Gets the value of the eventUnitStoppedRepairing property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventUnitStoppedRepairing }
         *     
         */
        public Checkall.EventUnitStoppedRepairing getEventUnitStoppedRepairing() {
            return eventUnitStoppedRepairing;
        }

        /**
         * Sets the value of the eventUnitStoppedRepairing property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventUnitStoppedRepairing }
         *     
         */
        public void setEventUnitStoppedRepairing(Checkall.EventUnitStoppedRepairing value) {
            this.eventUnitStoppedRepairing = value;
        }

        /**
         * Gets the value of the eventBoardingSupportFailed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoardingSupportFailed }
         *     
         */
        public Checkall.EventBoardingSupportFailed getEventBoardingSupportFailed() {
            return eventBoardingSupportFailed;
        }

        /**
         * Sets the value of the eventBoardingSupportFailed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoardingSupportFailed }
         *     
         */
        public void setEventBoardingSupportFailed(Checkall.EventBoardingSupportFailed value) {
            this.eventBoardingSupportFailed = value;
        }

        /**
         * Gets the value of the eventBoardingSupportSucceeded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoardingSupportSucceeded }
         *     
         */
        public Checkall.EventBoardingSupportSucceeded getEventBoardingSupportSucceeded() {
            return eventBoardingSupportSucceeded;
        }

        /**
         * Sets the value of the eventBoardingSupportSucceeded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoardingSupportSucceeded }
         *     
         */
        public void setEventBoardingSupportSucceeded(Checkall.EventBoardingSupportSucceeded value) {
            this.eventBoardingSupportSucceeded = value;
        }

        /**
         * Gets the value of the eventBoostChargingAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoostChargingAborted }
         *     
         */
        public Checkall.EventBoostChargingAborted getEventBoostChargingAborted() {
            return eventBoostChargingAborted;
        }

        /**
         * Sets the value of the eventBoostChargingAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoostChargingAborted }
         *     
         */
        public void setEventBoostChargingAborted(Checkall.EventBoostChargingAborted value) {
            this.eventBoostChargingAborted = value;
        }

        /**
         * Gets the value of the eventBoostChargingStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoostChargingStarted }
         *     
         */
        public Checkall.EventBoostChargingStarted getEventBoostChargingStarted() {
            return eventBoostChargingStarted;
        }

        /**
         * Sets the value of the eventBoostChargingStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoostChargingStarted }
         *     
         */
        public void setEventBoostChargingStarted(Checkall.EventBoostChargingStarted value) {
            this.eventBoostChargingStarted = value;
        }

        /**
         * Gets the value of the eventBoostStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoostStarted }
         *     
         */
        public Checkall.EventBoostStarted getEventBoostStarted() {
            return eventBoostStarted;
        }

        /**
         * Sets the value of the eventBoostStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoostStarted }
         *     
         */
        public void setEventBoostStarted(Checkall.EventBoostStarted value) {
            this.eventBoostStarted = value;
        }

        /**
         * Gets the value of the eventBoostStopped property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoostStopped }
         *     
         */
        public Checkall.EventBoostStopped getEventBoostStopped() {
            return eventBoostStopped;
        }

        /**
         * Sets the value of the eventBoostStopped property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoostStopped }
         *     
         */
        public void setEventBoostStopped(Checkall.EventBoostStopped value) {
            this.eventBoostStopped = value;
        }

        /**
         * Gets the value of the eventBuildStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBuildStarted }
         *     
         */
        public Checkall.EventBuildStarted getEventBuildStarted() {
            return eventBuildStarted;
        }

        /**
         * Sets the value of the eventBuildStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBuildStarted }
         *     
         */
        public void setEventBuildStarted(Checkall.EventBuildStarted value) {
            this.eventBuildStarted = value;
        }

        /**
         * Gets the value of the eventBuildFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBuildFinished }
         *     
         */
        public Checkall.EventBuildFinished getEventBuildFinished() {
            return eventBuildFinished;
        }

        /**
         * Sets the value of the eventBuildFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBuildFinished }
         *     
         */
        public void setEventBuildFinished(Checkall.EventBuildFinished value) {
            this.eventBuildFinished = value;
        }

        /**
         * Gets the value of the eventControlEntityAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventControlEntityAdded }
         *     
         */
        public Checkall.EventControlEntityAdded getEventControlEntityAdded() {
            return eventControlEntityAdded;
        }

        /**
         * Sets the value of the eventControlEntityAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventControlEntityAdded }
         *     
         */
        public void setEventControlEntityAdded(Checkall.EventControlEntityAdded value) {
            this.eventControlEntityAdded = value;
        }

        /**
         * Gets the value of the eventConversationFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventConversationFinished }
         *     
         */
        public Checkall.EventConversationFinished getEventConversationFinished() {
            return eventConversationFinished;
        }

        /**
         * Sets the value of the eventConversationFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventConversationFinished }
         *     
         */
        public void setEventConversationFinished(Checkall.EventConversationFinished value) {
            this.eventConversationFinished = value;
        }

        /**
         * Gets the value of the eventConversationNextSection property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventConversationNextSection }
         *     
         */
        public Checkall.EventConversationNextSection getEventConversationNextSection() {
            return eventConversationNextSection;
        }

        /**
         * Sets the value of the eventConversationNextSection property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventConversationNextSection }
         *     
         */
        public void setEventConversationNextSection(Checkall.EventConversationNextSection value) {
            this.eventConversationNextSection = value;
        }

        /**
         * Gets the value of the eventConversationReturnedToSection property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventConversationReturnedToSection }
         *     
         */
        public Checkall.EventConversationReturnedToSection getEventConversationReturnedToSection() {
            return eventConversationReturnedToSection;
        }

        /**
         * Sets the value of the eventConversationReturnedToSection property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventConversationReturnedToSection }
         *     
         */
        public void setEventConversationReturnedToSection(Checkall.EventConversationReturnedToSection value) {
            this.eventConversationReturnedToSection = value;
        }

        /**
         * Gets the value of the eventConversationStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventConversationStarted }
         *     
         */
        public Checkall.EventConversationStarted getEventConversationStarted() {
            return eventConversationStarted;
        }

        /**
         * Sets the value of the eventConversationStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventConversationStarted }
         *     
         */
        public void setEventConversationStarted(Checkall.EventConversationStarted value) {
            this.eventConversationStarted = value;
        }

        /**
         * Gets the value of the eventCopilotWarning property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCopilotWarning }
         *     
         */
        public Checkall.EventCopilotWarning getEventCopilotWarning() {
            return eventCopilotWarning;
        }

        /**
         * Sets the value of the eventCopilotWarning property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCopilotWarning }
         *     
         */
        public void setEventCopilotWarning(Checkall.EventCopilotWarning value) {
            this.eventCopilotWarning = value;
        }

        /**
         * Gets the value of the eventCutsceneSignal property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCutsceneSignal }
         *     
         */
        public Checkall.EventCutsceneSignal getEventCutsceneSignal() {
            return eventCutsceneSignal;
        }

        /**
         * Sets the value of the eventCutsceneSignal property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCutsceneSignal }
         *     
         */
        public void setEventCutsceneSignal(Checkall.EventCutsceneSignal value) {
            this.eventCutsceneSignal = value;
        }

        /**
         * Gets the value of the eventCutsceneStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCutsceneStarted }
         *     
         */
        public Checkall.EventCutsceneStarted getEventCutsceneStarted() {
            return eventCutsceneStarted;
        }

        /**
         * Sets the value of the eventCutsceneStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCutsceneStarted }
         *     
         */
        public void setEventCutsceneStarted(Checkall.EventCutsceneStarted value) {
            this.eventCutsceneStarted = value;
        }

        /**
         * Gets the value of the eventCutsceneStopped property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCutsceneStopped }
         *     
         */
        public Checkall.EventCutsceneStopped getEventCutsceneStopped() {
            return eventCutsceneStopped;
        }

        /**
         * Sets the value of the eventCutsceneStopped property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCutsceneStopped }
         *     
         */
        public void setEventCutsceneStopped(Checkall.EventCutsceneStopped value) {
            this.eventCutsceneStopped = value;
        }

        /**
         * Gets the value of the eventMasstrafficShipRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventMasstrafficShipRemoved }
         *     
         */
        public Checkall.EventMasstrafficShipRemoved getEventMasstrafficShipRemoved() {
            return eventMasstrafficShipRemoved;
        }

        /**
         * Sets the value of the eventMasstrafficShipRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventMasstrafficShipRemoved }
         *     
         */
        public void setEventMasstrafficShipRemoved(Checkall.EventMasstrafficShipRemoved value) {
            this.eventMasstrafficShipRemoved = value;
        }

        /**
         * Gets the value of the eventObjectAddedSecurityArea property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectAddedSecurityArea }
         *     
         */
        public Checkall.EventObjectAddedSecurityArea getEventObjectAddedSecurityArea() {
            return eventObjectAddedSecurityArea;
        }

        /**
         * Sets the value of the eventObjectAddedSecurityArea property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectAddedSecurityArea }
         *     
         */
        public void setEventObjectAddedSecurityArea(Checkall.EventObjectAddedSecurityArea value) {
            this.eventObjectAddedSecurityArea = value;
        }

        /**
         * Gets the value of the eventIllegalActivityDetected property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventIllegalActivityDetected }
         *     
         */
        public Checkall.EventIllegalActivityDetected getEventIllegalActivityDetected() {
            return eventIllegalActivityDetected;
        }

        /**
         * Sets the value of the eventIllegalActivityDetected property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventIllegalActivityDetected }
         *     
         */
        public void setEventIllegalActivityDetected(Checkall.EventIllegalActivityDetected value) {
            this.eventIllegalActivityDetected = value;
        }

        /**
         * Gets the value of the eventObjectApproachingWaypoint property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectApproachingWaypoint }
         *     
         */
        public Checkall.EventObjectApproachingWaypoint getEventObjectApproachingWaypoint() {
            return eventObjectApproachingWaypoint;
        }

        /**
         * Sets the value of the eventObjectApproachingWaypoint property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectApproachingWaypoint }
         *     
         */
        public void setEventObjectApproachingWaypoint(Checkall.EventObjectApproachingWaypoint value) {
            this.eventObjectApproachingWaypoint = value;
        }

        /**
         * Gets the value of the eventObjectArrivedAtWaypoint property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectArrivedAtWaypoint }
         *     
         */
        public Checkall.EventObjectArrivedAtWaypoint getEventObjectArrivedAtWaypoint() {
            return eventObjectArrivedAtWaypoint;
        }

        /**
         * Sets the value of the eventObjectArrivedAtWaypoint property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectArrivedAtWaypoint }
         *     
         */
        public void setEventObjectArrivedAtWaypoint(Checkall.EventObjectArrivedAtWaypoint value) {
            this.eventObjectArrivedAtWaypoint = value;
        }

        /**
         * Gets the value of the eventGravidarHasScanned property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventGravidarHasScanned }
         *     
         */
        public Checkall.EventGravidarHasScanned getEventGravidarHasScanned() {
            return eventGravidarHasScanned;
        }

        /**
         * Sets the value of the eventGravidarHasScanned property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventGravidarHasScanned }
         *     
         */
        public void setEventGravidarHasScanned(Checkall.EventGravidarHasScanned value) {
            this.eventGravidarHasScanned = value;
        }

        /**
         * Gets the value of the eventObjectJumpCompleted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectJumpCompleted }
         *     
         */
        public Checkall.EventObjectJumpCompleted getEventObjectJumpCompleted() {
            return eventObjectJumpCompleted;
        }

        /**
         * Sets the value of the eventObjectJumpCompleted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectJumpCompleted }
         *     
         */
        public void setEventObjectJumpCompleted(Checkall.EventObjectJumpCompleted value) {
            this.eventObjectJumpCompleted = value;
        }

        /**
         * Gets the value of the eventObjectJumpAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectJumpAborted }
         *     
         */
        public Checkall.EventObjectJumpAborted getEventObjectJumpAborted() {
            return eventObjectJumpAborted;
        }

        /**
         * Sets the value of the eventObjectJumpAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectJumpAborted }
         *     
         */
        public void setEventObjectJumpAborted(Checkall.EventObjectJumpAborted value) {
            this.eventObjectJumpAborted = value;
        }

        /**
         * Gets the value of the eventObjectAttacked property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectAttacked }
         *     
         */
        public Checkall.EventObjectAttacked getEventObjectAttacked() {
            return eventObjectAttacked;
        }

        /**
         * Sets the value of the eventObjectAttacked property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectAttacked }
         *     
         */
        public void setEventObjectAttacked(Checkall.EventObjectAttacked value) {
            this.eventObjectAttacked = value;
        }

        /**
         * Gets the value of the eventObjectAttackedObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectAttackedObject }
         *     
         */
        public Checkall.EventObjectAttackedObject getEventObjectAttackedObject() {
            return eventObjectAttackedObject;
        }

        /**
         * Sets the value of the eventObjectAttackedObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectAttackedObject }
         *     
         */
        public void setEventObjectAttackedObject(Checkall.EventObjectAttackedObject value) {
            this.eventObjectAttackedObject = value;
        }

        /**
         * Gets the value of the eventObjectHullDamaged property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectHullDamaged }
         *     
         */
        public Checkall.EventObjectHullDamaged getEventObjectHullDamaged() {
            return eventObjectHullDamaged;
        }

        /**
         * Sets the value of the eventObjectHullDamaged property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectHullDamaged }
         *     
         */
        public void setEventObjectHullDamaged(Checkall.EventObjectHullDamaged value) {
            this.eventObjectHullDamaged = value;
        }

        /**
         * Gets the value of the eventObjectHullRepaired property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectHullRepaired }
         *     
         */
        public Checkall.EventObjectHullRepaired getEventObjectHullRepaired() {
            return eventObjectHullRepaired;
        }

        /**
         * Sets the value of the eventObjectHullRepaired property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectHullRepaired }
         *     
         */
        public void setEventObjectHullRepaired(Checkall.EventObjectHullRepaired value) {
            this.eventObjectHullRepaired = value;
        }

        /**
         * Gets the value of the eventObjectHullAboveFunctionThreshold property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectHullAboveFunctionThreshold }
         *     
         */
        public Checkall.EventObjectHullAboveFunctionThreshold getEventObjectHullAboveFunctionThreshold() {
            return eventObjectHullAboveFunctionThreshold;
        }

        /**
         * Sets the value of the eventObjectHullAboveFunctionThreshold property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectHullAboveFunctionThreshold }
         *     
         */
        public void setEventObjectHullAboveFunctionThreshold(Checkall.EventObjectHullAboveFunctionThreshold value) {
            this.eventObjectHullAboveFunctionThreshold = value;
        }

        /**
         * Gets the value of the eventObjectHullBelowFunctionThreshold property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectHullBelowFunctionThreshold }
         *     
         */
        public Checkall.EventObjectHullBelowFunctionThreshold getEventObjectHullBelowFunctionThreshold() {
            return eventObjectHullBelowFunctionThreshold;
        }

        /**
         * Sets the value of the eventObjectHullBelowFunctionThreshold property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectHullBelowFunctionThreshold }
         *     
         */
        public void setEventObjectHullBelowFunctionThreshold(Checkall.EventObjectHullBelowFunctionThreshold value) {
            this.eventObjectHullBelowFunctionThreshold = value;
        }

        /**
         * Gets the value of the eventObjectAbandoned property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectAbandoned }
         *     
         */
        public Checkall.EventObjectAbandoned getEventObjectAbandoned() {
            return eventObjectAbandoned;
        }

        /**
         * Sets the value of the eventObjectAbandoned property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectAbandoned }
         *     
         */
        public void setEventObjectAbandoned(Checkall.EventObjectAbandoned value) {
            this.eventObjectAbandoned = value;
        }

        /**
         * Gets the value of the eventObjectChangedAttention property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedAttention }
         *     
         */
        public Checkall.EventObjectChangedAttention getEventObjectChangedAttention() {
            return eventObjectChangedAttention;
        }

        /**
         * Sets the value of the eventObjectChangedAttention property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedAttention }
         *     
         */
        public void setEventObjectChangedAttention(Checkall.EventObjectChangedAttention value) {
            this.eventObjectChangedAttention = value;
        }

        /**
         * Gets the value of the eventObjectChangedCluster property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedCluster }
         *     
         */
        public Checkall.EventObjectChangedCluster getEventObjectChangedCluster() {
            return eventObjectChangedCluster;
        }

        /**
         * Sets the value of the eventObjectChangedCluster property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedCluster }
         *     
         */
        public void setEventObjectChangedCluster(Checkall.EventObjectChangedCluster value) {
            this.eventObjectChangedCluster = value;
        }

        /**
         * Gets the value of the eventObjectChangedOwner property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedOwner }
         *     
         */
        public Checkall.EventObjectChangedOwner getEventObjectChangedOwner() {
            return eventObjectChangedOwner;
        }

        /**
         * Sets the value of the eventObjectChangedOwner property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedOwner }
         *     
         */
        public void setEventObjectChangedOwner(Checkall.EventObjectChangedOwner value) {
            this.eventObjectChangedOwner = value;
        }

        /**
         * Gets the value of the eventObjectChangedSector property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedSector }
         *     
         */
        public Checkall.EventObjectChangedSector getEventObjectChangedSector() {
            return eventObjectChangedSector;
        }

        /**
         * Sets the value of the eventObjectChangedSector property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedSector }
         *     
         */
        public void setEventObjectChangedSector(Checkall.EventObjectChangedSector value) {
            this.eventObjectChangedSector = value;
        }

        /**
         * Gets the value of the eventObjectChangedRoom property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedRoom }
         *     
         */
        public Checkall.EventObjectChangedRoom getEventObjectChangedRoom() {
            return eventObjectChangedRoom;
        }

        /**
         * Sets the value of the eventObjectChangedRoom property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedRoom }
         *     
         */
        public void setEventObjectChangedRoom(Checkall.EventObjectChangedRoom value) {
            this.eventObjectChangedRoom = value;
        }

        /**
         * Gets the value of the eventObjectChangedZone property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectChangedZone }
         *     
         */
        public Checkall.EventObjectChangedZone getEventObjectChangedZone() {
            return eventObjectChangedZone;
        }

        /**
         * Sets the value of the eventObjectChangedZone property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectChangedZone }
         *     
         */
        public void setEventObjectChangedZone(Checkall.EventObjectChangedZone value) {
            this.eventObjectChangedZone = value;
        }

        /**
         * Gets the value of the eventObjectCollapsed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCollapsed }
         *     
         */
        public Checkall.EventObjectCollapsed getEventObjectCollapsed() {
            return eventObjectCollapsed;
        }

        /**
         * Sets the value of the eventObjectCollapsed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCollapsed }
         *     
         */
        public void setEventObjectCollapsed(Checkall.EventObjectCollapsed value) {
            this.eventObjectCollapsed = value;
        }

        /**
         * Gets the value of the eventObjectExpanded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectExpanded }
         *     
         */
        public Checkall.EventObjectExpanded getEventObjectExpanded() {
            return eventObjectExpanded;
        }

        /**
         * Sets the value of the eventObjectExpanded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectExpanded }
         *     
         */
        public void setEventObjectExpanded(Checkall.EventObjectExpanded value) {
            this.eventObjectExpanded = value;
        }

        /**
         * Gets the value of the eventObjectClaimed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectClaimed }
         *     
         */
        public Checkall.EventObjectClaimed getEventObjectClaimed() {
            return eventObjectClaimed;
        }

        /**
         * Sets the value of the eventObjectClaimed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectClaimed }
         *     
         */
        public void setEventObjectClaimed(Checkall.EventObjectClaimed value) {
            this.eventObjectClaimed = value;
        }

        /**
         * Gets the value of the eventObjectCollectedAmmo property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCollectedAmmo }
         *     
         */
        public Checkall.EventObjectCollectedAmmo getEventObjectCollectedAmmo() {
            return eventObjectCollectedAmmo;
        }

        /**
         * Sets the value of the eventObjectCollectedAmmo property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCollectedAmmo }
         *     
         */
        public void setEventObjectCollectedAmmo(Checkall.EventObjectCollectedAmmo value) {
            this.eventObjectCollectedAmmo = value;
        }

        /**
         * Gets the value of the eventObjectCollectedPowerup property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCollectedPowerup }
         *     
         */
        public Checkall.EventObjectCollectedPowerup getEventObjectCollectedPowerup() {
            return eventObjectCollectedPowerup;
        }

        /**
         * Sets the value of the eventObjectCollectedPowerup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCollectedPowerup }
         *     
         */
        public void setEventObjectCollectedPowerup(Checkall.EventObjectCollectedPowerup value) {
            this.eventObjectCollectedPowerup = value;
        }

        /**
         * Gets the value of the eventObjectCollectedResource property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCollectedResource }
         *     
         */
        public Checkall.EventObjectCollectedResource getEventObjectCollectedResource() {
            return eventObjectCollectedResource;
        }

        /**
         * Sets the value of the eventObjectCollectedResource property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCollectedResource }
         *     
         */
        public void setEventObjectCollectedResource(Checkall.EventObjectCollectedResource value) {
            this.eventObjectCollectedResource = value;
        }

        /**
         * Gets the value of the eventObjectCollectedWare property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCollectedWare }
         *     
         */
        public Checkall.EventObjectCollectedWare getEventObjectCollectedWare() {
            return eventObjectCollectedWare;
        }

        /**
         * Sets the value of the eventObjectCollectedWare property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCollectedWare }
         *     
         */
        public void setEventObjectCollectedWare(Checkall.EventObjectCollectedWare value) {
            this.eventObjectCollectedWare = value;
        }

        /**
         * Gets the value of the eventObjectCommanderSet property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCommanderSet }
         *     
         */
        public Checkall.EventObjectCommanderSet getEventObjectCommanderSet() {
            return eventObjectCommanderSet;
        }

        /**
         * Sets the value of the eventObjectCommanderSet property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCommanderSet }
         *     
         */
        public void setEventObjectCommanderSet(Checkall.EventObjectCommanderSet value) {
            this.eventObjectCommanderSet = value;
        }

        /**
         * Gets the value of the eventObjectCycledWeapons property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectCycledWeapons }
         *     
         */
        public Checkall.EventObjectCycledWeapons getEventObjectCycledWeapons() {
            return eventObjectCycledWeapons;
        }

        /**
         * Sets the value of the eventObjectCycledWeapons property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectCycledWeapons }
         *     
         */
        public void setEventObjectCycledWeapons(Checkall.EventObjectCycledWeapons value) {
            this.eventObjectCycledWeapons = value;
        }

        /**
         * Gets the value of the eventObjectDestroyed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDestroyed }
         *     
         */
        public Checkall.EventObjectDestroyed getEventObjectDestroyed() {
            return eventObjectDestroyed;
        }

        /**
         * Sets the value of the eventObjectDestroyed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDestroyed }
         *     
         */
        public void setEventObjectDestroyed(Checkall.EventObjectDestroyed value) {
            this.eventObjectDestroyed = value;
        }

        /**
         * Gets the value of the eventObjectDocked property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDocked }
         *     
         */
        public Checkall.EventObjectDocked getEventObjectDocked() {
            return eventObjectDocked;
        }

        /**
         * Sets the value of the eventObjectDocked property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDocked }
         *     
         */
        public void setEventObjectDocked(Checkall.EventObjectDocked value) {
            this.eventObjectDocked = value;
        }

        /**
         * Gets the value of the eventObjectDroneAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDroneAdded }
         *     
         */
        public Checkall.EventObjectDroneAdded getEventObjectDroneAdded() {
            return eventObjectDroneAdded;
        }

        /**
         * Sets the value of the eventObjectDroneAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDroneAdded }
         *     
         */
        public void setEventObjectDroneAdded(Checkall.EventObjectDroneAdded value) {
            this.eventObjectDroneAdded = value;
        }

        /**
         * Gets the value of the eventObjectDroneCommanderSet property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDroneCommanderSet }
         *     
         */
        public Checkall.EventObjectDroneCommanderSet getEventObjectDroneCommanderSet() {
            return eventObjectDroneCommanderSet;
        }

        /**
         * Sets the value of the eventObjectDroneCommanderSet property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDroneCommanderSet }
         *     
         */
        public void setEventObjectDroneCommanderSet(Checkall.EventObjectDroneCommanderSet value) {
            this.eventObjectDroneCommanderSet = value;
        }

        /**
         * Gets the value of the eventObjectDroneRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDroneRemoved }
         *     
         */
        public Checkall.EventObjectDroneRemoved getEventObjectDroneRemoved() {
            return eventObjectDroneRemoved;
        }

        /**
         * Sets the value of the eventObjectDroneRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDroneRemoved }
         *     
         */
        public void setEventObjectDroneRemoved(Checkall.EventObjectDroneRemoved value) {
            this.eventObjectDroneRemoved = value;
        }

        /**
         * Gets the value of the eventObjectDroppedObjects property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectDroppedObjects }
         *     
         */
        public Checkall.EventObjectDroppedObjects getEventObjectDroppedObjects() {
            return eventObjectDroppedObjects;
        }

        /**
         * Sets the value of the eventObjectDroppedObjects property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectDroppedObjects }
         *     
         */
        public void setEventObjectDroppedObjects(Checkall.EventObjectDroppedObjects value) {
            this.eventObjectDroppedObjects = value;
        }

        /**
         * Gets the value of the eventObjectEnemyFound property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectEnemyFound }
         *     
         */
        public Checkall.EventObjectEnemyFound getEventObjectEnemyFound() {
            return eventObjectEnemyFound;
        }

        /**
         * Sets the value of the eventObjectEnemyFound property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectEnemyFound }
         *     
         */
        public void setEventObjectEnemyFound(Checkall.EventObjectEnemyFound value) {
            this.eventObjectEnemyFound = value;
        }

        /**
         * Gets the value of the eventObjectIncomingMissile property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectIncomingMissile }
         *     
         */
        public Checkall.EventObjectIncomingMissile getEventObjectIncomingMissile() {
            return eventObjectIncomingMissile;
        }

        /**
         * Sets the value of the eventObjectIncomingMissile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectIncomingMissile }
         *     
         */
        public void setEventObjectIncomingMissile(Checkall.EventObjectIncomingMissile value) {
            this.eventObjectIncomingMissile = value;
        }

        /**
         * Gets the value of the eventObjectFollowerCannotJump property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectFollowerCannotJump }
         *     
         */
        public Checkall.EventObjectFollowerCannotJump getEventObjectFollowerCannotJump() {
            return eventObjectFollowerCannotJump;
        }

        /**
         * Sets the value of the eventObjectFollowerCannotJump property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectFollowerCannotJump }
         *     
         */
        public void setEventObjectFollowerCannotJump(Checkall.EventObjectFollowerCannotJump value) {
            this.eventObjectFollowerCannotJump = value;
        }

        /**
         * Gets the value of the eventObjectKilledObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectKilledObject }
         *     
         */
        public Checkall.EventObjectKilledObject getEventObjectKilledObject() {
            return eventObjectKilledObject;
        }

        /**
         * Sets the value of the eventObjectKilledObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectKilledObject }
         *     
         */
        public void setEventObjectKilledObject(Checkall.EventObjectKilledObject value) {
            this.eventObjectKilledObject = value;
        }

        /**
         * Gets the value of the eventObjectLaunchedMissile property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectLaunchedMissile }
         *     
         */
        public Checkall.EventObjectLaunchedMissile getEventObjectLaunchedMissile() {
            return eventObjectLaunchedMissile;
        }

        /**
         * Sets the value of the eventObjectLaunchedMissile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectLaunchedMissile }
         *     
         */
        public void setEventObjectLaunchedMissile(Checkall.EventObjectLaunchedMissile value) {
            this.eventObjectLaunchedMissile = value;
        }

        /**
         * Gets the value of the eventObjectShoppinglistTradeAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectShoppinglistTradeAdded }
         *     
         */
        public Checkall.EventObjectShoppinglistTradeAdded getEventObjectShoppinglistTradeAdded() {
            return eventObjectShoppinglistTradeAdded;
        }

        /**
         * Sets the value of the eventObjectShoppinglistTradeAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectShoppinglistTradeAdded }
         *     
         */
        public void setEventObjectShoppinglistTradeAdded(Checkall.EventObjectShoppinglistTradeAdded value) {
            this.eventObjectShoppinglistTradeAdded = value;
        }

        /**
         * Gets the value of the eventObjectShoppinglistTradeRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectShoppinglistTradeRemoved }
         *     
         */
        public Checkall.EventObjectShoppinglistTradeRemoved getEventObjectShoppinglistTradeRemoved() {
            return eventObjectShoppinglistTradeRemoved;
        }

        /**
         * Sets the value of the eventObjectShoppinglistTradeRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectShoppinglistTradeRemoved }
         *     
         */
        public void setEventObjectShoppinglistTradeRemoved(Checkall.EventObjectShoppinglistTradeRemoved value) {
            this.eventObjectShoppinglistTradeRemoved = value;
        }

        /**
         * Gets the value of the eventObjectSignalled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectSignalled }
         *     
         */
        public Checkall.EventObjectSignalled getEventObjectSignalled() {
            return eventObjectSignalled;
        }

        /**
         * Sets the value of the eventObjectSignalled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectSignalled }
         *     
         */
        public void setEventObjectSignalled(Checkall.EventObjectSignalled value) {
            this.eventObjectSignalled = value;
        }

        /**
         * Gets the value of the eventObjectStartedRemoteControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectStartedRemoteControl }
         *     
         */
        public Checkall.EventObjectStartedRemoteControl getEventObjectStartedRemoteControl() {
            return eventObjectStartedRemoteControl;
        }

        /**
         * Sets the value of the eventObjectStartedRemoteControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectStartedRemoteControl }
         *     
         */
        public void setEventObjectStartedRemoteControl(Checkall.EventObjectStartedRemoteControl value) {
            this.eventObjectStartedRemoteControl = value;
        }

        /**
         * Gets the value of the eventObjectStoppedRemoteControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectStoppedRemoteControl }
         *     
         */
        public Checkall.EventObjectStoppedRemoteControl getEventObjectStoppedRemoteControl() {
            return eventObjectStoppedRemoteControl;
        }

        /**
         * Sets the value of the eventObjectStoppedRemoteControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectStoppedRemoteControl }
         *     
         */
        public void setEventObjectStoppedRemoteControl(Checkall.EventObjectStoppedRemoteControl value) {
            this.eventObjectStoppedRemoteControl = value;
        }

        /**
         * Gets the value of the eventObjectSubordinateAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectSubordinateAdded }
         *     
         */
        public Checkall.EventObjectSubordinateAdded getEventObjectSubordinateAdded() {
            return eventObjectSubordinateAdded;
        }

        /**
         * Sets the value of the eventObjectSubordinateAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectSubordinateAdded }
         *     
         */
        public void setEventObjectSubordinateAdded(Checkall.EventObjectSubordinateAdded value) {
            this.eventObjectSubordinateAdded = value;
        }

        /**
         * Gets the value of the eventObjectSubordinateRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectSubordinateRemoved }
         *     
         */
        public Checkall.EventObjectSubordinateRemoved getEventObjectSubordinateRemoved() {
            return eventObjectSubordinateRemoved;
        }

        /**
         * Sets the value of the eventObjectSubordinateRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectSubordinateRemoved }
         *     
         */
        public void setEventObjectSubordinateRemoved(Checkall.EventObjectSubordinateRemoved value) {
            this.eventObjectSubordinateRemoved = value;
        }

        /**
         * Gets the value of the eventObjectTagged property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectTagged }
         *     
         */
        public Checkall.EventObjectTagged getEventObjectTagged() {
            return eventObjectTagged;
        }

        /**
         * Sets the value of the eventObjectTagged property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectTagged }
         *     
         */
        public void setEventObjectTagged(Checkall.EventObjectTagged value) {
            this.eventObjectTagged = value;
        }

        /**
         * Gets the value of the eventObjectTargetInvalid property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectTargetInvalid }
         *     
         */
        public Checkall.EventObjectTargetInvalid getEventObjectTargetInvalid() {
            return eventObjectTargetInvalid;
        }

        /**
         * Sets the value of the eventObjectTargetInvalid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectTargetInvalid }
         *     
         */
        public void setEventObjectTargetInvalid(Checkall.EventObjectTargetInvalid value) {
            this.eventObjectTargetInvalid = value;
        }

        /**
         * Gets the value of the eventObjectUndocked property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventObjectUndocked }
         *     
         */
        public Checkall.EventObjectUndocked getEventObjectUndocked() {
            return eventObjectUndocked;
        }

        /**
         * Sets the value of the eventObjectUndocked property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventObjectUndocked }
         *     
         */
        public void setEventObjectUndocked(Checkall.EventObjectUndocked value) {
            this.eventObjectUndocked = value;
        }

        /**
         * Gets the value of the eventPlayerAttackedObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerAttackedObject }
         *     
         */
        public Checkall.EventPlayerAttackedObject getEventPlayerAttackedObject() {
            return eventPlayerAttackedObject;
        }

        /**
         * Sets the value of the eventPlayerAttackedObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerAttackedObject }
         *     
         */
        public void setEventPlayerAttackedObject(Checkall.EventPlayerAttackedObject value) {
            this.eventPlayerAttackedObject = value;
        }

        /**
         * Gets the value of the eventPlayerBoostChargingAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBoostChargingAborted }
         *     
         */
        public Checkall.EventPlayerBoostChargingAborted getEventPlayerBoostChargingAborted() {
            return eventPlayerBoostChargingAborted;
        }

        /**
         * Sets the value of the eventPlayerBoostChargingAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBoostChargingAborted }
         *     
         */
        public void setEventPlayerBoostChargingAborted(Checkall.EventPlayerBoostChargingAborted value) {
            this.eventPlayerBoostChargingAborted = value;
        }

        /**
         * Gets the value of the eventPlayerBoostChargingStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBoostChargingStarted }
         *     
         */
        public Checkall.EventPlayerBoostChargingStarted getEventPlayerBoostChargingStarted() {
            return eventPlayerBoostChargingStarted;
        }

        /**
         * Sets the value of the eventPlayerBoostChargingStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBoostChargingStarted }
         *     
         */
        public void setEventPlayerBoostChargingStarted(Checkall.EventPlayerBoostChargingStarted value) {
            this.eventPlayerBoostChargingStarted = value;
        }

        /**
         * Gets the value of the eventPlayerBoostStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBoostStarted }
         *     
         */
        public Checkall.EventPlayerBoostStarted getEventPlayerBoostStarted() {
            return eventPlayerBoostStarted;
        }

        /**
         * Sets the value of the eventPlayerBoostStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBoostStarted }
         *     
         */
        public void setEventPlayerBoostStarted(Checkall.EventPlayerBoostStarted value) {
            this.eventPlayerBoostStarted = value;
        }

        /**
         * Gets the value of the eventPlayerBoostStopped property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBoostStopped }
         *     
         */
        public Checkall.EventPlayerBoostStopped getEventPlayerBoostStopped() {
            return eventPlayerBoostStopped;
        }

        /**
         * Sets the value of the eventPlayerBoostStopped property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBoostStopped }
         *     
         */
        public void setEventPlayerBoostStopped(Checkall.EventPlayerBoostStopped value) {
            this.eventPlayerBoostStopped = value;
        }

        /**
         * Gets the value of the eventPlayerBuildStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBuildStarted }
         *     
         */
        public Checkall.EventPlayerBuildStarted getEventPlayerBuildStarted() {
            return eventPlayerBuildStarted;
        }

        /**
         * Sets the value of the eventPlayerBuildStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBuildStarted }
         *     
         */
        public void setEventPlayerBuildStarted(Checkall.EventPlayerBuildStarted value) {
            this.eventPlayerBuildStarted = value;
        }

        /**
         * Gets the value of the eventPlayerBuildFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerBuildFinished }
         *     
         */
        public Checkall.EventPlayerBuildFinished getEventPlayerBuildFinished() {
            return eventPlayerBuildFinished;
        }

        /**
         * Sets the value of the eventPlayerBuildFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerBuildFinished }
         *     
         */
        public void setEventPlayerBuildFinished(Checkall.EventPlayerBuildFinished value) {
            this.eventPlayerBuildFinished = value;
        }

        /**
         * Gets the value of the eventPlayerChangedTarget property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerChangedTarget }
         *     
         */
        public Checkall.EventPlayerChangedTarget getEventPlayerChangedTarget() {
            return eventPlayerChangedTarget;
        }

        /**
         * Sets the value of the eventPlayerChangedTarget property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerChangedTarget }
         *     
         */
        public void setEventPlayerChangedTarget(Checkall.EventPlayerChangedTarget value) {
            this.eventPlayerChangedTarget = value;
        }

        /**
         * Gets the value of the eventPlayerInteraction property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerInteraction }
         *     
         */
        public Checkall.EventPlayerInteraction getEventPlayerInteraction() {
            return eventPlayerInteraction;
        }

        /**
         * Sets the value of the eventPlayerInteraction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerInteraction }
         *     
         */
        public void setEventPlayerInteraction(Checkall.EventPlayerInteraction value) {
            this.eventPlayerInteraction = value;
        }

        /**
         * Gets the value of the eventPlayerOwnedClaimedObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOwnedClaimedObject }
         *     
         */
        public Checkall.EventPlayerOwnedClaimedObject getEventPlayerOwnedClaimedObject() {
            return eventPlayerOwnedClaimedObject;
        }

        /**
         * Sets the value of the eventPlayerOwnedClaimedObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOwnedClaimedObject }
         *     
         */
        public void setEventPlayerOwnedClaimedObject(Checkall.EventPlayerOwnedClaimedObject value) {
            this.eventPlayerOwnedClaimedObject = value;
        }

        /**
         * Gets the value of the eventPlayerCollectedAmmo property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerCollectedAmmo }
         *     
         */
        public Checkall.EventPlayerCollectedAmmo getEventPlayerCollectedAmmo() {
            return eventPlayerCollectedAmmo;
        }

        /**
         * Sets the value of the eventPlayerCollectedAmmo property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerCollectedAmmo }
         *     
         */
        public void setEventPlayerCollectedAmmo(Checkall.EventPlayerCollectedAmmo value) {
            this.eventPlayerCollectedAmmo = value;
        }

        /**
         * Gets the value of the eventPlayerCollectedPowerup property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerCollectedPowerup }
         *     
         */
        public Checkall.EventPlayerCollectedPowerup getEventPlayerCollectedPowerup() {
            return eventPlayerCollectedPowerup;
        }

        /**
         * Sets the value of the eventPlayerCollectedPowerup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerCollectedPowerup }
         *     
         */
        public void setEventPlayerCollectedPowerup(Checkall.EventPlayerCollectedPowerup value) {
            this.eventPlayerCollectedPowerup = value;
        }

        /**
         * Gets the value of the eventPlayerCollectedWare property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerCollectedWare }
         *     
         */
        public Checkall.EventPlayerCollectedWare getEventPlayerCollectedWare() {
            return eventPlayerCollectedWare;
        }

        /**
         * Sets the value of the eventPlayerCollectedWare property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerCollectedWare }
         *     
         */
        public void setEventPlayerCollectedWare(Checkall.EventPlayerCollectedWare value) {
            this.eventPlayerCollectedWare = value;
        }

        /**
         * Gets the value of the eventPlayerCommissionAdded property.
         * 
         * @return
         *     possible object is
         *     {@link EventPlayerpricemodifier }
         *     
         */
        public EventPlayerpricemodifier getEventPlayerCommissionAdded() {
            return eventPlayerCommissionAdded;
        }

        /**
         * Sets the value of the eventPlayerCommissionAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link EventPlayerpricemodifier }
         *     
         */
        public void setEventPlayerCommissionAdded(EventPlayerpricemodifier value) {
            this.eventPlayerCommissionAdded = value;
        }

        /**
         * Gets the value of the eventPlayerDiscountAdded property.
         * 
         * @return
         *     possible object is
         *     {@link EventPlayerpricemodifier }
         *     
         */
        public EventPlayerpricemodifier getEventPlayerDiscountAdded() {
            return eventPlayerDiscountAdded;
        }

        /**
         * Sets the value of the eventPlayerDiscountAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link EventPlayerpricemodifier }
         *     
         */
        public void setEventPlayerDiscountAdded(EventPlayerpricemodifier value) {
            this.eventPlayerDiscountAdded = value;
        }

        /**
         * Gets the value of the eventPlayerCycledWeapons property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerCycledWeapons }
         *     
         */
        public Checkall.EventPlayerCycledWeapons getEventPlayerCycledWeapons() {
            return eventPlayerCycledWeapons;
        }

        /**
         * Sets the value of the eventPlayerCycledWeapons property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerCycledWeapons }
         *     
         */
        public void setEventPlayerCycledWeapons(Checkall.EventPlayerCycledWeapons value) {
            this.eventPlayerCycledWeapons = value;
        }

        /**
         * Gets the value of the eventPlayerCreated property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerCreated }
         *     
         */
        public Checkall.EventPlayerCreated getEventPlayerCreated() {
            return eventPlayerCreated;
        }

        /**
         * Sets the value of the eventPlayerCreated property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerCreated }
         *     
         */
        public void setEventPlayerCreated(Checkall.EventPlayerCreated value) {
            this.eventPlayerCreated = value;
        }

        /**
         * Gets the value of the eventPlayerDiscoveredObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerDiscoveredObject }
         *     
         */
        public Checkall.EventPlayerDiscoveredObject getEventPlayerDiscoveredObject() {
            return eventPlayerDiscoveredObject;
        }

        /**
         * Sets the value of the eventPlayerDiscoveredObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerDiscoveredObject }
         *     
         */
        public void setEventPlayerDiscoveredObject(Checkall.EventPlayerDiscoveredObject value) {
            this.eventPlayerDiscoveredObject = value;
        }

        /**
         * Gets the value of the eventPlayerDiscoveredMissionOffer property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerDiscoveredMissionOffer }
         *     
         */
        public Checkall.EventPlayerDiscoveredMissionOffer getEventPlayerDiscoveredMissionOffer() {
            return eventPlayerDiscoveredMissionOffer;
        }

        /**
         * Sets the value of the eventPlayerDiscoveredMissionOffer property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerDiscoveredMissionOffer }
         *     
         */
        public void setEventPlayerDiscoveredMissionOffer(Checkall.EventPlayerDiscoveredMissionOffer value) {
            this.eventPlayerDiscoveredMissionOffer = value;
        }

        /**
         * Gets the value of the eventPlayerDiscoveredPlatform property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerDiscoveredPlatform }
         *     
         */
        public Checkall.EventPlayerDiscoveredPlatform getEventPlayerDiscoveredPlatform() {
            return eventPlayerDiscoveredPlatform;
        }

        /**
         * Sets the value of the eventPlayerDiscoveredPlatform property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerDiscoveredPlatform }
         *     
         */
        public void setEventPlayerDiscoveredPlatform(Checkall.EventPlayerDiscoveredPlatform value) {
            this.eventPlayerDiscoveredPlatform = value;
        }

        /**
         * Gets the value of the eventPlayerIncomingMissile property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerIncomingMissile }
         *     
         */
        public Checkall.EventPlayerIncomingMissile getEventPlayerIncomingMissile() {
            return eventPlayerIncomingMissile;
        }

        /**
         * Sets the value of the eventPlayerIncomingMissile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerIncomingMissile }
         *     
         */
        public void setEventPlayerIncomingMissile(Checkall.EventPlayerIncomingMissile value) {
            this.eventPlayerIncomingMissile = value;
        }

        /**
         * Gets the value of the eventPlayerFollowerCannotJump property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerFollowerCannotJump }
         *     
         */
        public Checkall.EventPlayerFollowerCannotJump getEventPlayerFollowerCannotJump() {
            return eventPlayerFollowerCannotJump;
        }

        /**
         * Sets the value of the eventPlayerFollowerCannotJump property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerFollowerCannotJump }
         *     
         */
        public void setEventPlayerFollowerCannotJump(Checkall.EventPlayerFollowerCannotJump value) {
            this.eventPlayerFollowerCannotJump = value;
        }

        /**
         * Gets the value of the eventPlayerKilledObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerKilledObject }
         *     
         */
        public Checkall.EventPlayerKilledObject getEventPlayerKilledObject() {
            return eventPlayerKilledObject;
        }

        /**
         * Sets the value of the eventPlayerKilledObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerKilledObject }
         *     
         */
        public void setEventPlayerKilledObject(Checkall.EventPlayerKilledObject value) {
            this.eventPlayerKilledObject = value;
        }

        /**
         * Gets the value of the eventPlayerLaunchedMissile property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerLaunchedMissile }
         *     
         */
        public Checkall.EventPlayerLaunchedMissile getEventPlayerLaunchedMissile() {
            return eventPlayerLaunchedMissile;
        }

        /**
         * Sets the value of the eventPlayerLaunchedMissile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerLaunchedMissile }
         *     
         */
        public void setEventPlayerLaunchedMissile(Checkall.EventPlayerLaunchedMissile value) {
            this.eventPlayerLaunchedMissile = value;
        }

        /**
         * Gets the value of the eventPlayerLicenceAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerLicenceAdded }
         *     
         */
        public Checkall.EventPlayerLicenceAdded getEventPlayerLicenceAdded() {
            return eventPlayerLicenceAdded;
        }

        /**
         * Sets the value of the eventPlayerLicenceAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerLicenceAdded }
         *     
         */
        public void setEventPlayerLicenceAdded(Checkall.EventPlayerLicenceAdded value) {
            this.eventPlayerLicenceAdded = value;
        }

        /**
         * Gets the value of the eventPlayerLicenceLost property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerLicenceLost }
         *     
         */
        public Checkall.EventPlayerLicenceLost getEventPlayerLicenceLost() {
            return eventPlayerLicenceLost;
        }

        /**
         * Sets the value of the eventPlayerLicenceLost property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerLicenceLost }
         *     
         */
        public void setEventPlayerLicenceLost(Checkall.EventPlayerLicenceLost value) {
            this.eventPlayerLicenceLost = value;
        }

        /**
         * Gets the value of the eventPlayerMissionOpportunity property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerMissionOpportunity }
         *     
         */
        public Checkall.EventPlayerMissionOpportunity getEventPlayerMissionOpportunity() {
            return eventPlayerMissionOpportunity;
        }

        /**
         * Sets the value of the eventPlayerMissionOpportunity property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerMissionOpportunity }
         *     
         */
        public void setEventPlayerMissionOpportunity(Checkall.EventPlayerMissionOpportunity value) {
            this.eventPlayerMissionOpportunity = value;
        }

        /**
         * Gets the value of the eventPlayerInformationUnlocked property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerInformationUnlocked }
         *     
         */
        public Checkall.EventPlayerInformationUnlocked getEventPlayerInformationUnlocked() {
            return eventPlayerInformationUnlocked;
        }

        /**
         * Sets the value of the eventPlayerInformationUnlocked property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerInformationUnlocked }
         *     
         */
        public void setEventPlayerInformationUnlocked(Checkall.EventPlayerInformationUnlocked value) {
            this.eventPlayerInformationUnlocked = value;
        }

        /**
         * Gets the value of the eventPlayerMoneyUpdated property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerMoneyUpdated }
         *     
         */
        public Checkall.EventPlayerMoneyUpdated getEventPlayerMoneyUpdated() {
            return eventPlayerMoneyUpdated;
        }

        /**
         * Sets the value of the eventPlayerMoneyUpdated property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerMoneyUpdated }
         *     
         */
        public void setEventPlayerMoneyUpdated(Checkall.EventPlayerMoneyUpdated value) {
            this.eventPlayerMoneyUpdated = value;
        }

        /**
         * Gets the value of the eventPlayerOwnedCollectedResource property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOwnedCollectedResource }
         *     
         */
        public Checkall.EventPlayerOwnedCollectedResource getEventPlayerOwnedCollectedResource() {
            return eventPlayerOwnedCollectedResource;
        }

        /**
         * Sets the value of the eventPlayerOwnedCollectedResource property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOwnedCollectedResource }
         *     
         */
        public void setEventPlayerOwnedCollectedResource(Checkall.EventPlayerOwnedCollectedResource value) {
            this.eventPlayerOwnedCollectedResource = value;
        }

        /**
         * Gets the value of the eventPlayerOwnedDestroyed property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOwnedDestroyed }
         *     
         */
        public Checkall.EventPlayerOwnedDestroyed getEventPlayerOwnedDestroyed() {
            return eventPlayerOwnedDestroyed;
        }

        /**
         * Sets the value of the eventPlayerOwnedDestroyed property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOwnedDestroyed }
         *     
         */
        public void setEventPlayerOwnedDestroyed(Checkall.EventPlayerOwnedDestroyed value) {
            this.eventPlayerOwnedDestroyed = value;
        }

        /**
         * Gets the value of the eventPlayerOwnedKilledObject property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOwnedKilledObject }
         *     
         */
        public Checkall.EventPlayerOwnedKilledObject getEventPlayerOwnedKilledObject() {
            return eventPlayerOwnedKilledObject;
        }

        /**
         * Sets the value of the eventPlayerOwnedKilledObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOwnedKilledObject }
         *     
         */
        public void setEventPlayerOwnedKilledObject(Checkall.EventPlayerOwnedKilledObject value) {
            this.eventPlayerOwnedKilledObject = value;
        }

        /**
         * Gets the value of the eventPlayerOpenedCrate property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOpenedCrate }
         *     
         */
        public Checkall.EventPlayerOpenedCrate getEventPlayerOpenedCrate() {
            return eventPlayerOpenedCrate;
        }

        /**
         * Sets the value of the eventPlayerOpenedCrate property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOpenedCrate }
         *     
         */
        public void setEventPlayerOpenedCrate(Checkall.EventPlayerOpenedCrate value) {
            this.eventPlayerOpenedCrate = value;
        }

        /**
         * Gets the value of the eventPlayerOutOfAmmo property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerOutOfAmmo }
         *     
         */
        public Checkall.EventPlayerOutOfAmmo getEventPlayerOutOfAmmo() {
            return eventPlayerOutOfAmmo;
        }

        /**
         * Sets the value of the eventPlayerOutOfAmmo property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerOutOfAmmo }
         *     
         */
        public void setEventPlayerOutOfAmmo(Checkall.EventPlayerOutOfAmmo value) {
            this.eventPlayerOutOfAmmo = value;
        }

        /**
         * Gets the value of the eventPlayerPerformedBuildAction property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerPerformedBuildAction }
         *     
         */
        public Checkall.EventPlayerPerformedBuildAction getEventPlayerPerformedBuildAction() {
            return eventPlayerPerformedBuildAction;
        }

        /**
         * Sets the value of the eventPlayerPerformedBuildAction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerPerformedBuildAction }
         *     
         */
        public void setEventPlayerPerformedBuildAction(Checkall.EventPlayerPerformedBuildAction value) {
            this.eventPlayerPerformedBuildAction = value;
        }

        /**
         * Gets the value of the eventPlayerPerformedInfoAction property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerPerformedInfoAction }
         *     
         */
        public Checkall.EventPlayerPerformedInfoAction getEventPlayerPerformedInfoAction() {
            return eventPlayerPerformedInfoAction;
        }

        /**
         * Sets the value of the eventPlayerPerformedInfoAction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerPerformedInfoAction }
         *     
         */
        public void setEventPlayerPerformedInfoAction(Checkall.EventPlayerPerformedInfoAction value) {
            this.eventPlayerPerformedInfoAction = value;
        }

        /**
         * Gets the value of the eventPlayerPerformedTradeAction property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerPerformedTradeAction }
         *     
         */
        public Checkall.EventPlayerPerformedTradeAction getEventPlayerPerformedTradeAction() {
            return eventPlayerPerformedTradeAction;
        }

        /**
         * Sets the value of the eventPlayerPerformedTradeAction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerPerformedTradeAction }
         *     
         */
        public void setEventPlayerPerformedTradeAction(Checkall.EventPlayerPerformedTradeAction value) {
            this.eventPlayerPerformedTradeAction = value;
        }

        /**
         * Gets the value of the eventPlayerRelationChanged property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerRelationChanged }
         *     
         */
        public Checkall.EventPlayerRelationChanged getEventPlayerRelationChanged() {
            return eventPlayerRelationChanged;
        }

        /**
         * Sets the value of the eventPlayerRelationChanged property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerRelationChanged }
         *     
         */
        public void setEventPlayerRelationChanged(Checkall.EventPlayerRelationChanged value) {
            this.eventPlayerRelationChanged = value;
        }

        /**
         * Gets the value of the eventPlayerStartedRemoteControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerStartedRemoteControl }
         *     
         */
        public Checkall.EventPlayerStartedRemoteControl getEventPlayerStartedRemoteControl() {
            return eventPlayerStartedRemoteControl;
        }

        /**
         * Sets the value of the eventPlayerStartedRemoteControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerStartedRemoteControl }
         *     
         */
        public void setEventPlayerStartedRemoteControl(Checkall.EventPlayerStartedRemoteControl value) {
            this.eventPlayerStartedRemoteControl = value;
        }

        /**
         * Gets the value of the eventPlayerStoppedRemoteControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerStoppedRemoteControl }
         *     
         */
        public Checkall.EventPlayerStoppedRemoteControl getEventPlayerStoppedRemoteControl() {
            return eventPlayerStoppedRemoteControl;
        }

        /**
         * Sets the value of the eventPlayerStoppedRemoteControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerStoppedRemoteControl }
         *     
         */
        public void setEventPlayerStoppedRemoteControl(Checkall.EventPlayerStoppedRemoteControl value) {
            this.eventPlayerStoppedRemoteControl = value;
        }

        /**
         * Gets the value of the eventPlayerStartedControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerStartedControl }
         *     
         */
        public Checkall.EventPlayerStartedControl getEventPlayerStartedControl() {
            return eventPlayerStartedControl;
        }

        /**
         * Sets the value of the eventPlayerStartedControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerStartedControl }
         *     
         */
        public void setEventPlayerStartedControl(Checkall.EventPlayerStartedControl value) {
            this.eventPlayerStartedControl = value;
        }

        /**
         * Gets the value of the eventPlayerStoppedControl property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerStoppedControl }
         *     
         */
        public Checkall.EventPlayerStoppedControl getEventPlayerStoppedControl() {
            return eventPlayerStoppedControl;
        }

        /**
         * Sets the value of the eventPlayerStoppedControl property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerStoppedControl }
         *     
         */
        public void setEventPlayerStoppedControl(Checkall.EventPlayerStoppedControl value) {
            this.eventPlayerStoppedControl = value;
        }

        /**
         * Gets the value of the eventPlayerSubordinateAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerSubordinateAdded }
         *     
         */
        public Checkall.EventPlayerSubordinateAdded getEventPlayerSubordinateAdded() {
            return eventPlayerSubordinateAdded;
        }

        /**
         * Sets the value of the eventPlayerSubordinateAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerSubordinateAdded }
         *     
         */
        public void setEventPlayerSubordinateAdded(Checkall.EventPlayerSubordinateAdded value) {
            this.eventPlayerSubordinateAdded = value;
        }

        /**
         * Gets the value of the eventPlayerSubordinateRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerSubordinateRemoved }
         *     
         */
        public Checkall.EventPlayerSubordinateRemoved getEventPlayerSubordinateRemoved() {
            return eventPlayerSubordinateRemoved;
        }

        /**
         * Sets the value of the eventPlayerSubordinateRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerSubordinateRemoved }
         *     
         */
        public void setEventPlayerSubordinateRemoved(Checkall.EventPlayerSubordinateRemoved value) {
            this.eventPlayerSubordinateRemoved = value;
        }

        /**
         * Gets the value of the eventPlayerTradeDiscovered property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerTradeDiscovered }
         *     
         */
        public Checkall.EventPlayerTradeDiscovered getEventPlayerTradeDiscovered() {
            return eventPlayerTradeDiscovered;
        }

        /**
         * Sets the value of the eventPlayerTradeDiscovered property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerTradeDiscovered }
         *     
         */
        public void setEventPlayerTradeDiscovered(Checkall.EventPlayerTradeDiscovered value) {
            this.eventPlayerTradeDiscovered = value;
        }

        /**
         * Gets the value of the eventPlayerTradeOrderCancelled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerTradeOrderCancelled }
         *     
         */
        public Checkall.EventPlayerTradeOrderCancelled getEventPlayerTradeOrderCancelled() {
            return eventPlayerTradeOrderCancelled;
        }

        /**
         * Sets the value of the eventPlayerTradeOrderCancelled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerTradeOrderCancelled }
         *     
         */
        public void setEventPlayerTradeOrderCancelled(Checkall.EventPlayerTradeOrderCancelled value) {
            this.eventPlayerTradeOrderCancelled = value;
        }

        /**
         * Gets the value of the eventPlayerTradeOrderCompleted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerTradeOrderCompleted }
         *     
         */
        public Checkall.EventPlayerTradeOrderCompleted getEventPlayerTradeOrderCompleted() {
            return eventPlayerTradeOrderCompleted;
        }

        /**
         * Sets the value of the eventPlayerTradeOrderCompleted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerTradeOrderCompleted }
         *     
         */
        public void setEventPlayerTradeOrderCompleted(Checkall.EventPlayerTradeOrderCompleted value) {
            this.eventPlayerTradeOrderCompleted = value;
        }

        /**
         * Gets the value of the eventPlayerTradeOrderStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerTradeOrderStarted }
         *     
         */
        public Checkall.EventPlayerTradeOrderStarted getEventPlayerTradeOrderStarted() {
            return eventPlayerTradeOrderStarted;
        }

        /**
         * Sets the value of the eventPlayerTradeOrderStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerTradeOrderStarted }
         *     
         */
        public void setEventPlayerTradeOrderStarted(Checkall.EventPlayerTradeOrderStarted value) {
            this.eventPlayerTradeOrderStarted = value;
        }

        /**
         * Gets the value of the eventPlayerShoppinglistTradeAdded property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerShoppinglistTradeAdded }
         *     
         */
        public Checkall.EventPlayerShoppinglistTradeAdded getEventPlayerShoppinglistTradeAdded() {
            return eventPlayerShoppinglistTradeAdded;
        }

        /**
         * Sets the value of the eventPlayerShoppinglistTradeAdded property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerShoppinglistTradeAdded }
         *     
         */
        public void setEventPlayerShoppinglistTradeAdded(Checkall.EventPlayerShoppinglistTradeAdded value) {
            this.eventPlayerShoppinglistTradeAdded = value;
        }

        /**
         * Gets the value of the eventPlayerShoppinglistTradeRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerShoppinglistTradeRemoved }
         *     
         */
        public Checkall.EventPlayerShoppinglistTradeRemoved getEventPlayerShoppinglistTradeRemoved() {
            return eventPlayerShoppinglistTradeRemoved;
        }

        /**
         * Sets the value of the eventPlayerShoppinglistTradeRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerShoppinglistTradeRemoved }
         *     
         */
        public void setEventPlayerShoppinglistTradeRemoved(Checkall.EventPlayerShoppinglistTradeRemoved value) {
            this.eventPlayerShoppinglistTradeRemoved = value;
        }

        /**
         * Gets the value of the eventScanAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventScanAborted }
         *     
         */
        public Checkall.EventScanAborted getEventScanAborted() {
            return eventScanAborted;
        }

        /**
         * Sets the value of the eventScanAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventScanAborted }
         *     
         */
        public void setEventScanAborted(Checkall.EventScanAborted value) {
            this.eventScanAborted = value;
        }

        /**
         * Gets the value of the eventScanFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventScanFinished }
         *     
         */
        public Checkall.EventScanFinished getEventScanFinished() {
            return eventScanFinished;
        }

        /**
         * Sets the value of the eventScanFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventScanFinished }
         *     
         */
        public void setEventScanFinished(Checkall.EventScanFinished value) {
            this.eventScanFinished = value;
        }

        /**
         * Gets the value of the eventScanStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventScanStarted }
         *     
         */
        public Checkall.EventScanStarted getEventScanStarted() {
            return eventScanStarted;
        }

        /**
         * Sets the value of the eventScanStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventScanStarted }
         *     
         */
        public void setEventScanStarted(Checkall.EventScanStarted value) {
            this.eventScanStarted = value;
        }

        /**
         * Gets the value of the eventHackAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventHackAborted }
         *     
         */
        public Checkall.EventHackAborted getEventHackAborted() {
            return eventHackAborted;
        }

        /**
         * Sets the value of the eventHackAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventHackAborted }
         *     
         */
        public void setEventHackAborted(Checkall.EventHackAborted value) {
            this.eventHackAborted = value;
        }

        /**
         * Gets the value of the eventHackFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventHackFinished }
         *     
         */
        public Checkall.EventHackFinished getEventHackFinished() {
            return eventHackFinished;
        }

        /**
         * Sets the value of the eventHackFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventHackFinished }
         *     
         */
        public void setEventHackFinished(Checkall.EventHackFinished value) {
            this.eventHackFinished = value;
        }

        /**
         * Gets the value of the eventHackStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventHackStarted }
         *     
         */
        public Checkall.EventHackStarted getEventHackStarted() {
            return eventHackStarted;
        }

        /**
         * Sets the value of the eventHackStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventHackStarted }
         *     
         */
        public void setEventHackStarted(Checkall.EventHackStarted value) {
            this.eventHackStarted = value;
        }

        /**
         * Gets the value of the eventSpeakFinished property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventSpeakFinished }
         *     
         */
        public Checkall.EventSpeakFinished getEventSpeakFinished() {
            return eventSpeakFinished;
        }

        /**
         * Sets the value of the eventSpeakFinished property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventSpeakFinished }
         *     
         */
        public void setEventSpeakFinished(Checkall.EventSpeakFinished value) {
            this.eventSpeakFinished = value;
        }

        /**
         * Gets the value of the eventTradeOrderCancelled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventTradeOrderCancelled }
         *     
         */
        public Checkall.EventTradeOrderCancelled getEventTradeOrderCancelled() {
            return eventTradeOrderCancelled;
        }

        /**
         * Sets the value of the eventTradeOrderCancelled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventTradeOrderCancelled }
         *     
         */
        public void setEventTradeOrderCancelled(Checkall.EventTradeOrderCancelled value) {
            this.eventTradeOrderCancelled = value;
        }

        /**
         * Gets the value of the eventTradeOrderCompleted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventTradeOrderCompleted }
         *     
         */
        public Checkall.EventTradeOrderCompleted getEventTradeOrderCompleted() {
            return eventTradeOrderCompleted;
        }

        /**
         * Sets the value of the eventTradeOrderCompleted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventTradeOrderCompleted }
         *     
         */
        public void setEventTradeOrderCompleted(Checkall.EventTradeOrderCompleted value) {
            this.eventTradeOrderCompleted = value;
        }

        /**
         * Gets the value of the eventTradeOrderStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventTradeOrderStarted }
         *     
         */
        public Checkall.EventTradeOrderStarted getEventTradeOrderStarted() {
            return eventTradeOrderStarted;
        }

        /**
         * Sets the value of the eventTradeOrderStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventTradeOrderStarted }
         *     
         */
        public void setEventTradeOrderStarted(Checkall.EventTradeOrderStarted value) {
            this.eventTradeOrderStarted = value;
        }

        /**
         * Gets the value of the eventDetachedFromMasstraffic property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventDetachedFromMasstraffic }
         *     
         */
        public Checkall.EventDetachedFromMasstraffic getEventDetachedFromMasstraffic() {
            return eventDetachedFromMasstraffic;
        }

        /**
         * Sets the value of the eventDetachedFromMasstraffic property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventDetachedFromMasstraffic }
         *     
         */
        public void setEventDetachedFromMasstraffic(Checkall.EventDetachedFromMasstraffic value) {
            this.eventDetachedFromMasstraffic = value;
        }

        /**
         * Gets the value of the eventMasstrafficNetworkRemoved property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventMasstrafficNetworkRemoved }
         *     
         */
        public Checkall.EventMasstrafficNetworkRemoved getEventMasstrafficNetworkRemoved() {
            return eventMasstrafficNetworkRemoved;
        }

        /**
         * Sets the value of the eventMasstrafficNetworkRemoved property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventMasstrafficNetworkRemoved }
         *     
         */
        public void setEventMasstrafficNetworkRemoved(Checkall.EventMasstrafficNetworkRemoved value) {
            this.eventMasstrafficNetworkRemoved = value;
        }

        /**
         * Gets the value of the eventWeaponFired property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventWeaponFired }
         *     
         */
        public Checkall.EventWeaponFired getEventWeaponFired() {
            return eventWeaponFired;
        }

        /**
         * Sets the value of the eventWeaponFired property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventWeaponFired }
         *     
         */
        public void setEventWeaponFired(Checkall.EventWeaponFired value) {
            this.eventWeaponFired = value;
        }

        /**
         * Gets the value of the eventBriefingStarted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBriefingStarted }
         *     
         */
        public Checkall.EventBriefingStarted getEventBriefingStarted() {
            return eventBriefingStarted;
        }

        /**
         * Sets the value of the eventBriefingStarted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBriefingStarted }
         *     
         */
        public void setEventBriefingStarted(Checkall.EventBriefingStarted value) {
            this.eventBriefingStarted = value;
        }

        /**
         * Gets the value of the eventBriefingCancelled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBriefingCancelled }
         *     
         */
        public Checkall.EventBriefingCancelled getEventBriefingCancelled() {
            return eventBriefingCancelled;
        }

        /**
         * Sets the value of the eventBriefingCancelled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBriefingCancelled }
         *     
         */
        public void setEventBriefingCancelled(Checkall.EventBriefingCancelled value) {
            this.eventBriefingCancelled = value;
        }

        /**
         * Gets the value of the eventCueActivated property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCueActivated }
         *     
         */
        public Checkall.EventCueActivated getEventCueActivated() {
            return eventCueActivated;
        }

        /**
         * Sets the value of the eventCueActivated property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCueActivated }
         *     
         */
        public void setEventCueActivated(Checkall.EventCueActivated value) {
            this.eventCueActivated = value;
        }

        /**
         * Gets the value of the eventCueCancelled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCueCancelled }
         *     
         */
        public Checkall.EventCueCancelled getEventCueCancelled() {
            return eventCueCancelled;
        }

        /**
         * Sets the value of the eventCueCancelled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCueCancelled }
         *     
         */
        public void setEventCueCancelled(Checkall.EventCueCancelled value) {
            this.eventCueCancelled = value;
        }

        /**
         * Gets the value of the eventCueCompleted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCueCompleted }
         *     
         */
        public Checkall.EventCueCompleted getEventCueCompleted() {
            return eventCueCompleted;
        }

        /**
         * Sets the value of the eventCueCompleted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCueCompleted }
         *     
         */
        public void setEventCueCompleted(Checkall.EventCueCompleted value) {
            this.eventCueCompleted = value;
        }

        /**
         * Gets the value of the eventCueSignalled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventCueSignalled }
         *     
         */
        public Checkall.EventCueSignalled getEventCueSignalled() {
            return eventCueSignalled;
        }

        /**
         * Sets the value of the eventCueSignalled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventCueSignalled }
         *     
         */
        public void setEventCueSignalled(Checkall.EventCueSignalled value) {
            this.eventCueSignalled = value;
        }

        /**
         * Gets the value of the eventGuidanceDisabled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventGuidanceDisabled }
         *     
         */
        public Checkall.EventGuidanceDisabled getEventGuidanceDisabled() {
            return eventGuidanceDisabled;
        }

        /**
         * Sets the value of the eventGuidanceDisabled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventGuidanceDisabled }
         *     
         */
        public void setEventGuidanceDisabled(Checkall.EventGuidanceDisabled value) {
            this.eventGuidanceDisabled = value;
        }

        /**
         * Gets the value of the eventGuidanceEnabled property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventGuidanceEnabled }
         *     
         */
        public Checkall.EventGuidanceEnabled getEventGuidanceEnabled() {
            return eventGuidanceEnabled;
        }

        /**
         * Sets the value of the eventGuidanceEnabled property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventGuidanceEnabled }
         *     
         */
        public void setEventGuidanceEnabled(Checkall.EventGuidanceEnabled value) {
            this.eventGuidanceEnabled = value;
        }

        /**
         * Gets the value of the eventMissionAborted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventMissionAborted }
         *     
         */
        public Checkall.EventMissionAborted getEventMissionAborted() {
            return eventMissionAborted;
        }

        /**
         * Sets the value of the eventMissionAborted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventMissionAborted }
         *     
         */
        public void setEventMissionAborted(Checkall.EventMissionAborted value) {
            this.eventMissionAborted = value;
        }

        /**
         * Gets the value of the eventOfferAccepted property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventOfferAccepted }
         *     
         */
        public Checkall.EventOfferAccepted getEventOfferAccepted() {
            return eventOfferAccepted;
        }

        /**
         * Sets the value of the eventOfferAccepted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventOfferAccepted }
         *     
         */
        public void setEventOfferAccepted(Checkall.EventOfferAccepted value) {
            this.eventOfferAccepted = value;
        }

        /**
         * Gets the value of the eventPlatformActorCreated property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlatformActorCreated }
         *     
         */
        public Checkall.EventPlatformActorCreated getEventPlatformActorCreated() {
            return eventPlatformActorCreated;
        }

        /**
         * Sets the value of the eventPlatformActorCreated property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlatformActorCreated }
         *     
         */
        public void setEventPlatformActorCreated(Checkall.EventPlatformActorCreated value) {
            this.eventPlatformActorCreated = value;
        }

        /**
         * Gets the value of the eventPlayerDroneScanTriggered property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerDroneScanTriggered }
         *     
         */
        public Checkall.EventPlayerDroneScanTriggered getEventPlayerDroneScanTriggered() {
            return eventPlayerDroneScanTriggered;
        }

        /**
         * Sets the value of the eventPlayerDroneScanTriggered property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerDroneScanTriggered }
         *     
         */
        public void setEventPlayerDroneScanTriggered(Checkall.EventPlayerDroneScanTriggered value) {
            this.eventPlayerDroneScanTriggered = value;
        }

        /**
         * Gets the value of the eventPlayerDroneHackTriggered property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventPlayerDroneHackTriggered }
         *     
         */
        public Checkall.EventPlayerDroneHackTriggered getEventPlayerDroneHackTriggered() {
            return eventPlayerDroneHackTriggered;
        }

        /**
         * Sets the value of the eventPlayerDroneHackTriggered property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventPlayerDroneHackTriggered }
         *     
         */
        public void setEventPlayerDroneHackTriggered(Checkall.EventPlayerDroneHackTriggered value) {
            this.eventPlayerDroneHackTriggered = value;
        }

        /**
         * Gets the value of the eventBoardingTriggered property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoardingTriggered }
         *     
         */
        public Checkall.EventBoardingTriggered getEventBoardingTriggered() {
            return eventBoardingTriggered;
        }

        /**
         * Sets the value of the eventBoardingTriggered property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoardingTriggered }
         *     
         */
        public void setEventBoardingTriggered(Checkall.EventBoardingTriggered value) {
            this.eventBoardingTriggered = value;
        }

        /**
         * Gets the value of the eventBoardingSupportRequested property.
         * 
         * @return
         *     possible object is
         *     {@link Checkall.EventBoardingSupportRequested }
         *     
         */
        public Checkall.EventBoardingSupportRequested getEventBoardingSupportRequested() {
            return eventBoardingSupportRequested;
        }

        /**
         * Sets the value of the eventBoardingSupportRequested property.
         * 
         * @param value
         *     allowed object is
         *     {@link Checkall.EventBoardingSupportRequested }
         *     
         */
        public void setEventBoardingSupportRequested(Checkall.EventBoardingSupportRequested value) {
            this.eventBoardingSupportRequested = value;
        }

        /**
         * Gets the value of the checkAllOrCheckAnyOrCheckValue property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the checkAllOrCheckAnyOrCheckValue property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCheckAllOrCheckAnyOrCheckValue().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Checkall }
         * {@link Checkany }
         * {@link Checkall.CheckValue }
         * {@link Checkall.CheckAge }
         * {@link Checkall.CheckObject }
         * {@link Checkall.CheckWeaponActive }
         * {@link Checkall.CheckWeaponInstalled }
         * {@link Checkall.CountClusters }
         * {@link Checkall.CountGravidarContacts }
         * {@link Checkall.CountObjectComponents }
         * {@link Checkall.CountObjects }
         * {@link Checkall.CountSectors }
         * {@link Checkall.CountShips }
         * {@link Checkall.CountStations }
         * {@link Checkall.CountZones }
         * {@link Checkall.DebugText }
         * {@link Checkall.MatchObject }
         * {@link Checkall.MatchAnyObject }
         * {@link Checkall.MatchAllObjects }
         * {@link Checkall.RemoveValue }
         * {@link Checkall.SetValue }
         * {@link Checkall.CueIsActive }
         * {@link Checkall.CueIsCancelled }
         * {@link Checkall.CueIsComplete }
         * {@link Checkall.CueIsDisabled }
         * {@link Checkall.CueIsWaiting }
         * {@link Checkall.GuidanceIsActive }
         * 
         * 
         */
        public List<Object> getCheckAllOrCheckAnyOrCheckValue() {
            if (checkAllOrCheckAnyOrCheckValue == null) {
                checkAllOrCheckAnyOrCheckValue = new ArrayList<Object>();
            }
            return this.checkAllOrCheckAnyOrCheckValue;
        }

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attGroup ref="{}random"/>
     *       &lt;attribute name="comment" type="{}comment" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Delay {

        @XmlAttribute(name = "comment")
        protected String comment;
        @XmlAttribute(name = "exact")
        protected String exact;
        @XmlAttribute(name = "list")
        protected String list;
        @XmlAttribute(name = "min")
        protected String min;
        @XmlAttribute(name = "max")
        protected String max;
        @XmlAttribute(name = "profile")
        protected Profilelookup profile;
        @XmlAttribute(name = "scale")
        protected BigInteger scale;

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

        /**
         * Gets the value of the exact property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getExact() {
            return exact;
        }

        /**
         * Sets the value of the exact property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setExact(String value) {
            this.exact = value;
        }

        /**
         * Gets the value of the list property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getList() {
            return list;
        }

        /**
         * Sets the value of the list property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setList(String value) {
            this.list = value;
        }

        /**
         * Gets the value of the min property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMin() {
            return min;
        }

        /**
         * Sets the value of the min property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setMin(String value) {
            this.min = value;
        }

        /**
         * Gets the value of the max property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMax() {
            return max;
        }

        /**
         * Sets the value of the max property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setMax(String value) {
            this.max = value;
        }

        /**
         * Gets the value of the profile property.
         * 
         * @return
         *     possible object is
         *     {@link Profilelookup }
         *     
         */
        public Profilelookup getProfile() {
            return profile;
        }

        /**
         * Sets the value of the profile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Profilelookup }
         *     
         */
        public void setProfile(Profilelookup value) {
            this.profile = value;
        }

        /**
         * Gets the value of the scale property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getScale() {
            return scale;
        }

        /**
         * Sets the value of the scale property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setScale(BigInteger value) {
            this.scale = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{}actions"/>
     *       &lt;attribute name="name" type="{}namestring" />
     *       &lt;attribute name="comment" type="{}comment" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "doAllOrDoAnyOrDoIf"
    })
    public static class Force {

        @XmlElements({
            @XmlElement(name = "do_all", type = Doall.class),
            @XmlElement(name = "do_any", type = Doany.class),
            @XmlElement(name = "do_if", type = Doif.class),
            @XmlElement(name = "do_elseif", type = Doelseif.class),
            @XmlElement(name = "do_else", type = Doelse.class),
            @XmlElement(name = "do_while", type = Dowhile.class),
            @XmlElement(name = "abort_hack", type = Dowhile.AbortHack.class),
            @XmlElement(name = "abort_scan", type = Dowhile.AbortScan.class),
            @XmlElement(name = "abort_scripts", type = Dowhile.AbortScripts.class),
            @XmlElement(name = "activate_battlestate", type = Dowhile.ActivateBattlestate.class),
            @XmlElement(name = "activate_flaks", type = Dowhile.ActivateFlaks.class),
            @XmlElement(name = "activate_weapon", type = Dowhile.ActivateWeapon.class),
            @XmlElement(name = "add_actor_to_platform", type = Dowhile.AddActorToPlatform.class),
            @XmlElement(name = "add_actor_to_playership", type = Dowhile.AddActorToPlayership.class),
            @XmlElement(name = "add_copilot", type = Dowhile.AddCopilot.class),
            @XmlElement(name = "create_build_plan", type = Dowhile.CreateBuildPlan.class),
            @XmlElement(name = "add_build_plan", type = Dowhile.AddBuildPlan.class),
            @XmlElement(name = "add_ammo", type = Dowhile.AddAmmo.class),
            @XmlElement(name = "remove_ammo", type = Dowhile.RemoveAmmo.class),
            @XmlElement(name = "deplete_ammo", type = Dowhile.DepleteAmmo.class),
            @XmlElement(name = "evaluate_ammo_storage", type = Dowhile.EvaluateAmmoStorage.class),
            @XmlElement(name = "add_cargo", type = Dowhile.AddCargo.class),
            @XmlElement(name = "remove_cargo", type = Dowhile.RemoveCargo.class),
            @XmlElement(name = "add_commission", type = Dowhile.AddCommission.class),
            @XmlElement(name = "add_player_commission", type = Dowhile.AddPlayerCommission.class),
            @XmlElement(name = "remove_commission", type = Dowhile.RemoveCommission.class),
            @XmlElement(name = "remove_player_commission", type = Dowhile.RemovePlayerCommission.class),
            @XmlElement(name = "add_default_production_wares", type = Dowhile.AddDefaultProductionWares.class),
            @XmlElement(name = "add_skill", type = Dowhile.AddSkill.class),
            @XmlElement(name = "add_tradeware", type = Dowhile.AddTradeware.class),
            @XmlElement(name = "remove_tradeware", type = Dowhile.RemoveTradeware.class),
            @XmlElement(name = "add_discount", type = Dowhile.AddDiscount.class),
            @XmlElement(name = "add_player_discount", type = Dowhile.AddPlayerDiscount.class),
            @XmlElement(name = "remove_discount", type = Dowhile.RemoveDiscount.class),
            @XmlElement(name = "remove_player_discount", type = Dowhile.RemovePlayerDiscount.class),
            @XmlElement(name = "add_production_salesreps", type = Dowhile.AddProductionSalesreps.class),
            @XmlElement(name = "add_watchdog_units_to_masstraffic", type = Dowhile.AddWatchdogUnitsToMasstraffic.class),
            @XmlElement(name = "get_next_bonus_unlocktime", type = Dowhile.GetNextBonusUnlocktime.class),
            @XmlElement(name = "get_production_specialist_types", type = Dowhile.GetProductionSpecialistTypes.class),
            @XmlElement(name = "set_next_bonus_unlocktime", type = Dowhile.SetNextBonusUnlocktime.class),
            @XmlElement(name = "add_buy_order", type = Dowhile.AddBuyOrder.class),
            @XmlElement(name = "add_sell_order", type = Dowhile.AddSellOrder.class),
            @XmlElement(name = "remove_trade_order", type = Dowhile.RemoveTradeOrder.class),
            @XmlElement(name = "get_trade_from_shoppinglist", type = Dowhile.GetTradeFromShoppinglist.class),
            @XmlElement(name = "get_tradeoffer_locations", type = Dowhile.GetTradeofferLocations.class),
            @XmlElement(name = "add_conversation_view", type = Dowhile.AddConversationView.class),
            @XmlElement(name = "add_faction_relation", type = Dowhile.AddFactionRelation.class),
            @XmlElement(name = "get_factions_by_relation", type = Dowhile.GetFactionsByRelation.class),
            @XmlElement(name = "set_faction_known", type = Dowhile.SetFactionKnown.class),
            @XmlElement(name = "set_known", type = Dowhile.SetKnown.class),
            @XmlElement(name = "add_inventory", type = Dowhile.AddInventory.class),
            @XmlElement(name = "remove_inventory", type = Dowhile.RemoveInventory.class),
            @XmlElement(name = "add_licence", type = Dowhile.AddLicence.class),
            @XmlElement(name = "remove_licence", type = Dowhile.RemoveLicence.class),
            @XmlElement(name = "add_npc_line", type = Dowhile.AddNpcLine.class),
            @XmlElement(name = "add_player_choice", type = Dowhile.AddPlayerChoice.class),
            @XmlElement(name = "add_player_choice_sub", type = Dowhile.AddPlayerChoiceSub.class),
            @XmlElement(name = "add_player_choice_subconv", type = Dowhile.AddPlayerChoiceSubconv.class),
            @XmlElement(name = "add_player_choice_return", type = Dowhile.AddPlayerChoiceReturn.class),
            @XmlElement(name = "set_conversation_return_section", type = Dowhile.SetConversationReturnSection.class),
            @XmlElement(name = "add_relation_boost", type = Dowhile.AddRelationBoost.class),
            @XmlElement(name = "add_to_group", type = Dowhile.AddToGroup.class),
            @XmlElement(name = "add_to_player_squad", type = Dowhile.AddToPlayerSquad.class),
            @XmlElement(name = "add_tolerance_boost", type = Dowhile.AddToleranceBoost.class),
            @XmlElement(name = "aim_turret", type = Dowhile.AimTurret.class),
            @XmlElement(name = "add_units", type = Dowhile.AddUnits.class),
            @XmlElement(name = "remove_units", type = Dowhile.RemoveUnits.class),
            @XmlElement(name = "request_units", type = Dowhile.RequestUnits.class),
            @XmlElement(name = "return_units", type = Dowhile.ReturnUnits.class),
            @XmlElement(name = "allow_conversation_escape", type = Dowhile.AllowConversationEscape.class),
            @XmlElement(name = "append_to_list", type = Dowhile.AppendToList.class),
            @XmlElement(name = "apply_attackstrength", type = Dowhile.ApplyAttackstrength.class),
            @XmlElement(name = "assert", type = Dowhile.Assert.class),
            @XmlElement(name = "assign_pilot", type = Dowhile.AssignPilot.class),
            @XmlElement(name = "assign_architect", type = Dowhile.AssignArchitect.class),
            @XmlElement(name = "assign_boarding_commander", type = Dowhile.AssignBoardingCommander.class),
            @XmlElement(name = "assign_defence_manager", type = Dowhile.AssignDefenceManager.class),
            @XmlElement(name = "assign_engineer", type = Dowhile.AssignEngineer.class),
            @XmlElement(name = "assign_trade_manager", type = Dowhile.AssignTradeManager.class),
            @XmlElement(name = "assign_control_entity", type = Dowhile.AssignControlEntity.class),
            @XmlElement(name = "dismiss_control_entity", type = Dowhile.DismissControlEntity.class),
            @XmlElement(name = "get_control_entities", type = Dowhile.GetControlEntities.class),
            @XmlElement(name = "attach_object_to_target", type = Dowhile.AttachObjectToTarget.class),
            @XmlElement(name = "break", type = Dowhile.Break.class),
            @XmlElement(name = "break_formation", type = Dowhile.BreakFormation.class),
            @XmlElement(name = "cease_fire", type = Dowhile.CeaseFire.class),
            @XmlElement(name = "change_relation_on_attack", type = Dowhile.ChangeRelationOnAttack.class),
            @XmlElement(name = "change_relation_on_kill", type = Dowhile.ChangeRelationOnKill.class),
            @XmlElement(name = "check_line_of_sight", type = Dowhile.CheckLineOfSight.class),
            @XmlElement(name = "check_is_in_security_area", type = Dowhile.CheckIsInSecurityArea.class),
            @XmlElement(name = "check_is_area_obstructed", type = Dowhile.CheckIsAreaObstructed.class),
            @XmlElement(name = "start_observation", type = Dowhile.StartObservation.class),
            @XmlElement(name = "stop_observation", type = Dowhile.StopObservation.class),
            @XmlElement(name = "start_attack", type = Dowhile.StartAttack.class),
            @XmlElement(name = "stop_attack", type = Dowhile.StopAttack.class),
            @XmlElement(name = "report_illegal_activity", type = Dowhile.ReportIllegalActivity.class),
            @XmlElement(name = "claim_ship", type = Dowhile.ClaimShip.class),
            @XmlElement(name = "clear_collision_filter", type = Dowhile.ClearCollisionFilter.class),
            @XmlElement(name = "clear_group", type = Dowhile.ClearGroup.class),
            @XmlElement(name = "clear_list", type = Dowhile.ClearList.class),
            @XmlElement(name = "close_dockingbay_doors", type = Dowhile.CloseDockingbayDoors.class),
            @XmlElement(name = "get_building_position", type = Dowhile.GetBuildingPosition.class),
            @XmlElement(name = "connect_to_build_location", type = Dowhile.ConnectToBuildLocation.class),
            @XmlElement(name = "connect_to_trade_location", type = Dowhile.ConnectToTradeLocation.class),
            @XmlElement(name = "disconnect_from_trade_location", type = Dowhile.DisconnectFromTradeLocation.class),
            @XmlElement(name = "construct_ship", type = Dowhile.ConstructShip.class),
            @XmlElement(name = "construct_station", type = Dowhile.ConstructStation.class),
            @XmlElement(name = "set_buildmodule_macro", type = Dowhile.SetBuildmoduleMacro.class),
            @XmlElement(name = "clear_buildmodule", type = Dowhile.ClearBuildmodule.class),
            @XmlElement(name = "continue", type = Dowhile.Continue.class),
            @XmlElement(name = "create_ai_unit", type = Dowhile.CreateAiUnit.class),
            @XmlElement(name = "create_group", type = Dowhile.CreateGroup.class),
            @XmlElement(name = "create_list", type = Dowhile.CreateList.class),
            @XmlElement(name = "create_formation", type = Dowhile.CreateFormation.class),
            @XmlElement(name = "create_object", type = Dowhile.CreateObject.class),
            @XmlElement(name = "create_orientation", type = Dowhile.CreateOrientation.class),
            @XmlElement(name = "create_random_position_in_boundingbox", type = Dowhile.CreateRandomPositionInBoundingbox.class),
            @XmlElement(name = "create_random_position_outside_boundingbox", type = Dowhile.CreateRandomPositionOutsideBoundingbox.class),
            @XmlElement(name = "create_trade_offer", type = Dowhile.CreateTradeOffer.class),
            @XmlElement(name = "add_trade_offer", type = Dowhile.AddTradeOffer.class),
            @XmlElement(name = "remove_trade_offer", type = Dowhile.RemoveTradeOffer.class),
            @XmlElement(name = "create_position_outside_boundingbox", type = Dowhile.CreatePositionOutsideBoundingbox.class),
            @XmlElement(name = "find_object_surface", type = Dowhile.FindObjectSurface.class),
            @XmlElement(name = "create_position", type = Dowhile.CreatePosition.class),
            @XmlElement(name = "transform_position", type = Dowhile.TransformPosition.class),
            @XmlElement(name = "create_rotation", type = Dowhile.CreateRotation.class),
            @XmlElement(name = "create_ship", type = Dowhile.CreateShip.class),
            @XmlElement(name = "create_station", type = Dowhile.CreateStation.class),
            @XmlElement(name = "create_defence_officer", type = Dowhile.CreateDefenceOfficer.class),
            @XmlElement(name = "create_engineer", type = Dowhile.CreateEngineer.class),
            @XmlElement(name = "create_pilot", type = Dowhile.CreatePilot.class),
            @XmlElement(name = "cutscene_event", type = Dowhile.CutsceneEvent.class),
            @XmlElement(name = "debug_text", type = Dowhile.DebugText.class),
            @XmlElement(name = "deplete_yield", type = Dowhile.DepleteYield.class),
            @XmlElement(name = "get_resource_gatherrate", type = Dowhile.GetResourceGatherrate.class),
            @XmlElement(name = "destroy_object", type = Dowhile.DestroyObject.class),
            @XmlElement(name = "destroy_group", type = Dowhile.DestroyGroup.class),
            @XmlElement(name = "restore_object", type = Dowhile.RestoreObject.class),
            @XmlElement(name = "repair_object", type = Dowhile.RepairObject.class),
            @XmlElement(name = "repair_component", type = Dowhile.RepairComponent.class),
            @XmlElement(name = "disable_collisions_between", type = Dowhile.DisableCollisionsBetween.class),
            @XmlElement(name = "dock", type = Dowhile.Dock.class),
            @XmlElement(name = "dock_drone", type = Dowhile.DockDrone.class),
            @XmlElement(name = "drop_cargo", type = Dowhile.DropCargo.class),
            @XmlElement(name = "drop_illegal_cargo", type = Dowhile.DropIllegalCargo.class),
            @XmlElement(name = "drop_illegal_inventory", type = Dowhile.DropIllegalInventory.class),
            @XmlElement(name = "drop_inventory", type = Dowhile.DropInventory.class),
            @XmlElement(name = "eject_npcs", type = Dowhile.EjectNpcs.class),
            @XmlElement(name = "enable_collisions_between", type = Dowhile.EnableCollisionsBetween.class),
            @XmlElement(name = "equip_weapon", type = Dowhile.EquipWeapon.class),
            @XmlElement(name = "find_asteroid_in_region", type = Dowhile.FindAsteroidInRegion.class),
            @XmlElement(name = "find_buy_offer", type = Dowhile.FindBuyOffer.class),
            @XmlElement(name = "find_closest_navmesh_object", type = Dowhile.FindClosestNavmeshObject.class),
            @XmlElement(name = "find_closest_region", type = Dowhile.FindClosestRegion.class),
            @XmlElement(name = "find_closest_resource", type = Dowhile.FindClosestResource.class),
            @XmlElement(name = "find_closest_station_part", type = Dowhile.FindClosestStationPart.class),
            @XmlElement(name = "find_cluster", type = Dowhile.FindCluster.class),
            @XmlElement(name = "find_dock_location", type = Dowhile.FindDockLocation.class),
            @XmlElement(name = "find_dockingbay_for_trade", type = Dowhile.FindDockingbayForTrade.class),
            @XmlElement(name = "find_gravidar_contact", type = Dowhile.FindGravidarContact.class),
            @XmlElement(name = "find_infopoint_location", type = Dowhile.FindInfopointLocation.class),
            @XmlElement(name = "find_object_component", type = Dowhile.FindObjectComponent.class),
            @XmlElement(name = "find_resource", type = Dowhile.FindResource.class),
            @XmlElement(name = "check_object", type = Dowhile.CheckObject.class),
            @XmlElement(name = "find_pos_in_mass_traffic_at_time", type = Dowhile.FindPosInMassTrafficAtTime.class),
            @XmlElement(name = "find_random_pos_in_mass_traffic", type = Dowhile.FindRandomPosInMassTraffic.class),
            @XmlElement(name = "find_summarised_adsign", type = Dowhile.FindSummarisedAdsign.class),
            @XmlElement(name = "find_summarised_efficiencyupgrade", type = Dowhile.FindSummarisedEfficiencyupgrade.class),
            @XmlElement(name = "find_summarised_flakcontroller", type = Dowhile.FindSummarisedFlakcontroller.class),
            @XmlElement(name = "find_summarised_shield", type = Dowhile.FindSummarisedShield.class),
            @XmlElement(name = "find_summarised_surfacedestructible", type = Dowhile.FindSummarisedSurfacedestructible.class),
            @XmlElement(name = "find_summarised_turret", type = Dowhile.FindSummarisedTurret.class),
            @XmlElement(name = "find_object", type = Dowhile.FindObject.class),
            @XmlElement(name = "find_sector", type = Dowhile.FindSector.class),
            @XmlElement(name = "find_sell_offer", type = Dowhile.FindSellOffer.class),
            @XmlElement(name = "find_ship", type = Dowhile.FindShip.class),
            @XmlElement(name = "find_station", type = Dowhile.FindStation.class),
            @XmlElement(name = "find_tradeoffer_parking_slot", type = Dowhile.FindTradeofferParkingSlot.class),
            @XmlElement(name = "find_zone", type = Dowhile.FindZone.class),
            @XmlElement(name = "fire_turret", type = Dowhile.FireTurret.class),
            @XmlElement(name = "get_attackstrength", type = Dowhile.GetAttackstrength.class),
            @XmlElement(name = "get_character_definition", type = Dowhile.GetCharacterDefinition.class),
            @XmlElement(name = "get_docking_approach_pos", type = Dowhile.GetDockingApproachPos.class),
            @XmlElement(name = "get_gate_approach_pos", type = Dowhile.GetGateApproachPos.class),
            @XmlElement(name = "get_global_path", type = Dowhile.GetGlobalPath.class),
            @XmlElement(name = "get_jump_path", type = Dowhile.GetJumpPath.class),
            @XmlElement(name = "get_closest_highway_offset", type = Dowhile.GetClosestHighwayOffset.class),
            @XmlElement(name = "get_closest_jumpbeacon", type = Dowhile.GetClosestJumpbeacon.class),
            @XmlElement(name = "get_safe_pos", type = Dowhile.GetSafePos.class),
            @XmlElement(name = "get_ship_definition", type = Dowhile.GetShipDefinition.class),
            @XmlElement(name = "get_target_points", type = Dowhile.GetTargetPoints.class),
            @XmlElement(name = "get_text_ids_in_range", type = Dowhile.GetTextIdsInRange.class),
            @XmlElement(name = "get_trade_parking_pos", type = Dowhile.GetTradeParkingPos.class),
            @XmlElement(name = "get_zone_exit_pos", type = Dowhile.GetZoneExitPos.class),
            @XmlElement(name = "precache_hint", type = Dowhile.PrecacheHint.class),
            @XmlElement(name = "is_in_quadrant", type = Dowhile.IsInQuadrant.class),
            @XmlElement(name = "join_formation", type = Dowhile.JoinFormation.class),
            @XmlElement(name = "launch_drone", type = Dowhile.LaunchDrone.class),
            @XmlElement(name = "launch_masstraffic_drone", type = Dowhile.LaunchMasstrafficDrone.class),
            @XmlElement(name = "launch_war_drones", type = Dowhile.LaunchWarDrones.class),
            @XmlElement(name = "launch_repair_drones", type = Dowhile.LaunchRepairDrones.class),
            @XmlElement(name = "leave_formation", type = Dowhile.LeaveFormation.class),
            @XmlElement(name = "open_conversation_menu", type = Dowhile.OpenConversationMenu.class),
            @XmlElement(name = "open_dockingbay_doors", type = Dowhile.OpenDockingbayDoors.class),
            @XmlElement(name = "pickup_target", type = Dowhile.PickupTarget.class),
            @XmlElement(name = "play_cutscene", type = Dowhile.PlayCutscene.class),
            @XmlElement(name = "remove_actor_account", type = Dowhile.RemoveActorAccount.class),
            @XmlElement(name = "remove_actor_from_room", type = Dowhile.RemoveActorFromRoom.class),
            @XmlElement(name = "remove_from_group", type = Dowhile.RemoveFromGroup.class),
            @XmlElement(name = "remove_from_player_squad", type = Dowhile.RemoveFromPlayerSquad.class),
            @XmlElement(name = "remove_object_commander", type = Dowhile.RemoveObjectCommander.class),
            @XmlElement(name = "remove_representative", type = Dowhile.RemoveRepresentative.class),
            @XmlElement(name = "remove_value", type = Dowhile.RemoveValue.class),
            @XmlElement(name = "remove_weapon", type = Dowhile.RemoveWeapon.class),
            @XmlElement(name = "check_weapon_active", type = Dowhile.CheckWeaponActive.class),
            @XmlElement(name = "check_weapon_installed", type = Dowhile.CheckWeaponInstalled.class),
            @XmlElement(name = "request_docking", type = Dowhile.RequestDocking.class),
            @XmlElement(name = "add_mass_traffic_quota", type = Dowhile.AddMassTrafficQuota.class),
            @XmlElement(name = "stop_mass_traffic_quota", type = Dowhile.StopMassTrafficQuota.class),
            @XmlElement(name = "get_macros_in_mass_traffic", type = Dowhile.GetMacrosInMassTraffic.class),
            @XmlElement(name = "request_mass_traffic_ship", type = Dowhile.RequestMassTrafficShip.class),
            @XmlElement(name = "request_undocking", type = Dowhile.RequestUndocking.class),
            @XmlElement(name = "request_boarding_support", type = Dowhile.RequestBoardingSupport.class),
            @XmlElement(name = "notify_boarding_support_failed", type = Dowhile.NotifyBoardingSupportFailed.class),
            @XmlElement(name = "notify_boarding_support_succeeded", type = Dowhile.NotifyBoardingSupportSucceeded.class),
            @XmlElement(name = "request_repair", type = Dowhile.RequestRepair.class),
            @XmlElement(name = "reset_relation_boost", type = Dowhile.ResetRelationBoost.class),
            @XmlElement(name = "reset_tolerance_boost", type = Dowhile.ResetToleranceBoost.class),
            @XmlElement(name = "reset_turret", type = Dowhile.ResetTurret.class),
            @XmlElement(name = "resize_list", type = Dowhile.ResizeList.class),
            @XmlElement(name = "reward_player", type = Dowhile.RewardPlayer.class),
            @XmlElement(name = "set_actor_account", type = Dowhile.SetActorAccount.class),
            @XmlElement(name = "set_actor_max_budget", type = Dowhile.SetActorMaxBudget.class),
            @XmlElement(name = "set_actor_min_budget", type = Dowhile.SetActorMinBudget.class),
            @XmlElement(name = "transfer_money", type = Dowhile.TransferMoney.class),
            @XmlElement(name = "set_buildanchor", type = Dowhile.SetBuildanchor.class),
            @XmlElement(name = "set_cockpit_tint", type = Dowhile.SetCockpitTint.class),
            @XmlElement(name = "set_comm_handler", type = Dowhile.SetCommHandler.class),
            @XmlElement(name = "set_object_active", type = Dowhile.SetObjectActive.class),
            @XmlElement(name = "set_object_capturable", type = Dowhile.SetObjectCapturable.class),
            @XmlElement(name = "set_object_radar_visible", type = Dowhile.SetObjectRadarVisible.class),
            @XmlElement(name = "set_object_commander", type = Dowhile.SetObjectCommander.class),
            @XmlElement(name = "add_drone", type = Dowhile.AddDrone.class),
            @XmlElement(name = "set_object_min_hull", type = Dowhile.SetObjectMinHull.class),
            @XmlElement(name = "set_object_min_shield", type = Dowhile.SetObjectMinShield.class),
            @XmlElement(name = "set_object_hull", type = Dowhile.SetObjectHull.class),
            @XmlElement(name = "set_object_relation_behaviour", type = Dowhile.SetObjectRelationBehaviour.class),
            @XmlElement(name = "set_object_shield", type = Dowhile.SetObjectShield.class),
            @XmlElement(name = "set_object_max_hull", type = Dowhile.SetObjectMaxHull.class),
            @XmlElement(name = "set_summarised_adsign_state", type = Dowhile.SetSummarisedAdsignState.class),
            @XmlElement(name = "set_summarised_efficiencyupgrade_state", type = Dowhile.SetSummarisedEfficiencyupgradeState.class),
            @XmlElement(name = "set_summarised_flakcontroller_state", type = Dowhile.SetSummarisedFlakcontrollerState.class),
            @XmlElement(name = "set_summarised_shield_state", type = Dowhile.SetSummarisedShieldState.class),
            @XmlElement(name = "set_summarised_surfacedestructible_state", type = Dowhile.SetSummarisedSurfacedestructibleState.class),
            @XmlElement(name = "set_summarised_turret_state", type = Dowhile.SetSummarisedTurretState.class),
            @XmlElement(name = "set_object_scanned", type = Dowhile.SetObjectScanned.class),
            @XmlElement(name = "set_object_hacked", type = Dowhile.SetObjectHacked.class),
            @XmlElement(name = "set_room_locked", type = Dowhile.SetRoomLocked.class),
            @XmlElement(name = "set_allow_drop", type = Dowhile.SetAllowDrop.class),
            @XmlElement(name = "set_drop_object", type = Dowhile.SetDropObject.class),
            @XmlElement(name = "spawn_drop", type = Dowhile.SpawnDrop.class),
            @XmlElement(name = "set_entity_type", type = Dowhile.SetEntityType.class),
            @XmlElement(name = "set_faction_relation", type = Dowhile.SetFactionRelation.class),
            @XmlElement(name = "set_mass_traffic_object_persistence", type = Dowhile.SetMassTrafficObjectPersistence.class),
            @XmlElement(name = "set_region_object_persistence", type = Dowhile.SetRegionObjectPersistence.class),
            @XmlElement(name = "end_mass_traffic", type = Dowhile.EndMassTraffic.class),
            @XmlElement(name = "set_order_moveto", type = Dowhile.SetOrderMoveto.class),
            @XmlElement(name = "set_order_pickup_target", type = Dowhile.SetOrderPickupTarget.class),
            @XmlElement(name = "set_owner", type = Dowhile.SetOwner.class),
            @XmlElement(name = "set_cover_owner", type = Dowhile.SetCoverOwner.class),
            @XmlElement(name = "set_player_activity", type = Dowhile.SetPlayerActivity.class),
            @XmlElement(name = "set_player_entity_position", type = Dowhile.SetPlayerEntityPosition.class),
            @XmlElement(name = "set_relation_boost", type = Dowhile.SetRelationBoost.class),
            @XmlElement(name = "set_representative", type = Dowhile.SetRepresentative.class),
            @XmlElement(name = "set_hack_target", type = Dowhile.SetHackTarget.class),
            @XmlElement(name = "set_scan_target", type = Dowhile.SetScanTarget.class),
            @XmlElement(name = "set_skill", type = Dowhile.SetSkill.class),
            @XmlElement(name = "set_skills_visible", type = Dowhile.SetSkillsVisible.class),
            @XmlElement(name = "set_tolerance_boost", type = Dowhile.SetToleranceBoost.class),
            @XmlElement(name = "set_allowed_weapon_systems", type = Dowhile.SetAllowedWeaponSystems.class),
            @XmlElement(name = "set_trade_restrictions", type = Dowhile.SetTradeRestrictions.class),
            @XmlElement(name = "set_turret_targets", type = Dowhile.SetTurretTargets.class),
            @XmlElement(name = "set_value", type = Dowhile.SetValue.class),
            @XmlElement(name = "setup_conversation_minigame", type = Dowhile.SetupConversationMinigame.class),
            @XmlElement(name = "show_help", type = Dowhile.ShowHelp.class),
            @XmlElement(name = "remove_help", type = Dowhile.RemoveHelp.class),
            @XmlElement(name = "save_ai_action_state", type = Dowhile.SaveAiActionState.class),
            @XmlElement(name = "show_input_help", type = Dowhile.ShowInputHelp.class),
            @XmlElement(name = "show_notification", type = Dowhile.ShowNotification.class),
            @XmlElement(name = "signal_objects", type = Dowhile.SignalObjects.class),
            @XmlElement(name = "speak", type = Dowhile.Speak.class),
            @XmlElement(name = "start_boost", type = Dowhile.StartBoost.class),
            @XmlElement(name = "start_conversation", type = Dowhile.StartConversation.class),
            @XmlElement(name = "cancel_conversation", type = Dowhile.CancelConversation.class),
            @XmlElement(name = "start_long_range_scan", type = Dowhile.StartLongRangeScan.class),
            @XmlElement(name = "stop_long_range_scan", type = Dowhile.StopLongRangeScan.class),
            @XmlElement(name = "start_script", type = Dowhile.StartScript.class),
            @XmlElement(name = "stop_boost", type = Dowhile.StopBoost.class),
            @XmlElement(name = "stop_cutscene", type = Dowhile.StopCutscene.class),
            @XmlElement(name = "stop_firing_at_target", type = Dowhile.StopFiringAtTarget.class),
            @XmlElement(name = "substitute_text", type = Dowhile.SubstituteText.class),
            @XmlElement(name = "trigger_autosave", type = Dowhile.TriggerAutosave.class),
            @XmlElement(name = "trigger_boarding", type = Dowhile.TriggerBoarding.class),
            @XmlElement(name = "undock", type = Dowhile.Undock.class),
            @XmlElement(name = "unlock_achievement", type = Dowhile.UnlockAchievement.class),
            @XmlElement(name = "indicate_achievement_progress", type = Dowhile.IndicateAchievementProgress.class),
            @XmlElement(name = "update_trade", type = Dowhile.UpdateTrade.class),
            @XmlElement(name = "upgrade_object_by_macro", type = Dowhile.UpgradeObjectByMacro.class),
            @XmlElement(name = "upgrade_object_by_tag", type = Dowhile.UpgradeObjectByTag.class),
            @XmlElement(name = "build_object_upgrades", type = Dowhile.BuildObjectUpgrades.class),
            @XmlElement(name = "build_component_upgrades", type = Dowhile.BuildComponentUpgrades.class),
            @XmlElement(name = "get_build_slot_price", type = Dowhile.GetBuildSlotPrice.class),
            @XmlElement(name = "get_pilot_dockslot", type = Dowhile.GetPilotDockslot.class),
            @XmlElement(name = "warp", type = Dowhile.Warp.class),
            @XmlElement(name = "sort_trades", type = Dowhile.SortTrades.class),
            @XmlElement(name = "add_experience_progress", type = Dowhile.AddExperienceProgress.class),
            @XmlElement(name = "set_experience_progress", type = Dowhile.SetExperienceProgress.class),
            @XmlElement(name = "add_effect", type = Dowhile.AddEffect.class),
            @XmlElement(name = "remove_effect", type = Dowhile.RemoveEffect.class),
            @XmlElement(name = "play_sound", type = Dowhile.PlaySound.class),
            @XmlElement(name = "play_music", type = Dowhile.PlayMusic.class),
            @XmlElement(name = "stop_music", type = Dowhile.StopMusic.class),
            @XmlElement(name = "quit_gameover", type = Dowhile.QuitGameover.class),
            @XmlElement(name = "quit_to_desktop", type = Dowhile.QuitToDesktop.class),
            @XmlElement(name = "quit_to_startmenu", type = Dowhile.QuitToStartmenu.class),
            @XmlElement(name = "cancel_cue", type = Dowhile.CancelCue.class),
            @XmlElement(name = "complete_cue", type = Dowhile.CompleteCue.class),
            @XmlElement(name = "create_cue_actor", type = Dowhile.CreateCueActor.class),
            @XmlElement(name = "create_mission", type = Dowhile.CreateMission.class),
            @XmlElement(name = "create_offer", type = Dowhile.CreateOffer.class),
            @XmlElement(name = "create_platform_actor", type = Dowhile.CreatePlatformActor.class),
            @XmlElement(name = "create_presentation_cluster", type = Dowhile.CreatePresentationCluster.class),
            @XmlElement(name = "create_representative_actor", type = Dowhile.CreateRepresentativeActor.class),
            @XmlElement(name = "create_target_points", type = Dowhile.CreateTargetPoints.class),
            @XmlElement(name = "find_mission_offer_location", type = Dowhile.FindMissionOfferLocation.class),
            @XmlElement(name = "force_cue", type = Dowhile.ForceCue.class),
            @XmlElement(name = "include_actions", type = Dowhile.IncludeActions.class),
            @XmlElement(name = "populate_platforms", type = Dowhile.PopulatePlatforms.class),
            @XmlElement(name = "remove_all_cue_actors", type = Dowhile.RemoveAllCueActors.class),
            @XmlElement(name = "remove_cue_actor", type = Dowhile.RemoveCueActor.class),
            @XmlElement(name = "remove_mission", type = Dowhile.RemoveMission.class),
            @XmlElement(name = "remove_offer", type = Dowhile.RemoveOffer.class),
            @XmlElement(name = "remove_target_points", type = Dowhile.RemoveTargetPoints.class),
            @XmlElement(name = "reset_cue", type = Dowhile.ResetCue.class),
            @XmlElement(name = "add_holomap", type = Dowhile.AddHolomap.class),
            @XmlElement(name = "remove_holomap", type = Dowhile.RemoveHolomap.class),
            @XmlElement(name = "set_holomap_target", type = Dowhile.SetHolomapTarget.class),
            @XmlElement(name = "set_job_active", type = Dowhile.SetJobActive.class),
            @XmlElement(name = "set_mission_actor", type = Dowhile.SetMissionActor.class),
            @XmlElement(name = "set_objective", type = Dowhile.SetObjective.class),
            @XmlElement(name = "update_objective_progress", type = Dowhile.UpdateObjectiveProgress.class),
            @XmlElement(name = "update_mission", type = Dowhile.UpdateMission.class),
            @XmlElement(name = "update_objective_endtime", type = Dowhile.UpdateObjectiveEndtime.class),
            @XmlElement(name = "update_offer", type = Dowhile.UpdateOffer.class),
            @XmlElement(name = "enter_playership", type = Dowhile.EnterPlayership.class),
            @XmlElement(name = "leave_cockpit", type = Dowhile.LeaveCockpit.class),
            @XmlElement(name = "force_player_speed", type = Dowhile.ForcePlayerSpeed.class),
            @XmlElement(name = "signal_cue", type = Dowhile.SignalCue.class),
            @XmlElement(name = "signal_cue_instantly", type = Dowhile.SignalCueInstantly.class)
        })
        protected List<Object> doAllOrDoAnyOrDoIf;
        @XmlAttribute(name = "name")
        protected String name;
        @XmlAttribute(name = "comment")
        protected String comment;

        /**
         * Gets the value of the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getDoAllOrDoAnyOrDoIf().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Doall }
         * {@link Doany }
         * {@link Doif }
         * {@link Doelseif }
         * {@link Doelse }
         * {@link Dowhile }
         * {@link Dowhile.AbortHack }
         * {@link Dowhile.AbortScan }
         * {@link Dowhile.AbortScripts }
         * {@link Dowhile.ActivateBattlestate }
         * {@link Dowhile.ActivateFlaks }
         * {@link Dowhile.ActivateWeapon }
         * {@link Dowhile.AddActorToPlatform }
         * {@link Dowhile.AddActorToPlayership }
         * {@link Dowhile.AddCopilot }
         * {@link Dowhile.CreateBuildPlan }
         * {@link Dowhile.AddBuildPlan }
         * {@link Dowhile.AddAmmo }
         * {@link Dowhile.RemoveAmmo }
         * {@link Dowhile.DepleteAmmo }
         * {@link Dowhile.EvaluateAmmoStorage }
         * {@link Dowhile.AddCargo }
         * {@link Dowhile.RemoveCargo }
         * {@link Dowhile.AddCommission }
         * {@link Dowhile.AddPlayerCommission }
         * {@link Dowhile.RemoveCommission }
         * {@link Dowhile.RemovePlayerCommission }
         * {@link Dowhile.AddDefaultProductionWares }
         * {@link Dowhile.AddSkill }
         * {@link Dowhile.AddTradeware }
         * {@link Dowhile.RemoveTradeware }
         * {@link Dowhile.AddDiscount }
         * {@link Dowhile.AddPlayerDiscount }
         * {@link Dowhile.RemoveDiscount }
         * {@link Dowhile.RemovePlayerDiscount }
         * {@link Dowhile.AddProductionSalesreps }
         * {@link Dowhile.AddWatchdogUnitsToMasstraffic }
         * {@link Dowhile.GetNextBonusUnlocktime }
         * {@link Dowhile.GetProductionSpecialistTypes }
         * {@link Dowhile.SetNextBonusUnlocktime }
         * {@link Dowhile.AddBuyOrder }
         * {@link Dowhile.AddSellOrder }
         * {@link Dowhile.RemoveTradeOrder }
         * {@link Dowhile.GetTradeFromShoppinglist }
         * {@link Dowhile.GetTradeofferLocations }
         * {@link Dowhile.AddConversationView }
         * {@link Dowhile.AddFactionRelation }
         * {@link Dowhile.GetFactionsByRelation }
         * {@link Dowhile.SetFactionKnown }
         * {@link Dowhile.SetKnown }
         * {@link Dowhile.AddInventory }
         * {@link Dowhile.RemoveInventory }
         * {@link Dowhile.AddLicence }
         * {@link Dowhile.RemoveLicence }
         * {@link Dowhile.AddNpcLine }
         * {@link Dowhile.AddPlayerChoice }
         * {@link Dowhile.AddPlayerChoiceSub }
         * {@link Dowhile.AddPlayerChoiceSubconv }
         * {@link Dowhile.AddPlayerChoiceReturn }
         * {@link Dowhile.SetConversationReturnSection }
         * {@link Dowhile.AddRelationBoost }
         * {@link Dowhile.AddToGroup }
         * {@link Dowhile.AddToPlayerSquad }
         * {@link Dowhile.AddToleranceBoost }
         * {@link Dowhile.AimTurret }
         * {@link Dowhile.AddUnits }
         * {@link Dowhile.RemoveUnits }
         * {@link Dowhile.RequestUnits }
         * {@link Dowhile.ReturnUnits }
         * {@link Dowhile.AllowConversationEscape }
         * {@link Dowhile.AppendToList }
         * {@link Dowhile.ApplyAttackstrength }
         * {@link Dowhile.Assert }
         * {@link Dowhile.AssignPilot }
         * {@link Dowhile.AssignArchitect }
         * {@link Dowhile.AssignBoardingCommander }
         * {@link Dowhile.AssignDefenceManager }
         * {@link Dowhile.AssignEngineer }
         * {@link Dowhile.AssignTradeManager }
         * {@link Dowhile.AssignControlEntity }
         * {@link Dowhile.DismissControlEntity }
         * {@link Dowhile.GetControlEntities }
         * {@link Dowhile.AttachObjectToTarget }
         * {@link Dowhile.Break }
         * {@link Dowhile.BreakFormation }
         * {@link Dowhile.CeaseFire }
         * {@link Dowhile.ChangeRelationOnAttack }
         * {@link Dowhile.ChangeRelationOnKill }
         * {@link Dowhile.CheckLineOfSight }
         * {@link Dowhile.CheckIsInSecurityArea }
         * {@link Dowhile.CheckIsAreaObstructed }
         * {@link Dowhile.StartObservation }
         * {@link Dowhile.StopObservation }
         * {@link Dowhile.StartAttack }
         * {@link Dowhile.StopAttack }
         * {@link Dowhile.ReportIllegalActivity }
         * {@link Dowhile.ClaimShip }
         * {@link Dowhile.ClearCollisionFilter }
         * {@link Dowhile.ClearGroup }
         * {@link Dowhile.ClearList }
         * {@link Dowhile.CloseDockingbayDoors }
         * {@link Dowhile.GetBuildingPosition }
         * {@link Dowhile.ConnectToBuildLocation }
         * {@link Dowhile.ConnectToTradeLocation }
         * {@link Dowhile.DisconnectFromTradeLocation }
         * {@link Dowhile.ConstructShip }
         * {@link Dowhile.ConstructStation }
         * {@link Dowhile.SetBuildmoduleMacro }
         * {@link Dowhile.ClearBuildmodule }
         * {@link Dowhile.Continue }
         * {@link Dowhile.CreateAiUnit }
         * {@link Dowhile.CreateGroup }
         * {@link Dowhile.CreateList }
         * {@link Dowhile.CreateFormation }
         * {@link Dowhile.CreateObject }
         * {@link Dowhile.CreateOrientation }
         * {@link Dowhile.CreateRandomPositionInBoundingbox }
         * {@link Dowhile.CreateRandomPositionOutsideBoundingbox }
         * {@link Dowhile.CreateTradeOffer }
         * {@link Dowhile.AddTradeOffer }
         * {@link Dowhile.RemoveTradeOffer }
         * {@link Dowhile.CreatePositionOutsideBoundingbox }
         * {@link Dowhile.FindObjectSurface }
         * {@link Dowhile.CreatePosition }
         * {@link Dowhile.TransformPosition }
         * {@link Dowhile.CreateRotation }
         * {@link Dowhile.CreateShip }
         * {@link Dowhile.CreateStation }
         * {@link Dowhile.CreateDefenceOfficer }
         * {@link Dowhile.CreateEngineer }
         * {@link Dowhile.CreatePilot }
         * {@link Dowhile.CutsceneEvent }
         * {@link Dowhile.DebugText }
         * {@link Dowhile.DepleteYield }
         * {@link Dowhile.GetResourceGatherrate }
         * {@link Dowhile.DestroyObject }
         * {@link Dowhile.DestroyGroup }
         * {@link Dowhile.RestoreObject }
         * {@link Dowhile.RepairObject }
         * {@link Dowhile.RepairComponent }
         * {@link Dowhile.DisableCollisionsBetween }
         * {@link Dowhile.Dock }
         * {@link Dowhile.DockDrone }
         * {@link Dowhile.DropCargo }
         * {@link Dowhile.DropIllegalCargo }
         * {@link Dowhile.DropIllegalInventory }
         * {@link Dowhile.DropInventory }
         * {@link Dowhile.EjectNpcs }
         * {@link Dowhile.EnableCollisionsBetween }
         * {@link Dowhile.EquipWeapon }
         * {@link Dowhile.FindAsteroidInRegion }
         * {@link Dowhile.FindBuyOffer }
         * {@link Dowhile.FindClosestNavmeshObject }
         * {@link Dowhile.FindClosestRegion }
         * {@link Dowhile.FindClosestResource }
         * {@link Dowhile.FindClosestStationPart }
         * {@link Dowhile.FindCluster }
         * {@link Dowhile.FindDockLocation }
         * {@link Dowhile.FindDockingbayForTrade }
         * {@link Dowhile.FindGravidarContact }
         * {@link Dowhile.FindInfopointLocation }
         * {@link Dowhile.FindObjectComponent }
         * {@link Dowhile.FindResource }
         * {@link Dowhile.CheckObject }
         * {@link Dowhile.FindPosInMassTrafficAtTime }
         * {@link Dowhile.FindRandomPosInMassTraffic }
         * {@link Dowhile.FindSummarisedAdsign }
         * {@link Dowhile.FindSummarisedEfficiencyupgrade }
         * {@link Dowhile.FindSummarisedFlakcontroller }
         * {@link Dowhile.FindSummarisedShield }
         * {@link Dowhile.FindSummarisedSurfacedestructible }
         * {@link Dowhile.FindSummarisedTurret }
         * {@link Dowhile.FindObject }
         * {@link Dowhile.FindSector }
         * {@link Dowhile.FindSellOffer }
         * {@link Dowhile.FindShip }
         * {@link Dowhile.FindStation }
         * {@link Dowhile.FindTradeofferParkingSlot }
         * {@link Dowhile.FindZone }
         * {@link Dowhile.FireTurret }
         * {@link Dowhile.GetAttackstrength }
         * {@link Dowhile.GetCharacterDefinition }
         * {@link Dowhile.GetDockingApproachPos }
         * {@link Dowhile.GetGateApproachPos }
         * {@link Dowhile.GetGlobalPath }
         * {@link Dowhile.GetJumpPath }
         * {@link Dowhile.GetClosestHighwayOffset }
         * {@link Dowhile.GetClosestJumpbeacon }
         * {@link Dowhile.GetSafePos }
         * {@link Dowhile.GetShipDefinition }
         * {@link Dowhile.GetTargetPoints }
         * {@link Dowhile.GetTextIdsInRange }
         * {@link Dowhile.GetTradeParkingPos }
         * {@link Dowhile.GetZoneExitPos }
         * {@link Dowhile.PrecacheHint }
         * {@link Dowhile.IsInQuadrant }
         * {@link Dowhile.JoinFormation }
         * {@link Dowhile.LaunchDrone }
         * {@link Dowhile.LaunchMasstrafficDrone }
         * {@link Dowhile.LaunchWarDrones }
         * {@link Dowhile.LaunchRepairDrones }
         * {@link Dowhile.LeaveFormation }
         * {@link Dowhile.OpenConversationMenu }
         * {@link Dowhile.OpenDockingbayDoors }
         * {@link Dowhile.PickupTarget }
         * {@link Dowhile.PlayCutscene }
         * {@link Dowhile.RemoveActorAccount }
         * {@link Dowhile.RemoveActorFromRoom }
         * {@link Dowhile.RemoveFromGroup }
         * {@link Dowhile.RemoveFromPlayerSquad }
         * {@link Dowhile.RemoveObjectCommander }
         * {@link Dowhile.RemoveRepresentative }
         * {@link Dowhile.RemoveValue }
         * {@link Dowhile.RemoveWeapon }
         * {@link Dowhile.CheckWeaponActive }
         * {@link Dowhile.CheckWeaponInstalled }
         * {@link Dowhile.RequestDocking }
         * {@link Dowhile.AddMassTrafficQuota }
         * {@link Dowhile.StopMassTrafficQuota }
         * {@link Dowhile.GetMacrosInMassTraffic }
         * {@link Dowhile.RequestMassTrafficShip }
         * {@link Dowhile.RequestUndocking }
         * {@link Dowhile.RequestBoardingSupport }
         * {@link Dowhile.NotifyBoardingSupportFailed }
         * {@link Dowhile.NotifyBoardingSupportSucceeded }
         * {@link Dowhile.RequestRepair }
         * {@link Dowhile.ResetRelationBoost }
         * {@link Dowhile.ResetToleranceBoost }
         * {@link Dowhile.ResetTurret }
         * {@link Dowhile.ResizeList }
         * {@link Dowhile.RewardPlayer }
         * {@link Dowhile.SetActorAccount }
         * {@link Dowhile.SetActorMaxBudget }
         * {@link Dowhile.SetActorMinBudget }
         * {@link Dowhile.TransferMoney }
         * {@link Dowhile.SetBuildanchor }
         * {@link Dowhile.SetCockpitTint }
         * {@link Dowhile.SetCommHandler }
         * {@link Dowhile.SetObjectActive }
         * {@link Dowhile.SetObjectCapturable }
         * {@link Dowhile.SetObjectRadarVisible }
         * {@link Dowhile.SetObjectCommander }
         * {@link Dowhile.AddDrone }
         * {@link Dowhile.SetObjectMinHull }
         * {@link Dowhile.SetObjectMinShield }
         * {@link Dowhile.SetObjectHull }
         * {@link Dowhile.SetObjectRelationBehaviour }
         * {@link Dowhile.SetObjectShield }
         * {@link Dowhile.SetObjectMaxHull }
         * {@link Dowhile.SetSummarisedAdsignState }
         * {@link Dowhile.SetSummarisedEfficiencyupgradeState }
         * {@link Dowhile.SetSummarisedFlakcontrollerState }
         * {@link Dowhile.SetSummarisedShieldState }
         * {@link Dowhile.SetSummarisedSurfacedestructibleState }
         * {@link Dowhile.SetSummarisedTurretState }
         * {@link Dowhile.SetObjectScanned }
         * {@link Dowhile.SetObjectHacked }
         * {@link Dowhile.SetRoomLocked }
         * {@link Dowhile.SetAllowDrop }
         * {@link Dowhile.SetDropObject }
         * {@link Dowhile.SpawnDrop }
         * {@link Dowhile.SetEntityType }
         * {@link Dowhile.SetFactionRelation }
         * {@link Dowhile.SetMassTrafficObjectPersistence }
         * {@link Dowhile.SetRegionObjectPersistence }
         * {@link Dowhile.EndMassTraffic }
         * {@link Dowhile.SetOrderMoveto }
         * {@link Dowhile.SetOrderPickupTarget }
         * {@link Dowhile.SetOwner }
         * {@link Dowhile.SetCoverOwner }
         * {@link Dowhile.SetPlayerActivity }
         * {@link Dowhile.SetPlayerEntityPosition }
         * {@link Dowhile.SetRelationBoost }
         * {@link Dowhile.SetRepresentative }
         * {@link Dowhile.SetHackTarget }
         * {@link Dowhile.SetScanTarget }
         * {@link Dowhile.SetSkill }
         * {@link Dowhile.SetSkillsVisible }
         * {@link Dowhile.SetToleranceBoost }
         * {@link Dowhile.SetAllowedWeaponSystems }
         * {@link Dowhile.SetTradeRestrictions }
         * {@link Dowhile.SetTurretTargets }
         * {@link Dowhile.SetValue }
         * {@link Dowhile.SetupConversationMinigame }
         * {@link Dowhile.ShowHelp }
         * {@link Dowhile.RemoveHelp }
         * {@link Dowhile.SaveAiActionState }
         * {@link Dowhile.ShowInputHelp }
         * {@link Dowhile.ShowNotification }
         * {@link Dowhile.SignalObjects }
         * {@link Dowhile.Speak }
         * {@link Dowhile.StartBoost }
         * {@link Dowhile.StartConversation }
         * {@link Dowhile.CancelConversation }
         * {@link Dowhile.StartLongRangeScan }
         * {@link Dowhile.StopLongRangeScan }
         * {@link Dowhile.StartScript }
         * {@link Dowhile.StopBoost }
         * {@link Dowhile.StopCutscene }
         * {@link Dowhile.StopFiringAtTarget }
         * {@link Dowhile.SubstituteText }
         * {@link Dowhile.TriggerAutosave }
         * {@link Dowhile.TriggerBoarding }
         * {@link Dowhile.Undock }
         * {@link Dowhile.UnlockAchievement }
         * {@link Dowhile.IndicateAchievementProgress }
         * {@link Dowhile.UpdateTrade }
         * {@link Dowhile.UpgradeObjectByMacro }
         * {@link Dowhile.UpgradeObjectByTag }
         * {@link Dowhile.BuildObjectUpgrades }
         * {@link Dowhile.BuildComponentUpgrades }
         * {@link Dowhile.GetBuildSlotPrice }
         * {@link Dowhile.GetPilotDockslot }
         * {@link Dowhile.Warp }
         * {@link Dowhile.SortTrades }
         * {@link Dowhile.AddExperienceProgress }
         * {@link Dowhile.SetExperienceProgress }
         * {@link Dowhile.AddEffect }
         * {@link Dowhile.RemoveEffect }
         * {@link Dowhile.PlaySound }
         * {@link Dowhile.PlayMusic }
         * {@link Dowhile.StopMusic }
         * {@link Dowhile.QuitGameover }
         * {@link Dowhile.QuitToDesktop }
         * {@link Dowhile.QuitToStartmenu }
         * {@link Dowhile.CancelCue }
         * {@link Dowhile.CompleteCue }
         * {@link Dowhile.CreateCueActor }
         * {@link Dowhile.CreateMission }
         * {@link Dowhile.CreateOffer }
         * {@link Dowhile.CreatePlatformActor }
         * {@link Dowhile.CreatePresentationCluster }
         * {@link Dowhile.CreateRepresentativeActor }
         * {@link Dowhile.CreateTargetPoints }
         * {@link Dowhile.FindMissionOfferLocation }
         * {@link Dowhile.ForceCue }
         * {@link Dowhile.IncludeActions }
         * {@link Dowhile.PopulatePlatforms }
         * {@link Dowhile.RemoveAllCueActors }
         * {@link Dowhile.RemoveCueActor }
         * {@link Dowhile.RemoveMission }
         * {@link Dowhile.RemoveOffer }
         * {@link Dowhile.RemoveTargetPoints }
         * {@link Dowhile.ResetCue }
         * {@link Dowhile.AddHolomap }
         * {@link Dowhile.RemoveHolomap }
         * {@link Dowhile.SetHolomapTarget }
         * {@link Dowhile.SetJobActive }
         * {@link Dowhile.SetMissionActor }
         * {@link Dowhile.SetObjective }
         * {@link Dowhile.UpdateObjectiveProgress }
         * {@link Dowhile.UpdateMission }
         * {@link Dowhile.UpdateObjectiveEndtime }
         * {@link Dowhile.UpdateOffer }
         * {@link Dowhile.EnterPlayership }
         * {@link Dowhile.LeaveCockpit }
         * {@link Dowhile.ForcePlayerSpeed }
         * {@link Dowhile.SignalCue }
         * {@link Dowhile.SignalCueInstantly }
         * 
         * 
         */
        public List<Object> getDoAllOrDoAnyOrDoIf() {
            if (doAllOrDoAnyOrDoIf == null) {
                doAllOrDoAnyOrDoIf = new ArrayList<Object>();
            }
            return this.doAllOrDoAnyOrDoIf;
        }

        /**
         * Gets the value of the name property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setName(String value) {
            this.name = value;
        }

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence maxOccurs="unbounded" minOccurs="0">
     *         &lt;element name="param">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="name" use="required" type="{}paramname" />
     *                 &lt;attribute name="default" type="{}expression" />
     *                 &lt;attribute name="comment" type="{}comment" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "param"
    })
    public static class Params {

        protected List<Library.Params.Param> param;

        /**
         * Gets the value of the param property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the param property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getParam().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Library.Params.Param }
         * 
         * 
         */
        public List<Library.Params.Param> getParam() {
            if (param == null) {
                param = new ArrayList<Library.Params.Param>();
            }
            return this.param;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="name" use="required" type="{}paramname" />
         *       &lt;attribute name="default" type="{}expression" />
         *       &lt;attribute name="comment" type="{}comment" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class Param {

            @XmlAttribute(name = "name", required = true)
            protected String name;
            @XmlAttribute(name = "default")
            protected String _default;
            @XmlAttribute(name = "comment")
            protected String comment;

            /**
             * Gets the value of the name property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getName() {
                return name;
            }

            /**
             * Sets the value of the name property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setName(String value) {
                this.name = value;
            }

            /**
             * Gets the value of the default property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getDefault() {
                return _default;
            }

            /**
             * Sets the value of the default property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setDefault(String value) {
                this._default = value;
            }

            /**
             * Gets the value of the comment property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getComment() {
                return comment;
            }

            /**
             * Sets the value of the comment property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setComment(String value) {
                this.comment = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{}actions"/>
     *       &lt;attribute name="comment" type="{}comment" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "doAllOrDoAnyOrDoIf"
    })
    public static class Patch {

        @XmlElements({
            @XmlElement(name = "do_all", type = Doall.class),
            @XmlElement(name = "do_any", type = Doany.class),
            @XmlElement(name = "do_if", type = Doif.class),
            @XmlElement(name = "do_elseif", type = Doelseif.class),
            @XmlElement(name = "do_else", type = Doelse.class),
            @XmlElement(name = "do_while", type = Dowhile.class),
            @XmlElement(name = "abort_hack", type = Dowhile.AbortHack.class),
            @XmlElement(name = "abort_scan", type = Dowhile.AbortScan.class),
            @XmlElement(name = "abort_scripts", type = Dowhile.AbortScripts.class),
            @XmlElement(name = "activate_battlestate", type = Dowhile.ActivateBattlestate.class),
            @XmlElement(name = "activate_flaks", type = Dowhile.ActivateFlaks.class),
            @XmlElement(name = "activate_weapon", type = Dowhile.ActivateWeapon.class),
            @XmlElement(name = "add_actor_to_platform", type = Dowhile.AddActorToPlatform.class),
            @XmlElement(name = "add_actor_to_playership", type = Dowhile.AddActorToPlayership.class),
            @XmlElement(name = "add_copilot", type = Dowhile.AddCopilot.class),
            @XmlElement(name = "create_build_plan", type = Dowhile.CreateBuildPlan.class),
            @XmlElement(name = "add_build_plan", type = Dowhile.AddBuildPlan.class),
            @XmlElement(name = "add_ammo", type = Dowhile.AddAmmo.class),
            @XmlElement(name = "remove_ammo", type = Dowhile.RemoveAmmo.class),
            @XmlElement(name = "deplete_ammo", type = Dowhile.DepleteAmmo.class),
            @XmlElement(name = "evaluate_ammo_storage", type = Dowhile.EvaluateAmmoStorage.class),
            @XmlElement(name = "add_cargo", type = Dowhile.AddCargo.class),
            @XmlElement(name = "remove_cargo", type = Dowhile.RemoveCargo.class),
            @XmlElement(name = "add_commission", type = Dowhile.AddCommission.class),
            @XmlElement(name = "add_player_commission", type = Dowhile.AddPlayerCommission.class),
            @XmlElement(name = "remove_commission", type = Dowhile.RemoveCommission.class),
            @XmlElement(name = "remove_player_commission", type = Dowhile.RemovePlayerCommission.class),
            @XmlElement(name = "add_default_production_wares", type = Dowhile.AddDefaultProductionWares.class),
            @XmlElement(name = "add_skill", type = Dowhile.AddSkill.class),
            @XmlElement(name = "add_tradeware", type = Dowhile.AddTradeware.class),
            @XmlElement(name = "remove_tradeware", type = Dowhile.RemoveTradeware.class),
            @XmlElement(name = "add_discount", type = Dowhile.AddDiscount.class),
            @XmlElement(name = "add_player_discount", type = Dowhile.AddPlayerDiscount.class),
            @XmlElement(name = "remove_discount", type = Dowhile.RemoveDiscount.class),
            @XmlElement(name = "remove_player_discount", type = Dowhile.RemovePlayerDiscount.class),
            @XmlElement(name = "add_production_salesreps", type = Dowhile.AddProductionSalesreps.class),
            @XmlElement(name = "add_watchdog_units_to_masstraffic", type = Dowhile.AddWatchdogUnitsToMasstraffic.class),
            @XmlElement(name = "get_next_bonus_unlocktime", type = Dowhile.GetNextBonusUnlocktime.class),
            @XmlElement(name = "get_production_specialist_types", type = Dowhile.GetProductionSpecialistTypes.class),
            @XmlElement(name = "set_next_bonus_unlocktime", type = Dowhile.SetNextBonusUnlocktime.class),
            @XmlElement(name = "add_buy_order", type = Dowhile.AddBuyOrder.class),
            @XmlElement(name = "add_sell_order", type = Dowhile.AddSellOrder.class),
            @XmlElement(name = "remove_trade_order", type = Dowhile.RemoveTradeOrder.class),
            @XmlElement(name = "get_trade_from_shoppinglist", type = Dowhile.GetTradeFromShoppinglist.class),
            @XmlElement(name = "get_tradeoffer_locations", type = Dowhile.GetTradeofferLocations.class),
            @XmlElement(name = "add_conversation_view", type = Dowhile.AddConversationView.class),
            @XmlElement(name = "add_faction_relation", type = Dowhile.AddFactionRelation.class),
            @XmlElement(name = "get_factions_by_relation", type = Dowhile.GetFactionsByRelation.class),
            @XmlElement(name = "set_faction_known", type = Dowhile.SetFactionKnown.class),
            @XmlElement(name = "set_known", type = Dowhile.SetKnown.class),
            @XmlElement(name = "add_inventory", type = Dowhile.AddInventory.class),
            @XmlElement(name = "remove_inventory", type = Dowhile.RemoveInventory.class),
            @XmlElement(name = "add_licence", type = Dowhile.AddLicence.class),
            @XmlElement(name = "remove_licence", type = Dowhile.RemoveLicence.class),
            @XmlElement(name = "add_npc_line", type = Dowhile.AddNpcLine.class),
            @XmlElement(name = "add_player_choice", type = Dowhile.AddPlayerChoice.class),
            @XmlElement(name = "add_player_choice_sub", type = Dowhile.AddPlayerChoiceSub.class),
            @XmlElement(name = "add_player_choice_subconv", type = Dowhile.AddPlayerChoiceSubconv.class),
            @XmlElement(name = "add_player_choice_return", type = Dowhile.AddPlayerChoiceReturn.class),
            @XmlElement(name = "set_conversation_return_section", type = Dowhile.SetConversationReturnSection.class),
            @XmlElement(name = "add_relation_boost", type = Dowhile.AddRelationBoost.class),
            @XmlElement(name = "add_to_group", type = Dowhile.AddToGroup.class),
            @XmlElement(name = "add_to_player_squad", type = Dowhile.AddToPlayerSquad.class),
            @XmlElement(name = "add_tolerance_boost", type = Dowhile.AddToleranceBoost.class),
            @XmlElement(name = "aim_turret", type = Dowhile.AimTurret.class),
            @XmlElement(name = "add_units", type = Dowhile.AddUnits.class),
            @XmlElement(name = "remove_units", type = Dowhile.RemoveUnits.class),
            @XmlElement(name = "request_units", type = Dowhile.RequestUnits.class),
            @XmlElement(name = "return_units", type = Dowhile.ReturnUnits.class),
            @XmlElement(name = "allow_conversation_escape", type = Dowhile.AllowConversationEscape.class),
            @XmlElement(name = "append_to_list", type = Dowhile.AppendToList.class),
            @XmlElement(name = "apply_attackstrength", type = Dowhile.ApplyAttackstrength.class),
            @XmlElement(name = "assert", type = Dowhile.Assert.class),
            @XmlElement(name = "assign_pilot", type = Dowhile.AssignPilot.class),
            @XmlElement(name = "assign_architect", type = Dowhile.AssignArchitect.class),
            @XmlElement(name = "assign_boarding_commander", type = Dowhile.AssignBoardingCommander.class),
            @XmlElement(name = "assign_defence_manager", type = Dowhile.AssignDefenceManager.class),
            @XmlElement(name = "assign_engineer", type = Dowhile.AssignEngineer.class),
            @XmlElement(name = "assign_trade_manager", type = Dowhile.AssignTradeManager.class),
            @XmlElement(name = "assign_control_entity", type = Dowhile.AssignControlEntity.class),
            @XmlElement(name = "dismiss_control_entity", type = Dowhile.DismissControlEntity.class),
            @XmlElement(name = "get_control_entities", type = Dowhile.GetControlEntities.class),
            @XmlElement(name = "attach_object_to_target", type = Dowhile.AttachObjectToTarget.class),
            @XmlElement(name = "break", type = Dowhile.Break.class),
            @XmlElement(name = "break_formation", type = Dowhile.BreakFormation.class),
            @XmlElement(name = "cease_fire", type = Dowhile.CeaseFire.class),
            @XmlElement(name = "change_relation_on_attack", type = Dowhile.ChangeRelationOnAttack.class),
            @XmlElement(name = "change_relation_on_kill", type = Dowhile.ChangeRelationOnKill.class),
            @XmlElement(name = "check_line_of_sight", type = Dowhile.CheckLineOfSight.class),
            @XmlElement(name = "check_is_in_security_area", type = Dowhile.CheckIsInSecurityArea.class),
            @XmlElement(name = "check_is_area_obstructed", type = Dowhile.CheckIsAreaObstructed.class),
            @XmlElement(name = "start_observation", type = Dowhile.StartObservation.class),
            @XmlElement(name = "stop_observation", type = Dowhile.StopObservation.class),
            @XmlElement(name = "start_attack", type = Dowhile.StartAttack.class),
            @XmlElement(name = "stop_attack", type = Dowhile.StopAttack.class),
            @XmlElement(name = "report_illegal_activity", type = Dowhile.ReportIllegalActivity.class),
            @XmlElement(name = "claim_ship", type = Dowhile.ClaimShip.class),
            @XmlElement(name = "clear_collision_filter", type = Dowhile.ClearCollisionFilter.class),
            @XmlElement(name = "clear_group", type = Dowhile.ClearGroup.class),
            @XmlElement(name = "clear_list", type = Dowhile.ClearList.class),
            @XmlElement(name = "close_dockingbay_doors", type = Dowhile.CloseDockingbayDoors.class),
            @XmlElement(name = "get_building_position", type = Dowhile.GetBuildingPosition.class),
            @XmlElement(name = "connect_to_build_location", type = Dowhile.ConnectToBuildLocation.class),
            @XmlElement(name = "connect_to_trade_location", type = Dowhile.ConnectToTradeLocation.class),
            @XmlElement(name = "disconnect_from_trade_location", type = Dowhile.DisconnectFromTradeLocation.class),
            @XmlElement(name = "construct_ship", type = Dowhile.ConstructShip.class),
            @XmlElement(name = "construct_station", type = Dowhile.ConstructStation.class),
            @XmlElement(name = "set_buildmodule_macro", type = Dowhile.SetBuildmoduleMacro.class),
            @XmlElement(name = "clear_buildmodule", type = Dowhile.ClearBuildmodule.class),
            @XmlElement(name = "continue", type = Dowhile.Continue.class),
            @XmlElement(name = "create_ai_unit", type = Dowhile.CreateAiUnit.class),
            @XmlElement(name = "create_group", type = Dowhile.CreateGroup.class),
            @XmlElement(name = "create_list", type = Dowhile.CreateList.class),
            @XmlElement(name = "create_formation", type = Dowhile.CreateFormation.class),
            @XmlElement(name = "create_object", type = Dowhile.CreateObject.class),
            @XmlElement(name = "create_orientation", type = Dowhile.CreateOrientation.class),
            @XmlElement(name = "create_random_position_in_boundingbox", type = Dowhile.CreateRandomPositionInBoundingbox.class),
            @XmlElement(name = "create_random_position_outside_boundingbox", type = Dowhile.CreateRandomPositionOutsideBoundingbox.class),
            @XmlElement(name = "create_trade_offer", type = Dowhile.CreateTradeOffer.class),
            @XmlElement(name = "add_trade_offer", type = Dowhile.AddTradeOffer.class),
            @XmlElement(name = "remove_trade_offer", type = Dowhile.RemoveTradeOffer.class),
            @XmlElement(name = "create_position_outside_boundingbox", type = Dowhile.CreatePositionOutsideBoundingbox.class),
            @XmlElement(name = "find_object_surface", type = Dowhile.FindObjectSurface.class),
            @XmlElement(name = "create_position", type = Dowhile.CreatePosition.class),
            @XmlElement(name = "transform_position", type = Dowhile.TransformPosition.class),
            @XmlElement(name = "create_rotation", type = Dowhile.CreateRotation.class),
            @XmlElement(name = "create_ship", type = Dowhile.CreateShip.class),
            @XmlElement(name = "create_station", type = Dowhile.CreateStation.class),
            @XmlElement(name = "create_defence_officer", type = Dowhile.CreateDefenceOfficer.class),
            @XmlElement(name = "create_engineer", type = Dowhile.CreateEngineer.class),
            @XmlElement(name = "create_pilot", type = Dowhile.CreatePilot.class),
            @XmlElement(name = "cutscene_event", type = Dowhile.CutsceneEvent.class),
            @XmlElement(name = "debug_text", type = Dowhile.DebugText.class),
            @XmlElement(name = "deplete_yield", type = Dowhile.DepleteYield.class),
            @XmlElement(name = "get_resource_gatherrate", type = Dowhile.GetResourceGatherrate.class),
            @XmlElement(name = "destroy_object", type = Dowhile.DestroyObject.class),
            @XmlElement(name = "destroy_group", type = Dowhile.DestroyGroup.class),
            @XmlElement(name = "restore_object", type = Dowhile.RestoreObject.class),
            @XmlElement(name = "repair_object", type = Dowhile.RepairObject.class),
            @XmlElement(name = "repair_component", type = Dowhile.RepairComponent.class),
            @XmlElement(name = "disable_collisions_between", type = Dowhile.DisableCollisionsBetween.class),
            @XmlElement(name = "dock", type = Dowhile.Dock.class),
            @XmlElement(name = "dock_drone", type = Dowhile.DockDrone.class),
            @XmlElement(name = "drop_cargo", type = Dowhile.DropCargo.class),
            @XmlElement(name = "drop_illegal_cargo", type = Dowhile.DropIllegalCargo.class),
            @XmlElement(name = "drop_illegal_inventory", type = Dowhile.DropIllegalInventory.class),
            @XmlElement(name = "drop_inventory", type = Dowhile.DropInventory.class),
            @XmlElement(name = "eject_npcs", type = Dowhile.EjectNpcs.class),
            @XmlElement(name = "enable_collisions_between", type = Dowhile.EnableCollisionsBetween.class),
            @XmlElement(name = "equip_weapon", type = Dowhile.EquipWeapon.class),
            @XmlElement(name = "find_asteroid_in_region", type = Dowhile.FindAsteroidInRegion.class),
            @XmlElement(name = "find_buy_offer", type = Dowhile.FindBuyOffer.class),
            @XmlElement(name = "find_closest_navmesh_object", type = Dowhile.FindClosestNavmeshObject.class),
            @XmlElement(name = "find_closest_region", type = Dowhile.FindClosestRegion.class),
            @XmlElement(name = "find_closest_resource", type = Dowhile.FindClosestResource.class),
            @XmlElement(name = "find_closest_station_part", type = Dowhile.FindClosestStationPart.class),
            @XmlElement(name = "find_cluster", type = Dowhile.FindCluster.class),
            @XmlElement(name = "find_dock_location", type = Dowhile.FindDockLocation.class),
            @XmlElement(name = "find_dockingbay_for_trade", type = Dowhile.FindDockingbayForTrade.class),
            @XmlElement(name = "find_gravidar_contact", type = Dowhile.FindGravidarContact.class),
            @XmlElement(name = "find_infopoint_location", type = Dowhile.FindInfopointLocation.class),
            @XmlElement(name = "find_object_component", type = Dowhile.FindObjectComponent.class),
            @XmlElement(name = "find_resource", type = Dowhile.FindResource.class),
            @XmlElement(name = "check_object", type = Dowhile.CheckObject.class),
            @XmlElement(name = "find_pos_in_mass_traffic_at_time", type = Dowhile.FindPosInMassTrafficAtTime.class),
            @XmlElement(name = "find_random_pos_in_mass_traffic", type = Dowhile.FindRandomPosInMassTraffic.class),
            @XmlElement(name = "find_summarised_adsign", type = Dowhile.FindSummarisedAdsign.class),
            @XmlElement(name = "find_summarised_efficiencyupgrade", type = Dowhile.FindSummarisedEfficiencyupgrade.class),
            @XmlElement(name = "find_summarised_flakcontroller", type = Dowhile.FindSummarisedFlakcontroller.class),
            @XmlElement(name = "find_summarised_shield", type = Dowhile.FindSummarisedShield.class),
            @XmlElement(name = "find_summarised_surfacedestructible", type = Dowhile.FindSummarisedSurfacedestructible.class),
            @XmlElement(name = "find_summarised_turret", type = Dowhile.FindSummarisedTurret.class),
            @XmlElement(name = "find_object", type = Dowhile.FindObject.class),
            @XmlElement(name = "find_sector", type = Dowhile.FindSector.class),
            @XmlElement(name = "find_sell_offer", type = Dowhile.FindSellOffer.class),
            @XmlElement(name = "find_ship", type = Dowhile.FindShip.class),
            @XmlElement(name = "find_station", type = Dowhile.FindStation.class),
            @XmlElement(name = "find_tradeoffer_parking_slot", type = Dowhile.FindTradeofferParkingSlot.class),
            @XmlElement(name = "find_zone", type = Dowhile.FindZone.class),
            @XmlElement(name = "fire_turret", type = Dowhile.FireTurret.class),
            @XmlElement(name = "get_attackstrength", type = Dowhile.GetAttackstrength.class),
            @XmlElement(name = "get_character_definition", type = Dowhile.GetCharacterDefinition.class),
            @XmlElement(name = "get_docking_approach_pos", type = Dowhile.GetDockingApproachPos.class),
            @XmlElement(name = "get_gate_approach_pos", type = Dowhile.GetGateApproachPos.class),
            @XmlElement(name = "get_global_path", type = Dowhile.GetGlobalPath.class),
            @XmlElement(name = "get_jump_path", type = Dowhile.GetJumpPath.class),
            @XmlElement(name = "get_closest_highway_offset", type = Dowhile.GetClosestHighwayOffset.class),
            @XmlElement(name = "get_closest_jumpbeacon", type = Dowhile.GetClosestJumpbeacon.class),
            @XmlElement(name = "get_safe_pos", type = Dowhile.GetSafePos.class),
            @XmlElement(name = "get_ship_definition", type = Dowhile.GetShipDefinition.class),
            @XmlElement(name = "get_target_points", type = Dowhile.GetTargetPoints.class),
            @XmlElement(name = "get_text_ids_in_range", type = Dowhile.GetTextIdsInRange.class),
            @XmlElement(name = "get_trade_parking_pos", type = Dowhile.GetTradeParkingPos.class),
            @XmlElement(name = "get_zone_exit_pos", type = Dowhile.GetZoneExitPos.class),
            @XmlElement(name = "precache_hint", type = Dowhile.PrecacheHint.class),
            @XmlElement(name = "is_in_quadrant", type = Dowhile.IsInQuadrant.class),
            @XmlElement(name = "join_formation", type = Dowhile.JoinFormation.class),
            @XmlElement(name = "launch_drone", type = Dowhile.LaunchDrone.class),
            @XmlElement(name = "launch_masstraffic_drone", type = Dowhile.LaunchMasstrafficDrone.class),
            @XmlElement(name = "launch_war_drones", type = Dowhile.LaunchWarDrones.class),
            @XmlElement(name = "launch_repair_drones", type = Dowhile.LaunchRepairDrones.class),
            @XmlElement(name = "leave_formation", type = Dowhile.LeaveFormation.class),
            @XmlElement(name = "open_conversation_menu", type = Dowhile.OpenConversationMenu.class),
            @XmlElement(name = "open_dockingbay_doors", type = Dowhile.OpenDockingbayDoors.class),
            @XmlElement(name = "pickup_target", type = Dowhile.PickupTarget.class),
            @XmlElement(name = "play_cutscene", type = Dowhile.PlayCutscene.class),
            @XmlElement(name = "remove_actor_account", type = Dowhile.RemoveActorAccount.class),
            @XmlElement(name = "remove_actor_from_room", type = Dowhile.RemoveActorFromRoom.class),
            @XmlElement(name = "remove_from_group", type = Dowhile.RemoveFromGroup.class),
            @XmlElement(name = "remove_from_player_squad", type = Dowhile.RemoveFromPlayerSquad.class),
            @XmlElement(name = "remove_object_commander", type = Dowhile.RemoveObjectCommander.class),
            @XmlElement(name = "remove_representative", type = Dowhile.RemoveRepresentative.class),
            @XmlElement(name = "remove_value", type = Dowhile.RemoveValue.class),
            @XmlElement(name = "remove_weapon", type = Dowhile.RemoveWeapon.class),
            @XmlElement(name = "check_weapon_active", type = Dowhile.CheckWeaponActive.class),
            @XmlElement(name = "check_weapon_installed", type = Dowhile.CheckWeaponInstalled.class),
            @XmlElement(name = "request_docking", type = Dowhile.RequestDocking.class),
            @XmlElement(name = "add_mass_traffic_quota", type = Dowhile.AddMassTrafficQuota.class),
            @XmlElement(name = "stop_mass_traffic_quota", type = Dowhile.StopMassTrafficQuota.class),
            @XmlElement(name = "get_macros_in_mass_traffic", type = Dowhile.GetMacrosInMassTraffic.class),
            @XmlElement(name = "request_mass_traffic_ship", type = Dowhile.RequestMassTrafficShip.class),
            @XmlElement(name = "request_undocking", type = Dowhile.RequestUndocking.class),
            @XmlElement(name = "request_boarding_support", type = Dowhile.RequestBoardingSupport.class),
            @XmlElement(name = "notify_boarding_support_failed", type = Dowhile.NotifyBoardingSupportFailed.class),
            @XmlElement(name = "notify_boarding_support_succeeded", type = Dowhile.NotifyBoardingSupportSucceeded.class),
            @XmlElement(name = "request_repair", type = Dowhile.RequestRepair.class),
            @XmlElement(name = "reset_relation_boost", type = Dowhile.ResetRelationBoost.class),
            @XmlElement(name = "reset_tolerance_boost", type = Dowhile.ResetToleranceBoost.class),
            @XmlElement(name = "reset_turret", type = Dowhile.ResetTurret.class),
            @XmlElement(name = "resize_list", type = Dowhile.ResizeList.class),
            @XmlElement(name = "reward_player", type = Dowhile.RewardPlayer.class),
            @XmlElement(name = "set_actor_account", type = Dowhile.SetActorAccount.class),
            @XmlElement(name = "set_actor_max_budget", type = Dowhile.SetActorMaxBudget.class),
            @XmlElement(name = "set_actor_min_budget", type = Dowhile.SetActorMinBudget.class),
            @XmlElement(name = "transfer_money", type = Dowhile.TransferMoney.class),
            @XmlElement(name = "set_buildanchor", type = Dowhile.SetBuildanchor.class),
            @XmlElement(name = "set_cockpit_tint", type = Dowhile.SetCockpitTint.class),
            @XmlElement(name = "set_comm_handler", type = Dowhile.SetCommHandler.class),
            @XmlElement(name = "set_object_active", type = Dowhile.SetObjectActive.class),
            @XmlElement(name = "set_object_capturable", type = Dowhile.SetObjectCapturable.class),
            @XmlElement(name = "set_object_radar_visible", type = Dowhile.SetObjectRadarVisible.class),
            @XmlElement(name = "set_object_commander", type = Dowhile.SetObjectCommander.class),
            @XmlElement(name = "add_drone", type = Dowhile.AddDrone.class),
            @XmlElement(name = "set_object_min_hull", type = Dowhile.SetObjectMinHull.class),
            @XmlElement(name = "set_object_min_shield", type = Dowhile.SetObjectMinShield.class),
            @XmlElement(name = "set_object_hull", type = Dowhile.SetObjectHull.class),
            @XmlElement(name = "set_object_relation_behaviour", type = Dowhile.SetObjectRelationBehaviour.class),
            @XmlElement(name = "set_object_shield", type = Dowhile.SetObjectShield.class),
            @XmlElement(name = "set_object_max_hull", type = Dowhile.SetObjectMaxHull.class),
            @XmlElement(name = "set_summarised_adsign_state", type = Dowhile.SetSummarisedAdsignState.class),
            @XmlElement(name = "set_summarised_efficiencyupgrade_state", type = Dowhile.SetSummarisedEfficiencyupgradeState.class),
            @XmlElement(name = "set_summarised_flakcontroller_state", type = Dowhile.SetSummarisedFlakcontrollerState.class),
            @XmlElement(name = "set_summarised_shield_state", type = Dowhile.SetSummarisedShieldState.class),
            @XmlElement(name = "set_summarised_surfacedestructible_state", type = Dowhile.SetSummarisedSurfacedestructibleState.class),
            @XmlElement(name = "set_summarised_turret_state", type = Dowhile.SetSummarisedTurretState.class),
            @XmlElement(name = "set_object_scanned", type = Dowhile.SetObjectScanned.class),
            @XmlElement(name = "set_object_hacked", type = Dowhile.SetObjectHacked.class),
            @XmlElement(name = "set_room_locked", type = Dowhile.SetRoomLocked.class),
            @XmlElement(name = "set_allow_drop", type = Dowhile.SetAllowDrop.class),
            @XmlElement(name = "set_drop_object", type = Dowhile.SetDropObject.class),
            @XmlElement(name = "spawn_drop", type = Dowhile.SpawnDrop.class),
            @XmlElement(name = "set_entity_type", type = Dowhile.SetEntityType.class),
            @XmlElement(name = "set_faction_relation", type = Dowhile.SetFactionRelation.class),
            @XmlElement(name = "set_mass_traffic_object_persistence", type = Dowhile.SetMassTrafficObjectPersistence.class),
            @XmlElement(name = "set_region_object_persistence", type = Dowhile.SetRegionObjectPersistence.class),
            @XmlElement(name = "end_mass_traffic", type = Dowhile.EndMassTraffic.class),
            @XmlElement(name = "set_order_moveto", type = Dowhile.SetOrderMoveto.class),
            @XmlElement(name = "set_order_pickup_target", type = Dowhile.SetOrderPickupTarget.class),
            @XmlElement(name = "set_owner", type = Dowhile.SetOwner.class),
            @XmlElement(name = "set_cover_owner", type = Dowhile.SetCoverOwner.class),
            @XmlElement(name = "set_player_activity", type = Dowhile.SetPlayerActivity.class),
            @XmlElement(name = "set_player_entity_position", type = Dowhile.SetPlayerEntityPosition.class),
            @XmlElement(name = "set_relation_boost", type = Dowhile.SetRelationBoost.class),
            @XmlElement(name = "set_representative", type = Dowhile.SetRepresentative.class),
            @XmlElement(name = "set_hack_target", type = Dowhile.SetHackTarget.class),
            @XmlElement(name = "set_scan_target", type = Dowhile.SetScanTarget.class),
            @XmlElement(name = "set_skill", type = Dowhile.SetSkill.class),
            @XmlElement(name = "set_skills_visible", type = Dowhile.SetSkillsVisible.class),
            @XmlElement(name = "set_tolerance_boost", type = Dowhile.SetToleranceBoost.class),
            @XmlElement(name = "set_allowed_weapon_systems", type = Dowhile.SetAllowedWeaponSystems.class),
            @XmlElement(name = "set_trade_restrictions", type = Dowhile.SetTradeRestrictions.class),
            @XmlElement(name = "set_turret_targets", type = Dowhile.SetTurretTargets.class),
            @XmlElement(name = "set_value", type = Dowhile.SetValue.class),
            @XmlElement(name = "setup_conversation_minigame", type = Dowhile.SetupConversationMinigame.class),
            @XmlElement(name = "show_help", type = Dowhile.ShowHelp.class),
            @XmlElement(name = "remove_help", type = Dowhile.RemoveHelp.class),
            @XmlElement(name = "save_ai_action_state", type = Dowhile.SaveAiActionState.class),
            @XmlElement(name = "show_input_help", type = Dowhile.ShowInputHelp.class),
            @XmlElement(name = "show_notification", type = Dowhile.ShowNotification.class),
            @XmlElement(name = "signal_objects", type = Dowhile.SignalObjects.class),
            @XmlElement(name = "speak", type = Dowhile.Speak.class),
            @XmlElement(name = "start_boost", type = Dowhile.StartBoost.class),
            @XmlElement(name = "start_conversation", type = Dowhile.StartConversation.class),
            @XmlElement(name = "cancel_conversation", type = Dowhile.CancelConversation.class),
            @XmlElement(name = "start_long_range_scan", type = Dowhile.StartLongRangeScan.class),
            @XmlElement(name = "stop_long_range_scan", type = Dowhile.StopLongRangeScan.class),
            @XmlElement(name = "start_script", type = Dowhile.StartScript.class),
            @XmlElement(name = "stop_boost", type = Dowhile.StopBoost.class),
            @XmlElement(name = "stop_cutscene", type = Dowhile.StopCutscene.class),
            @XmlElement(name = "stop_firing_at_target", type = Dowhile.StopFiringAtTarget.class),
            @XmlElement(name = "substitute_text", type = Dowhile.SubstituteText.class),
            @XmlElement(name = "trigger_autosave", type = Dowhile.TriggerAutosave.class),
            @XmlElement(name = "trigger_boarding", type = Dowhile.TriggerBoarding.class),
            @XmlElement(name = "undock", type = Dowhile.Undock.class),
            @XmlElement(name = "unlock_achievement", type = Dowhile.UnlockAchievement.class),
            @XmlElement(name = "indicate_achievement_progress", type = Dowhile.IndicateAchievementProgress.class),
            @XmlElement(name = "update_trade", type = Dowhile.UpdateTrade.class),
            @XmlElement(name = "upgrade_object_by_macro", type = Dowhile.UpgradeObjectByMacro.class),
            @XmlElement(name = "upgrade_object_by_tag", type = Dowhile.UpgradeObjectByTag.class),
            @XmlElement(name = "build_object_upgrades", type = Dowhile.BuildObjectUpgrades.class),
            @XmlElement(name = "build_component_upgrades", type = Dowhile.BuildComponentUpgrades.class),
            @XmlElement(name = "get_build_slot_price", type = Dowhile.GetBuildSlotPrice.class),
            @XmlElement(name = "get_pilot_dockslot", type = Dowhile.GetPilotDockslot.class),
            @XmlElement(name = "warp", type = Dowhile.Warp.class),
            @XmlElement(name = "sort_trades", type = Dowhile.SortTrades.class),
            @XmlElement(name = "add_experience_progress", type = Dowhile.AddExperienceProgress.class),
            @XmlElement(name = "set_experience_progress", type = Dowhile.SetExperienceProgress.class),
            @XmlElement(name = "add_effect", type = Dowhile.AddEffect.class),
            @XmlElement(name = "remove_effect", type = Dowhile.RemoveEffect.class),
            @XmlElement(name = "play_sound", type = Dowhile.PlaySound.class),
            @XmlElement(name = "play_music", type = Dowhile.PlayMusic.class),
            @XmlElement(name = "stop_music", type = Dowhile.StopMusic.class),
            @XmlElement(name = "quit_gameover", type = Dowhile.QuitGameover.class),
            @XmlElement(name = "quit_to_desktop", type = Dowhile.QuitToDesktop.class),
            @XmlElement(name = "quit_to_startmenu", type = Dowhile.QuitToStartmenu.class),
            @XmlElement(name = "cancel_cue", type = Dowhile.CancelCue.class),
            @XmlElement(name = "complete_cue", type = Dowhile.CompleteCue.class),
            @XmlElement(name = "create_cue_actor", type = Dowhile.CreateCueActor.class),
            @XmlElement(name = "create_mission", type = Dowhile.CreateMission.class),
            @XmlElement(name = "create_offer", type = Dowhile.CreateOffer.class),
            @XmlElement(name = "create_platform_actor", type = Dowhile.CreatePlatformActor.class),
            @XmlElement(name = "create_presentation_cluster", type = Dowhile.CreatePresentationCluster.class),
            @XmlElement(name = "create_representative_actor", type = Dowhile.CreateRepresentativeActor.class),
            @XmlElement(name = "create_target_points", type = Dowhile.CreateTargetPoints.class),
            @XmlElement(name = "find_mission_offer_location", type = Dowhile.FindMissionOfferLocation.class),
            @XmlElement(name = "force_cue", type = Dowhile.ForceCue.class),
            @XmlElement(name = "include_actions", type = Dowhile.IncludeActions.class),
            @XmlElement(name = "populate_platforms", type = Dowhile.PopulatePlatforms.class),
            @XmlElement(name = "remove_all_cue_actors", type = Dowhile.RemoveAllCueActors.class),
            @XmlElement(name = "remove_cue_actor", type = Dowhile.RemoveCueActor.class),
            @XmlElement(name = "remove_mission", type = Dowhile.RemoveMission.class),
            @XmlElement(name = "remove_offer", type = Dowhile.RemoveOffer.class),
            @XmlElement(name = "remove_target_points", type = Dowhile.RemoveTargetPoints.class),
            @XmlElement(name = "reset_cue", type = Dowhile.ResetCue.class),
            @XmlElement(name = "add_holomap", type = Dowhile.AddHolomap.class),
            @XmlElement(name = "remove_holomap", type = Dowhile.RemoveHolomap.class),
            @XmlElement(name = "set_holomap_target", type = Dowhile.SetHolomapTarget.class),
            @XmlElement(name = "set_job_active", type = Dowhile.SetJobActive.class),
            @XmlElement(name = "set_mission_actor", type = Dowhile.SetMissionActor.class),
            @XmlElement(name = "set_objective", type = Dowhile.SetObjective.class),
            @XmlElement(name = "update_objective_progress", type = Dowhile.UpdateObjectiveProgress.class),
            @XmlElement(name = "update_mission", type = Dowhile.UpdateMission.class),
            @XmlElement(name = "update_objective_endtime", type = Dowhile.UpdateObjectiveEndtime.class),
            @XmlElement(name = "update_offer", type = Dowhile.UpdateOffer.class),
            @XmlElement(name = "enter_playership", type = Dowhile.EnterPlayership.class),
            @XmlElement(name = "leave_cockpit", type = Dowhile.LeaveCockpit.class),
            @XmlElement(name = "force_player_speed", type = Dowhile.ForcePlayerSpeed.class),
            @XmlElement(name = "signal_cue", type = Dowhile.SignalCue.class),
            @XmlElement(name = "signal_cue_instantly", type = Dowhile.SignalCueInstantly.class)
        })
        protected List<Object> doAllOrDoAnyOrDoIf;
        @XmlAttribute(name = "comment")
        protected String comment;

        /**
         * Gets the value of the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the doAllOrDoAnyOrDoIf property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getDoAllOrDoAnyOrDoIf().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Doall }
         * {@link Doany }
         * {@link Doif }
         * {@link Doelseif }
         * {@link Doelse }
         * {@link Dowhile }
         * {@link Dowhile.AbortHack }
         * {@link Dowhile.AbortScan }
         * {@link Dowhile.AbortScripts }
         * {@link Dowhile.ActivateBattlestate }
         * {@link Dowhile.ActivateFlaks }
         * {@link Dowhile.ActivateWeapon }
         * {@link Dowhile.AddActorToPlatform }
         * {@link Dowhile.AddActorToPlayership }
         * {@link Dowhile.AddCopilot }
         * {@link Dowhile.CreateBuildPlan }
         * {@link Dowhile.AddBuildPlan }
         * {@link Dowhile.AddAmmo }
         * {@link Dowhile.RemoveAmmo }
         * {@link Dowhile.DepleteAmmo }
         * {@link Dowhile.EvaluateAmmoStorage }
         * {@link Dowhile.AddCargo }
         * {@link Dowhile.RemoveCargo }
         * {@link Dowhile.AddCommission }
         * {@link Dowhile.AddPlayerCommission }
         * {@link Dowhile.RemoveCommission }
         * {@link Dowhile.RemovePlayerCommission }
         * {@link Dowhile.AddDefaultProductionWares }
         * {@link Dowhile.AddSkill }
         * {@link Dowhile.AddTradeware }
         * {@link Dowhile.RemoveTradeware }
         * {@link Dowhile.AddDiscount }
         * {@link Dowhile.AddPlayerDiscount }
         * {@link Dowhile.RemoveDiscount }
         * {@link Dowhile.RemovePlayerDiscount }
         * {@link Dowhile.AddProductionSalesreps }
         * {@link Dowhile.AddWatchdogUnitsToMasstraffic }
         * {@link Dowhile.GetNextBonusUnlocktime }
         * {@link Dowhile.GetProductionSpecialistTypes }
         * {@link Dowhile.SetNextBonusUnlocktime }
         * {@link Dowhile.AddBuyOrder }
         * {@link Dowhile.AddSellOrder }
         * {@link Dowhile.RemoveTradeOrder }
         * {@link Dowhile.GetTradeFromShoppinglist }
         * {@link Dowhile.GetTradeofferLocations }
         * {@link Dowhile.AddConversationView }
         * {@link Dowhile.AddFactionRelation }
         * {@link Dowhile.GetFactionsByRelation }
         * {@link Dowhile.SetFactionKnown }
         * {@link Dowhile.SetKnown }
         * {@link Dowhile.AddInventory }
         * {@link Dowhile.RemoveInventory }
         * {@link Dowhile.AddLicence }
         * {@link Dowhile.RemoveLicence }
         * {@link Dowhile.AddNpcLine }
         * {@link Dowhile.AddPlayerChoice }
         * {@link Dowhile.AddPlayerChoiceSub }
         * {@link Dowhile.AddPlayerChoiceSubconv }
         * {@link Dowhile.AddPlayerChoiceReturn }
         * {@link Dowhile.SetConversationReturnSection }
         * {@link Dowhile.AddRelationBoost }
         * {@link Dowhile.AddToGroup }
         * {@link Dowhile.AddToPlayerSquad }
         * {@link Dowhile.AddToleranceBoost }
         * {@link Dowhile.AimTurret }
         * {@link Dowhile.AddUnits }
         * {@link Dowhile.RemoveUnits }
         * {@link Dowhile.RequestUnits }
         * {@link Dowhile.ReturnUnits }
         * {@link Dowhile.AllowConversationEscape }
         * {@link Dowhile.AppendToList }
         * {@link Dowhile.ApplyAttackstrength }
         * {@link Dowhile.Assert }
         * {@link Dowhile.AssignPilot }
         * {@link Dowhile.AssignArchitect }
         * {@link Dowhile.AssignBoardingCommander }
         * {@link Dowhile.AssignDefenceManager }
         * {@link Dowhile.AssignEngineer }
         * {@link Dowhile.AssignTradeManager }
         * {@link Dowhile.AssignControlEntity }
         * {@link Dowhile.DismissControlEntity }
         * {@link Dowhile.GetControlEntities }
         * {@link Dowhile.AttachObjectToTarget }
         * {@link Dowhile.Break }
         * {@link Dowhile.BreakFormation }
         * {@link Dowhile.CeaseFire }
         * {@link Dowhile.ChangeRelationOnAttack }
         * {@link Dowhile.ChangeRelationOnKill }
         * {@link Dowhile.CheckLineOfSight }
         * {@link Dowhile.CheckIsInSecurityArea }
         * {@link Dowhile.CheckIsAreaObstructed }
         * {@link Dowhile.StartObservation }
         * {@link Dowhile.StopObservation }
         * {@link Dowhile.StartAttack }
         * {@link Dowhile.StopAttack }
         * {@link Dowhile.ReportIllegalActivity }
         * {@link Dowhile.ClaimShip }
         * {@link Dowhile.ClearCollisionFilter }
         * {@link Dowhile.ClearGroup }
         * {@link Dowhile.ClearList }
         * {@link Dowhile.CloseDockingbayDoors }
         * {@link Dowhile.GetBuildingPosition }
         * {@link Dowhile.ConnectToBuildLocation }
         * {@link Dowhile.ConnectToTradeLocation }
         * {@link Dowhile.DisconnectFromTradeLocation }
         * {@link Dowhile.ConstructShip }
         * {@link Dowhile.ConstructStation }
         * {@link Dowhile.SetBuildmoduleMacro }
         * {@link Dowhile.ClearBuildmodule }
         * {@link Dowhile.Continue }
         * {@link Dowhile.CreateAiUnit }
         * {@link Dowhile.CreateGroup }
         * {@link Dowhile.CreateList }
         * {@link Dowhile.CreateFormation }
         * {@link Dowhile.CreateObject }
         * {@link Dowhile.CreateOrientation }
         * {@link Dowhile.CreateRandomPositionInBoundingbox }
         * {@link Dowhile.CreateRandomPositionOutsideBoundingbox }
         * {@link Dowhile.CreateTradeOffer }
         * {@link Dowhile.AddTradeOffer }
         * {@link Dowhile.RemoveTradeOffer }
         * {@link Dowhile.CreatePositionOutsideBoundingbox }
         * {@link Dowhile.FindObjectSurface }
         * {@link Dowhile.CreatePosition }
         * {@link Dowhile.TransformPosition }
         * {@link Dowhile.CreateRotation }
         * {@link Dowhile.CreateShip }
         * {@link Dowhile.CreateStation }
         * {@link Dowhile.CreateDefenceOfficer }
         * {@link Dowhile.CreateEngineer }
         * {@link Dowhile.CreatePilot }
         * {@link Dowhile.CutsceneEvent }
         * {@link Dowhile.DebugText }
         * {@link Dowhile.DepleteYield }
         * {@link Dowhile.GetResourceGatherrate }
         * {@link Dowhile.DestroyObject }
         * {@link Dowhile.DestroyGroup }
         * {@link Dowhile.RestoreObject }
         * {@link Dowhile.RepairObject }
         * {@link Dowhile.RepairComponent }
         * {@link Dowhile.DisableCollisionsBetween }
         * {@link Dowhile.Dock }
         * {@link Dowhile.DockDrone }
         * {@link Dowhile.DropCargo }
         * {@link Dowhile.DropIllegalCargo }
         * {@link Dowhile.DropIllegalInventory }
         * {@link Dowhile.DropInventory }
         * {@link Dowhile.EjectNpcs }
         * {@link Dowhile.EnableCollisionsBetween }
         * {@link Dowhile.EquipWeapon }
         * {@link Dowhile.FindAsteroidInRegion }
         * {@link Dowhile.FindBuyOffer }
         * {@link Dowhile.FindClosestNavmeshObject }
         * {@link Dowhile.FindClosestRegion }
         * {@link Dowhile.FindClosestResource }
         * {@link Dowhile.FindClosestStationPart }
         * {@link Dowhile.FindCluster }
         * {@link Dowhile.FindDockLocation }
         * {@link Dowhile.FindDockingbayForTrade }
         * {@link Dowhile.FindGravidarContact }
         * {@link Dowhile.FindInfopointLocation }
         * {@link Dowhile.FindObjectComponent }
         * {@link Dowhile.FindResource }
         * {@link Dowhile.CheckObject }
         * {@link Dowhile.FindPosInMassTrafficAtTime }
         * {@link Dowhile.FindRandomPosInMassTraffic }
         * {@link Dowhile.FindSummarisedAdsign }
         * {@link Dowhile.FindSummarisedEfficiencyupgrade }
         * {@link Dowhile.FindSummarisedFlakcontroller }
         * {@link Dowhile.FindSummarisedShield }
         * {@link Dowhile.FindSummarisedSurfacedestructible }
         * {@link Dowhile.FindSummarisedTurret }
         * {@link Dowhile.FindObject }
         * {@link Dowhile.FindSector }
         * {@link Dowhile.FindSellOffer }
         * {@link Dowhile.FindShip }
         * {@link Dowhile.FindStation }
         * {@link Dowhile.FindTradeofferParkingSlot }
         * {@link Dowhile.FindZone }
         * {@link Dowhile.FireTurret }
         * {@link Dowhile.GetAttackstrength }
         * {@link Dowhile.GetCharacterDefinition }
         * {@link Dowhile.GetDockingApproachPos }
         * {@link Dowhile.GetGateApproachPos }
         * {@link Dowhile.GetGlobalPath }
         * {@link Dowhile.GetJumpPath }
         * {@link Dowhile.GetClosestHighwayOffset }
         * {@link Dowhile.GetClosestJumpbeacon }
         * {@link Dowhile.GetSafePos }
         * {@link Dowhile.GetShipDefinition }
         * {@link Dowhile.GetTargetPoints }
         * {@link Dowhile.GetTextIdsInRange }
         * {@link Dowhile.GetTradeParkingPos }
         * {@link Dowhile.GetZoneExitPos }
         * {@link Dowhile.PrecacheHint }
         * {@link Dowhile.IsInQuadrant }
         * {@link Dowhile.JoinFormation }
         * {@link Dowhile.LaunchDrone }
         * {@link Dowhile.LaunchMasstrafficDrone }
         * {@link Dowhile.LaunchWarDrones }
         * {@link Dowhile.LaunchRepairDrones }
         * {@link Dowhile.LeaveFormation }
         * {@link Dowhile.OpenConversationMenu }
         * {@link Dowhile.OpenDockingbayDoors }
         * {@link Dowhile.PickupTarget }
         * {@link Dowhile.PlayCutscene }
         * {@link Dowhile.RemoveActorAccount }
         * {@link Dowhile.RemoveActorFromRoom }
         * {@link Dowhile.RemoveFromGroup }
         * {@link Dowhile.RemoveFromPlayerSquad }
         * {@link Dowhile.RemoveObjectCommander }
         * {@link Dowhile.RemoveRepresentative }
         * {@link Dowhile.RemoveValue }
         * {@link Dowhile.RemoveWeapon }
         * {@link Dowhile.CheckWeaponActive }
         * {@link Dowhile.CheckWeaponInstalled }
         * {@link Dowhile.RequestDocking }
         * {@link Dowhile.AddMassTrafficQuota }
         * {@link Dowhile.StopMassTrafficQuota }
         * {@link Dowhile.GetMacrosInMassTraffic }
         * {@link Dowhile.RequestMassTrafficShip }
         * {@link Dowhile.RequestUndocking }
         * {@link Dowhile.RequestBoardingSupport }
         * {@link Dowhile.NotifyBoardingSupportFailed }
         * {@link Dowhile.NotifyBoardingSupportSucceeded }
         * {@link Dowhile.RequestRepair }
         * {@link Dowhile.ResetRelationBoost }
         * {@link Dowhile.ResetToleranceBoost }
         * {@link Dowhile.ResetTurret }
         * {@link Dowhile.ResizeList }
         * {@link Dowhile.RewardPlayer }
         * {@link Dowhile.SetActorAccount }
         * {@link Dowhile.SetActorMaxBudget }
         * {@link Dowhile.SetActorMinBudget }
         * {@link Dowhile.TransferMoney }
         * {@link Dowhile.SetBuildanchor }
         * {@link Dowhile.SetCockpitTint }
         * {@link Dowhile.SetCommHandler }
         * {@link Dowhile.SetObjectActive }
         * {@link Dowhile.SetObjectCapturable }
         * {@link Dowhile.SetObjectRadarVisible }
         * {@link Dowhile.SetObjectCommander }
         * {@link Dowhile.AddDrone }
         * {@link Dowhile.SetObjectMinHull }
         * {@link Dowhile.SetObjectMinShield }
         * {@link Dowhile.SetObjectHull }
         * {@link Dowhile.SetObjectRelationBehaviour }
         * {@link Dowhile.SetObjectShield }
         * {@link Dowhile.SetObjectMaxHull }
         * {@link Dowhile.SetSummarisedAdsignState }
         * {@link Dowhile.SetSummarisedEfficiencyupgradeState }
         * {@link Dowhile.SetSummarisedFlakcontrollerState }
         * {@link Dowhile.SetSummarisedShieldState }
         * {@link Dowhile.SetSummarisedSurfacedestructibleState }
         * {@link Dowhile.SetSummarisedTurretState }
         * {@link Dowhile.SetObjectScanned }
         * {@link Dowhile.SetObjectHacked }
         * {@link Dowhile.SetRoomLocked }
         * {@link Dowhile.SetAllowDrop }
         * {@link Dowhile.SetDropObject }
         * {@link Dowhile.SpawnDrop }
         * {@link Dowhile.SetEntityType }
         * {@link Dowhile.SetFactionRelation }
         * {@link Dowhile.SetMassTrafficObjectPersistence }
         * {@link Dowhile.SetRegionObjectPersistence }
         * {@link Dowhile.EndMassTraffic }
         * {@link Dowhile.SetOrderMoveto }
         * {@link Dowhile.SetOrderPickupTarget }
         * {@link Dowhile.SetOwner }
         * {@link Dowhile.SetCoverOwner }
         * {@link Dowhile.SetPlayerActivity }
         * {@link Dowhile.SetPlayerEntityPosition }
         * {@link Dowhile.SetRelationBoost }
         * {@link Dowhile.SetRepresentative }
         * {@link Dowhile.SetHackTarget }
         * {@link Dowhile.SetScanTarget }
         * {@link Dowhile.SetSkill }
         * {@link Dowhile.SetSkillsVisible }
         * {@link Dowhile.SetToleranceBoost }
         * {@link Dowhile.SetAllowedWeaponSystems }
         * {@link Dowhile.SetTradeRestrictions }
         * {@link Dowhile.SetTurretTargets }
         * {@link Dowhile.SetValue }
         * {@link Dowhile.SetupConversationMinigame }
         * {@link Dowhile.ShowHelp }
         * {@link Dowhile.RemoveHelp }
         * {@link Dowhile.SaveAiActionState }
         * {@link Dowhile.ShowInputHelp }
         * {@link Dowhile.ShowNotification }
         * {@link Dowhile.SignalObjects }
         * {@link Dowhile.Speak }
         * {@link Dowhile.StartBoost }
         * {@link Dowhile.StartConversation }
         * {@link Dowhile.CancelConversation }
         * {@link Dowhile.StartLongRangeScan }
         * {@link Dowhile.StopLongRangeScan }
         * {@link Dowhile.StartScript }
         * {@link Dowhile.StopBoost }
         * {@link Dowhile.StopCutscene }
         * {@link Dowhile.StopFiringAtTarget }
         * {@link Dowhile.SubstituteText }
         * {@link Dowhile.TriggerAutosave }
         * {@link Dowhile.TriggerBoarding }
         * {@link Dowhile.Undock }
         * {@link Dowhile.UnlockAchievement }
         * {@link Dowhile.IndicateAchievementProgress }
         * {@link Dowhile.UpdateTrade }
         * {@link Dowhile.UpgradeObjectByMacro }
         * {@link Dowhile.UpgradeObjectByTag }
         * {@link Dowhile.BuildObjectUpgrades }
         * {@link Dowhile.BuildComponentUpgrades }
         * {@link Dowhile.GetBuildSlotPrice }
         * {@link Dowhile.GetPilotDockslot }
         * {@link Dowhile.Warp }
         * {@link Dowhile.SortTrades }
         * {@link Dowhile.AddExperienceProgress }
         * {@link Dowhile.SetExperienceProgress }
         * {@link Dowhile.AddEffect }
         * {@link Dowhile.RemoveEffect }
         * {@link Dowhile.PlaySound }
         * {@link Dowhile.PlayMusic }
         * {@link Dowhile.StopMusic }
         * {@link Dowhile.QuitGameover }
         * {@link Dowhile.QuitToDesktop }
         * {@link Dowhile.QuitToStartmenu }
         * {@link Dowhile.CancelCue }
         * {@link Dowhile.CompleteCue }
         * {@link Dowhile.CreateCueActor }
         * {@link Dowhile.CreateMission }
         * {@link Dowhile.CreateOffer }
         * {@link Dowhile.CreatePlatformActor }
         * {@link Dowhile.CreatePresentationCluster }
         * {@link Dowhile.CreateRepresentativeActor }
         * {@link Dowhile.CreateTargetPoints }
         * {@link Dowhile.FindMissionOfferLocation }
         * {@link Dowhile.ForceCue }
         * {@link Dowhile.IncludeActions }
         * {@link Dowhile.PopulatePlatforms }
         * {@link Dowhile.RemoveAllCueActors }
         * {@link Dowhile.RemoveCueActor }
         * {@link Dowhile.RemoveMission }
         * {@link Dowhile.RemoveOffer }
         * {@link Dowhile.RemoveTargetPoints }
         * {@link Dowhile.ResetCue }
         * {@link Dowhile.AddHolomap }
         * {@link Dowhile.RemoveHolomap }
         * {@link Dowhile.SetHolomapTarget }
         * {@link Dowhile.SetJobActive }
         * {@link Dowhile.SetMissionActor }
         * {@link Dowhile.SetObjective }
         * {@link Dowhile.UpdateObjectiveProgress }
         * {@link Dowhile.UpdateMission }
         * {@link Dowhile.UpdateObjectiveEndtime }
         * {@link Dowhile.UpdateOffer }
         * {@link Dowhile.EnterPlayership }
         * {@link Dowhile.LeaveCockpit }
         * {@link Dowhile.ForcePlayerSpeed }
         * {@link Dowhile.SignalCue }
         * {@link Dowhile.SignalCueInstantly }
         * 
         * 
         */
        public List<Object> getDoAllOrDoAnyOrDoIf() {
            if (doAllOrDoAnyOrDoIf == null) {
                doAllOrDoAnyOrDoIf = new ArrayList<Object>();
            }
            return this.doAllOrDoAnyOrDoIf;
        }

        /**
         * Gets the value of the comment property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getComment() {
            return comment;
        }

        /**
         * Sets the value of the comment property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setComment(String value) {
            this.comment = value;
        }

    }

}
