//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.28 at 11:19:24 PM CET 
//


package nl.games.xrebirth.generated.md;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *         Actions in sub-nodes will be performed only if the value matches.
 *         Can be followed by <do_elseif> and/or <do_else>.
 *       
 * 
 * <p>Java class for doif complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="doif">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{}actions"/>
 *       &lt;attGroup ref="{}conditionalaction"/>
 *       &lt;attGroup ref="{}action"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "doif", propOrder = {
    "doAllOrDoAnyOrDoIf"
})
public class Doif {

    @XmlElements({
        @XmlElement(name = "do_all", type = Doall.class),
        @XmlElement(name = "do_any", type = Doany.class),
        @XmlElement(name = "do_if", type = Doif.class),
        @XmlElement(name = "do_elseif", type = Doelseif.class),
        @XmlElement(name = "do_else", type = Doelse.class),
        @XmlElement(name = "do_while", type = Dowhile.class),
        @XmlElement(name = "abort_hack", type = Dowhile.AbortHack.class),
        @XmlElement(name = "abort_scan", type = Dowhile.AbortScan.class),
        @XmlElement(name = "abort_scripts", type = Dowhile.AbortScripts.class),
        @XmlElement(name = "activate_battlestate", type = Dowhile.ActivateBattlestate.class),
        @XmlElement(name = "activate_flaks", type = Dowhile.ActivateFlaks.class),
        @XmlElement(name = "activate_weapon", type = Dowhile.ActivateWeapon.class),
        @XmlElement(name = "add_actor_to_platform", type = Dowhile.AddActorToPlatform.class),
        @XmlElement(name = "add_actor_to_playership", type = Dowhile.AddActorToPlayership.class),
        @XmlElement(name = "add_copilot", type = Dowhile.AddCopilot.class),
        @XmlElement(name = "create_build_plan", type = Dowhile.CreateBuildPlan.class),
        @XmlElement(name = "add_build_plan", type = Dowhile.AddBuildPlan.class),
        @XmlElement(name = "add_ammo", type = Dowhile.AddAmmo.class),
        @XmlElement(name = "remove_ammo", type = Dowhile.RemoveAmmo.class),
        @XmlElement(name = "deplete_ammo", type = Dowhile.DepleteAmmo.class),
        @XmlElement(name = "evaluate_ammo_storage", type = Dowhile.EvaluateAmmoStorage.class),
        @XmlElement(name = "add_cargo", type = Dowhile.AddCargo.class),
        @XmlElement(name = "remove_cargo", type = Dowhile.RemoveCargo.class),
        @XmlElement(name = "add_commission", type = Dowhile.AddCommission.class),
        @XmlElement(name = "add_player_commission", type = Dowhile.AddPlayerCommission.class),
        @XmlElement(name = "remove_commission", type = Dowhile.RemoveCommission.class),
        @XmlElement(name = "remove_player_commission", type = Dowhile.RemovePlayerCommission.class),
        @XmlElement(name = "add_default_production_wares", type = Dowhile.AddDefaultProductionWares.class),
        @XmlElement(name = "add_skill", type = Dowhile.AddSkill.class),
        @XmlElement(name = "add_tradeware", type = Dowhile.AddTradeware.class),
        @XmlElement(name = "remove_tradeware", type = Dowhile.RemoveTradeware.class),
        @XmlElement(name = "add_discount", type = Dowhile.AddDiscount.class),
        @XmlElement(name = "add_player_discount", type = Dowhile.AddPlayerDiscount.class),
        @XmlElement(name = "remove_discount", type = Dowhile.RemoveDiscount.class),
        @XmlElement(name = "remove_player_discount", type = Dowhile.RemovePlayerDiscount.class),
        @XmlElement(name = "add_production_salesreps", type = Dowhile.AddProductionSalesreps.class),
        @XmlElement(name = "add_watchdog_units_to_masstraffic", type = Dowhile.AddWatchdogUnitsToMasstraffic.class),
        @XmlElement(name = "get_next_bonus_unlocktime", type = Dowhile.GetNextBonusUnlocktime.class),
        @XmlElement(name = "get_production_specialist_types", type = Dowhile.GetProductionSpecialistTypes.class),
        @XmlElement(name = "set_next_bonus_unlocktime", type = Dowhile.SetNextBonusUnlocktime.class),
        @XmlElement(name = "add_buy_order", type = Dowhile.AddBuyOrder.class),
        @XmlElement(name = "add_sell_order", type = Dowhile.AddSellOrder.class),
        @XmlElement(name = "remove_trade_order", type = Dowhile.RemoveTradeOrder.class),
        @XmlElement(name = "get_trade_from_shoppinglist", type = Dowhile.GetTradeFromShoppinglist.class),
        @XmlElement(name = "get_tradeoffer_locations", type = Dowhile.GetTradeofferLocations.class),
        @XmlElement(name = "add_conversation_view", type = Dowhile.AddConversationView.class),
        @XmlElement(name = "add_faction_relation", type = Dowhile.AddFactionRelation.class),
        @XmlElement(name = "get_factions_by_relation", type = Dowhile.GetFactionsByRelation.class),
        @XmlElement(name = "set_faction_known", type = Dowhile.SetFactionKnown.class),
        @XmlElement(name = "set_known", type = Dowhile.SetKnown.class),
        @XmlElement(name = "add_inventory", type = Dowhile.AddInventory.class),
        @XmlElement(name = "remove_inventory", type = Dowhile.RemoveInventory.class),
        @XmlElement(name = "add_licence", type = Dowhile.AddLicence.class),
        @XmlElement(name = "remove_licence", type = Dowhile.RemoveLicence.class),
        @XmlElement(name = "add_npc_line", type = Dowhile.AddNpcLine.class),
        @XmlElement(name = "add_player_choice", type = Dowhile.AddPlayerChoice.class),
        @XmlElement(name = "add_player_choice_sub", type = Dowhile.AddPlayerChoiceSub.class),
        @XmlElement(name = "add_player_choice_subconv", type = Dowhile.AddPlayerChoiceSubconv.class),
        @XmlElement(name = "add_player_choice_return", type = Dowhile.AddPlayerChoiceReturn.class),
        @XmlElement(name = "set_conversation_return_section", type = Dowhile.SetConversationReturnSection.class),
        @XmlElement(name = "add_relation_boost", type = Dowhile.AddRelationBoost.class),
        @XmlElement(name = "add_to_group", type = Dowhile.AddToGroup.class),
        @XmlElement(name = "add_to_player_squad", type = Dowhile.AddToPlayerSquad.class),
        @XmlElement(name = "add_tolerance_boost", type = Dowhile.AddToleranceBoost.class),
        @XmlElement(name = "aim_turret", type = Dowhile.AimTurret.class),
        @XmlElement(name = "add_units", type = Dowhile.AddUnits.class),
        @XmlElement(name = "remove_units", type = Dowhile.RemoveUnits.class),
        @XmlElement(name = "request_units", type = Dowhile.RequestUnits.class),
        @XmlElement(name = "return_units", type = Dowhile.ReturnUnits.class),
        @XmlElement(name = "allow_conversation_escape", type = Dowhile.AllowConversationEscape.class),
        @XmlElement(name = "append_to_list", type = Dowhile.AppendToList.class),
        @XmlElement(name = "apply_attackstrength", type = Dowhile.ApplyAttackstrength.class),
        @XmlElement(name = "assert", type = Dowhile.Assert.class),
        @XmlElement(name = "assign_pilot", type = Dowhile.AssignPilot.class),
        @XmlElement(name = "assign_architect", type = Dowhile.AssignArchitect.class),
        @XmlElement(name = "assign_boarding_commander", type = Dowhile.AssignBoardingCommander.class),
        @XmlElement(name = "assign_defence_manager", type = Dowhile.AssignDefenceManager.class),
        @XmlElement(name = "assign_engineer", type = Dowhile.AssignEngineer.class),
        @XmlElement(name = "assign_trade_manager", type = Dowhile.AssignTradeManager.class),
        @XmlElement(name = "assign_control_entity", type = Dowhile.AssignControlEntity.class),
        @XmlElement(name = "dismiss_control_entity", type = Dowhile.DismissControlEntity.class),
        @XmlElement(name = "get_control_entities", type = Dowhile.GetControlEntities.class),
        @XmlElement(name = "attach_object_to_target", type = Dowhile.AttachObjectToTarget.class),
        @XmlElement(name = "break", type = Dowhile.Break.class),
        @XmlElement(name = "break_formation", type = Dowhile.BreakFormation.class),
        @XmlElement(name = "cease_fire", type = Dowhile.CeaseFire.class),
        @XmlElement(name = "change_relation_on_attack", type = Dowhile.ChangeRelationOnAttack.class),
        @XmlElement(name = "change_relation_on_kill", type = Dowhile.ChangeRelationOnKill.class),
        @XmlElement(name = "check_line_of_sight", type = Dowhile.CheckLineOfSight.class),
        @XmlElement(name = "check_is_in_security_area", type = Dowhile.CheckIsInSecurityArea.class),
        @XmlElement(name = "check_is_area_obstructed", type = Dowhile.CheckIsAreaObstructed.class),
        @XmlElement(name = "start_observation", type = Dowhile.StartObservation.class),
        @XmlElement(name = "stop_observation", type = Dowhile.StopObservation.class),
        @XmlElement(name = "start_attack", type = Dowhile.StartAttack.class),
        @XmlElement(name = "stop_attack", type = Dowhile.StopAttack.class),
        @XmlElement(name = "report_illegal_activity", type = Dowhile.ReportIllegalActivity.class),
        @XmlElement(name = "claim_ship", type = Dowhile.ClaimShip.class),
        @XmlElement(name = "clear_collision_filter", type = Dowhile.ClearCollisionFilter.class),
        @XmlElement(name = "clear_group", type = Dowhile.ClearGroup.class),
        @XmlElement(name = "clear_list", type = Dowhile.ClearList.class),
        @XmlElement(name = "close_dockingbay_doors", type = Dowhile.CloseDockingbayDoors.class),
        @XmlElement(name = "get_building_position", type = Dowhile.GetBuildingPosition.class),
        @XmlElement(name = "connect_to_build_location", type = Dowhile.ConnectToBuildLocation.class),
        @XmlElement(name = "connect_to_trade_location", type = Dowhile.ConnectToTradeLocation.class),
        @XmlElement(name = "disconnect_from_trade_location", type = Dowhile.DisconnectFromTradeLocation.class),
        @XmlElement(name = "construct_ship", type = Dowhile.ConstructShip.class),
        @XmlElement(name = "construct_station", type = Dowhile.ConstructStation.class),
        @XmlElement(name = "set_buildmodule_macro", type = Dowhile.SetBuildmoduleMacro.class),
        @XmlElement(name = "clear_buildmodule", type = Dowhile.ClearBuildmodule.class),
        @XmlElement(name = "continue", type = Dowhile.Continue.class),
        @XmlElement(name = "create_ai_unit", type = Dowhile.CreateAiUnit.class),
        @XmlElement(name = "create_group", type = Dowhile.CreateGroup.class),
        @XmlElement(name = "create_list", type = Dowhile.CreateList.class),
        @XmlElement(name = "create_formation", type = Dowhile.CreateFormation.class),
        @XmlElement(name = "create_object", type = Dowhile.CreateObject.class),
        @XmlElement(name = "create_orientation", type = Dowhile.CreateOrientation.class),
        @XmlElement(name = "create_random_position_in_boundingbox", type = Dowhile.CreateRandomPositionInBoundingbox.class),
        @XmlElement(name = "create_random_position_outside_boundingbox", type = Dowhile.CreateRandomPositionOutsideBoundingbox.class),
        @XmlElement(name = "create_trade_offer", type = Dowhile.CreateTradeOffer.class),
        @XmlElement(name = "add_trade_offer", type = Dowhile.AddTradeOffer.class),
        @XmlElement(name = "remove_trade_offer", type = Dowhile.RemoveTradeOffer.class),
        @XmlElement(name = "create_position_outside_boundingbox", type = Dowhile.CreatePositionOutsideBoundingbox.class),
        @XmlElement(name = "find_object_surface", type = Dowhile.FindObjectSurface.class),
        @XmlElement(name = "create_position", type = Dowhile.CreatePosition.class),
        @XmlElement(name = "transform_position", type = Dowhile.TransformPosition.class),
        @XmlElement(name = "create_rotation", type = Dowhile.CreateRotation.class),
        @XmlElement(name = "create_ship", type = Dowhile.CreateShip.class),
        @XmlElement(name = "create_station", type = Dowhile.CreateStation.class),
        @XmlElement(name = "create_defence_officer", type = Dowhile.CreateDefenceOfficer.class),
        @XmlElement(name = "create_engineer", type = Dowhile.CreateEngineer.class),
        @XmlElement(name = "create_pilot", type = Dowhile.CreatePilot.class),
        @XmlElement(name = "cutscene_event", type = Dowhile.CutsceneEvent.class),
        @XmlElement(name = "debug_text", type = Dowhile.DebugText.class),
        @XmlElement(name = "deplete_yield", type = Dowhile.DepleteYield.class),
        @XmlElement(name = "get_resource_gatherrate", type = Dowhile.GetResourceGatherrate.class),
        @XmlElement(name = "destroy_object", type = Dowhile.DestroyObject.class),
        @XmlElement(name = "destroy_group", type = Dowhile.DestroyGroup.class),
        @XmlElement(name = "restore_object", type = Dowhile.RestoreObject.class),
        @XmlElement(name = "repair_object", type = Dowhile.RepairObject.class),
        @XmlElement(name = "repair_component", type = Dowhile.RepairComponent.class),
        @XmlElement(name = "disable_collisions_between", type = Dowhile.DisableCollisionsBetween.class),
        @XmlElement(name = "dock", type = Dowhile.Dock.class),
        @XmlElement(name = "dock_drone", type = Dowhile.DockDrone.class),
        @XmlElement(name = "drop_cargo", type = Dowhile.DropCargo.class),
        @XmlElement(name = "drop_illegal_cargo", type = Dowhile.DropIllegalCargo.class),
        @XmlElement(name = "drop_illegal_inventory", type = Dowhile.DropIllegalInventory.class),
        @XmlElement(name = "drop_inventory", type = Dowhile.DropInventory.class),
        @XmlElement(name = "eject_npcs", type = Dowhile.EjectNpcs.class),
        @XmlElement(name = "enable_collisions_between", type = Dowhile.EnableCollisionsBetween.class),
        @XmlElement(name = "equip_weapon", type = Dowhile.EquipWeapon.class),
        @XmlElement(name = "find_asteroid_in_region", type = Dowhile.FindAsteroidInRegion.class),
        @XmlElement(name = "find_buy_offer", type = Dowhile.FindBuyOffer.class),
        @XmlElement(name = "find_closest_navmesh_object", type = Dowhile.FindClosestNavmeshObject.class),
        @XmlElement(name = "find_closest_region", type = Dowhile.FindClosestRegion.class),
        @XmlElement(name = "find_closest_resource", type = Dowhile.FindClosestResource.class),
        @XmlElement(name = "find_closest_station_part", type = Dowhile.FindClosestStationPart.class),
        @XmlElement(name = "find_cluster", type = Dowhile.FindCluster.class),
        @XmlElement(name = "find_dock_location", type = Dowhile.FindDockLocation.class),
        @XmlElement(name = "find_dockingbay_for_trade", type = Dowhile.FindDockingbayForTrade.class),
        @XmlElement(name = "find_gravidar_contact", type = Dowhile.FindGravidarContact.class),
        @XmlElement(name = "find_infopoint_location", type = Dowhile.FindInfopointLocation.class),
        @XmlElement(name = "find_object_component", type = Dowhile.FindObjectComponent.class),
        @XmlElement(name = "find_resource", type = Dowhile.FindResource.class),
        @XmlElement(name = "check_object", type = Dowhile.CheckObject.class),
        @XmlElement(name = "find_pos_in_mass_traffic_at_time", type = Dowhile.FindPosInMassTrafficAtTime.class),
        @XmlElement(name = "find_random_pos_in_mass_traffic", type = Dowhile.FindRandomPosInMassTraffic.class),
        @XmlElement(name = "find_summarised_adsign", type = Dowhile.FindSummarisedAdsign.class),
        @XmlElement(name = "find_summarised_efficiencyupgrade", type = Dowhile.FindSummarisedEfficiencyupgrade.class),
        @XmlElement(name = "find_summarised_flakcontroller", type = Dowhile.FindSummarisedFlakcontroller.class),
        @XmlElement(name = "find_summarised_shield", type = Dowhile.FindSummarisedShield.class),
        @XmlElement(name = "find_summarised_surfacedestructible", type = Dowhile.FindSummarisedSurfacedestructible.class),
        @XmlElement(name = "find_summarised_turret", type = Dowhile.FindSummarisedTurret.class),
        @XmlElement(name = "find_object", type = Dowhile.FindObject.class),
        @XmlElement(name = "find_sector", type = Dowhile.FindSector.class),
        @XmlElement(name = "find_sell_offer", type = Dowhile.FindSellOffer.class),
        @XmlElement(name = "find_ship", type = Dowhile.FindShip.class),
        @XmlElement(name = "find_station", type = Dowhile.FindStation.class),
        @XmlElement(name = "find_tradeoffer_parking_slot", type = Dowhile.FindTradeofferParkingSlot.class),
        @XmlElement(name = "find_zone", type = Dowhile.FindZone.class),
        @XmlElement(name = "fire_turret", type = Dowhile.FireTurret.class),
        @XmlElement(name = "get_attackstrength", type = Dowhile.GetAttackstrength.class),
        @XmlElement(name = "get_character_definition", type = Dowhile.GetCharacterDefinition.class),
        @XmlElement(name = "get_docking_approach_pos", type = Dowhile.GetDockingApproachPos.class),
        @XmlElement(name = "get_gate_approach_pos", type = Dowhile.GetGateApproachPos.class),
        @XmlElement(name = "get_global_path", type = Dowhile.GetGlobalPath.class),
        @XmlElement(name = "get_jump_path", type = Dowhile.GetJumpPath.class),
        @XmlElement(name = "get_closest_highway_offset", type = Dowhile.GetClosestHighwayOffset.class),
        @XmlElement(name = "get_closest_jumpbeacon", type = Dowhile.GetClosestJumpbeacon.class),
        @XmlElement(name = "get_safe_pos", type = Dowhile.GetSafePos.class),
        @XmlElement(name = "get_ship_definition", type = Dowhile.GetShipDefinition.class),
        @XmlElement(name = "get_target_points", type = Dowhile.GetTargetPoints.class),
        @XmlElement(name = "get_text_ids_in_range", type = Dowhile.GetTextIdsInRange.class),
        @XmlElement(name = "get_trade_parking_pos", type = Dowhile.GetTradeParkingPos.class),
        @XmlElement(name = "get_zone_exit_pos", type = Dowhile.GetZoneExitPos.class),
        @XmlElement(name = "precache_hint", type = Dowhile.PrecacheHint.class),
        @XmlElement(name = "is_in_quadrant", type = Dowhile.IsInQuadrant.class),
        @XmlElement(name = "join_formation", type = Dowhile.JoinFormation.class),
        @XmlElement(name = "launch_drone", type = Dowhile.LaunchDrone.class),
        @XmlElement(name = "launch_masstraffic_drone", type = Dowhile.LaunchMasstrafficDrone.class),
        @XmlElement(name = "launch_war_drones", type = Dowhile.LaunchWarDrones.class),
        @XmlElement(name = "launch_repair_drones", type = Dowhile.LaunchRepairDrones.class),
        @XmlElement(name = "leave_formation", type = Dowhile.LeaveFormation.class),
        @XmlElement(name = "open_conversation_menu", type = Dowhile.OpenConversationMenu.class),
        @XmlElement(name = "open_dockingbay_doors", type = Dowhile.OpenDockingbayDoors.class),
        @XmlElement(name = "pickup_target", type = Dowhile.PickupTarget.class),
        @XmlElement(name = "play_cutscene", type = Dowhile.PlayCutscene.class),
        @XmlElement(name = "remove_actor_account", type = Dowhile.RemoveActorAccount.class),
        @XmlElement(name = "remove_actor_from_room", type = Dowhile.RemoveActorFromRoom.class),
        @XmlElement(name = "remove_from_group", type = Dowhile.RemoveFromGroup.class),
        @XmlElement(name = "remove_from_player_squad", type = Dowhile.RemoveFromPlayerSquad.class),
        @XmlElement(name = "remove_object_commander", type = Dowhile.RemoveObjectCommander.class),
        @XmlElement(name = "remove_representative", type = Dowhile.RemoveRepresentative.class),
        @XmlElement(name = "remove_value", type = Dowhile.RemoveValue.class),
        @XmlElement(name = "remove_weapon", type = Dowhile.RemoveWeapon.class),
        @XmlElement(name = "check_weapon_active", type = Dowhile.CheckWeaponActive.class),
        @XmlElement(name = "check_weapon_installed", type = Dowhile.CheckWeaponInstalled.class),
        @XmlElement(name = "request_docking", type = Dowhile.RequestDocking.class),
        @XmlElement(name = "add_mass_traffic_quota", type = Dowhile.AddMassTrafficQuota.class),
        @XmlElement(name = "stop_mass_traffic_quota", type = Dowhile.StopMassTrafficQuota.class),
        @XmlElement(name = "get_macros_in_mass_traffic", type = Dowhile.GetMacrosInMassTraffic.class),
        @XmlElement(name = "request_mass_traffic_ship", type = Dowhile.RequestMassTrafficShip.class),
        @XmlElement(name = "request_undocking", type = Dowhile.RequestUndocking.class),
        @XmlElement(name = "request_boarding_support", type = Dowhile.RequestBoardingSupport.class),
        @XmlElement(name = "notify_boarding_support_failed", type = Dowhile.NotifyBoardingSupportFailed.class),
        @XmlElement(name = "notify_boarding_support_succeeded", type = Dowhile.NotifyBoardingSupportSucceeded.class),
        @XmlElement(name = "request_repair", type = Dowhile.RequestRepair.class),
        @XmlElement(name = "reset_relation_boost", type = Dowhile.ResetRelationBoost.class),
        @XmlElement(name = "reset_tolerance_boost", type = Dowhile.ResetToleranceBoost.class),
        @XmlElement(name = "reset_turret", type = Dowhile.ResetTurret.class),
        @XmlElement(name = "resize_list", type = Dowhile.ResizeList.class),
        @XmlElement(name = "reward_player", type = Dowhile.RewardPlayer.class),
        @XmlElement(name = "set_actor_account", type = Dowhile.SetActorAccount.class),
        @XmlElement(name = "set_actor_max_budget", type = Dowhile.SetActorMaxBudget.class),
        @XmlElement(name = "set_actor_min_budget", type = Dowhile.SetActorMinBudget.class),
        @XmlElement(name = "transfer_money", type = Dowhile.TransferMoney.class),
        @XmlElement(name = "set_buildanchor", type = Dowhile.SetBuildanchor.class),
        @XmlElement(name = "set_cockpit_tint", type = Dowhile.SetCockpitTint.class),
        @XmlElement(name = "set_comm_handler", type = Dowhile.SetCommHandler.class),
        @XmlElement(name = "set_object_active", type = Dowhile.SetObjectActive.class),
        @XmlElement(name = "set_object_capturable", type = Dowhile.SetObjectCapturable.class),
        @XmlElement(name = "set_object_radar_visible", type = Dowhile.SetObjectRadarVisible.class),
        @XmlElement(name = "set_object_commander", type = Dowhile.SetObjectCommander.class),
        @XmlElement(name = "add_drone", type = Dowhile.AddDrone.class),
        @XmlElement(name = "set_object_min_hull", type = Dowhile.SetObjectMinHull.class),
        @XmlElement(name = "set_object_min_shield", type = Dowhile.SetObjectMinShield.class),
        @XmlElement(name = "set_object_hull", type = Dowhile.SetObjectHull.class),
        @XmlElement(name = "set_object_relation_behaviour", type = Dowhile.SetObjectRelationBehaviour.class),
        @XmlElement(name = "set_object_shield", type = Dowhile.SetObjectShield.class),
        @XmlElement(name = "set_object_max_hull", type = Dowhile.SetObjectMaxHull.class),
        @XmlElement(name = "set_summarised_adsign_state", type = Dowhile.SetSummarisedAdsignState.class),
        @XmlElement(name = "set_summarised_efficiencyupgrade_state", type = Dowhile.SetSummarisedEfficiencyupgradeState.class),
        @XmlElement(name = "set_summarised_flakcontroller_state", type = Dowhile.SetSummarisedFlakcontrollerState.class),
        @XmlElement(name = "set_summarised_shield_state", type = Dowhile.SetSummarisedShieldState.class),
        @XmlElement(name = "set_summarised_surfacedestructible_state", type = Dowhile.SetSummarisedSurfacedestructibleState.class),
        @XmlElement(name = "set_summarised_turret_state", type = Dowhile.SetSummarisedTurretState.class),
        @XmlElement(name = "set_object_scanned", type = Dowhile.SetObjectScanned.class),
        @XmlElement(name = "set_object_hacked", type = Dowhile.SetObjectHacked.class),
        @XmlElement(name = "set_room_locked", type = Dowhile.SetRoomLocked.class),
        @XmlElement(name = "set_allow_drop", type = Dowhile.SetAllowDrop.class),
        @XmlElement(name = "set_drop_object", type = Dowhile.SetDropObject.class),
        @XmlElement(name = "spawn_drop", type = Dowhile.SpawnDrop.class),
        @XmlElement(name = "set_entity_type", type = Dowhile.SetEntityType.class),
        @XmlElement(name = "set_faction_relation", type = Dowhile.SetFactionRelation.class),
        @XmlElement(name = "set_mass_traffic_object_persistence", type = Dowhile.SetMassTrafficObjectPersistence.class),
        @XmlElement(name = "set_region_object_persistence", type = Dowhile.SetRegionObjectPersistence.class),
        @XmlElement(name = "end_mass_traffic", type = Dowhile.EndMassTraffic.class),
        @XmlElement(name = "set_order_moveto", type = Dowhile.SetOrderMoveto.class),
        @XmlElement(name = "set_order_pickup_target", type = Dowhile.SetOrderPickupTarget.class),
        @XmlElement(name = "set_owner", type = Dowhile.SetOwner.class),
        @XmlElement(name = "set_cover_owner", type = Dowhile.SetCoverOwner.class),
        @XmlElement(name = "set_player_activity", type = Dowhile.SetPlayerActivity.class),
        @XmlElement(name = "set_player_entity_position", type = Dowhile.SetPlayerEntityPosition.class),
        @XmlElement(name = "set_relation_boost", type = Dowhile.SetRelationBoost.class),
        @XmlElement(name = "set_representative", type = Dowhile.SetRepresentative.class),
        @XmlElement(name = "set_hack_target", type = Dowhile.SetHackTarget.class),
        @XmlElement(name = "set_scan_target", type = Dowhile.SetScanTarget.class),
        @XmlElement(name = "set_skill", type = Dowhile.SetSkill.class),
        @XmlElement(name = "set_skills_visible", type = Dowhile.SetSkillsVisible.class),
        @XmlElement(name = "set_tolerance_boost", type = Dowhile.SetToleranceBoost.class),
        @XmlElement(name = "set_allowed_weapon_systems", type = Dowhile.SetAllowedWeaponSystems.class),
        @XmlElement(name = "set_trade_restrictions", type = Dowhile.SetTradeRestrictions.class),
        @XmlElement(name = "set_turret_targets", type = Dowhile.SetTurretTargets.class),
        @XmlElement(name = "set_value", type = Dowhile.SetValue.class),
        @XmlElement(name = "setup_conversation_minigame", type = Dowhile.SetupConversationMinigame.class),
        @XmlElement(name = "show_help", type = Dowhile.ShowHelp.class),
        @XmlElement(name = "remove_help", type = Dowhile.RemoveHelp.class),
        @XmlElement(name = "save_ai_action_state", type = Dowhile.SaveAiActionState.class),
        @XmlElement(name = "show_input_help", type = Dowhile.ShowInputHelp.class),
        @XmlElement(name = "show_notification", type = Dowhile.ShowNotification.class),
        @XmlElement(name = "signal_objects", type = Dowhile.SignalObjects.class),
        @XmlElement(name = "speak", type = Dowhile.Speak.class),
        @XmlElement(name = "start_boost", type = Dowhile.StartBoost.class),
        @XmlElement(name = "start_conversation", type = Dowhile.StartConversation.class),
        @XmlElement(name = "cancel_conversation", type = Dowhile.CancelConversation.class),
        @XmlElement(name = "start_long_range_scan", type = Dowhile.StartLongRangeScan.class),
        @XmlElement(name = "stop_long_range_scan", type = Dowhile.StopLongRangeScan.class),
        @XmlElement(name = "start_script", type = Dowhile.StartScript.class),
        @XmlElement(name = "stop_boost", type = Dowhile.StopBoost.class),
        @XmlElement(name = "stop_cutscene", type = Dowhile.StopCutscene.class),
        @XmlElement(name = "stop_firing_at_target", type = Dowhile.StopFiringAtTarget.class),
        @XmlElement(name = "substitute_text", type = Dowhile.SubstituteText.class),
        @XmlElement(name = "trigger_autosave", type = Dowhile.TriggerAutosave.class),
        @XmlElement(name = "trigger_boarding", type = Dowhile.TriggerBoarding.class),
        @XmlElement(name = "undock", type = Dowhile.Undock.class),
        @XmlElement(name = "unlock_achievement", type = Dowhile.UnlockAchievement.class),
        @XmlElement(name = "indicate_achievement_progress", type = Dowhile.IndicateAchievementProgress.class),
        @XmlElement(name = "update_trade", type = Dowhile.UpdateTrade.class),
        @XmlElement(name = "upgrade_object_by_macro", type = Dowhile.UpgradeObjectByMacro.class),
        @XmlElement(name = "upgrade_object_by_tag", type = Dowhile.UpgradeObjectByTag.class),
        @XmlElement(name = "build_object_upgrades", type = Dowhile.BuildObjectUpgrades.class),
        @XmlElement(name = "build_component_upgrades", type = Dowhile.BuildComponentUpgrades.class),
        @XmlElement(name = "get_build_slot_price", type = Dowhile.GetBuildSlotPrice.class),
        @XmlElement(name = "get_pilot_dockslot", type = Dowhile.GetPilotDockslot.class),
        @XmlElement(name = "warp", type = Dowhile.Warp.class),
        @XmlElement(name = "sort_trades", type = Dowhile.SortTrades.class),
        @XmlElement(name = "add_experience_progress", type = Dowhile.AddExperienceProgress.class),
        @XmlElement(name = "set_experience_progress", type = Dowhile.SetExperienceProgress.class),
        @XmlElement(name = "add_effect", type = Dowhile.AddEffect.class),
        @XmlElement(name = "remove_effect", type = Dowhile.RemoveEffect.class),
        @XmlElement(name = "play_sound", type = Dowhile.PlaySound.class),
        @XmlElement(name = "play_music", type = Dowhile.PlayMusic.class),
        @XmlElement(name = "stop_music", type = Dowhile.StopMusic.class),
        @XmlElement(name = "quit_gameover", type = Dowhile.QuitGameover.class),
        @XmlElement(name = "quit_to_desktop", type = Dowhile.QuitToDesktop.class),
        @XmlElement(name = "quit_to_startmenu", type = Dowhile.QuitToStartmenu.class),
        @XmlElement(name = "cancel_cue", type = Dowhile.CancelCue.class),
        @XmlElement(name = "complete_cue", type = Dowhile.CompleteCue.class),
        @XmlElement(name = "create_cue_actor", type = Dowhile.CreateCueActor.class),
        @XmlElement(name = "create_mission", type = Dowhile.CreateMission.class),
        @XmlElement(name = "create_offer", type = Dowhile.CreateOffer.class),
        @XmlElement(name = "create_platform_actor", type = Dowhile.CreatePlatformActor.class),
        @XmlElement(name = "create_presentation_cluster", type = Dowhile.CreatePresentationCluster.class),
        @XmlElement(name = "create_representative_actor", type = Dowhile.CreateRepresentativeActor.class),
        @XmlElement(name = "create_target_points", type = Dowhile.CreateTargetPoints.class),
        @XmlElement(name = "find_mission_offer_location", type = Dowhile.FindMissionOfferLocation.class),
        @XmlElement(name = "force_cue", type = Dowhile.ForceCue.class),
        @XmlElement(name = "include_actions", type = Dowhile.IncludeActions.class),
        @XmlElement(name = "populate_platforms", type = Dowhile.PopulatePlatforms.class),
        @XmlElement(name = "remove_all_cue_actors", type = Dowhile.RemoveAllCueActors.class),
        @XmlElement(name = "remove_cue_actor", type = Dowhile.RemoveCueActor.class),
        @XmlElement(name = "remove_mission", type = Dowhile.RemoveMission.class),
        @XmlElement(name = "remove_offer", type = Dowhile.RemoveOffer.class),
        @XmlElement(name = "remove_target_points", type = Dowhile.RemoveTargetPoints.class),
        @XmlElement(name = "reset_cue", type = Dowhile.ResetCue.class),
        @XmlElement(name = "add_holomap", type = Dowhile.AddHolomap.class),
        @XmlElement(name = "remove_holomap", type = Dowhile.RemoveHolomap.class),
        @XmlElement(name = "set_holomap_target", type = Dowhile.SetHolomapTarget.class),
        @XmlElement(name = "set_job_active", type = Dowhile.SetJobActive.class),
        @XmlElement(name = "set_mission_actor", type = Dowhile.SetMissionActor.class),
        @XmlElement(name = "set_objective", type = Dowhile.SetObjective.class),
        @XmlElement(name = "update_objective_progress", type = Dowhile.UpdateObjectiveProgress.class),
        @XmlElement(name = "update_mission", type = Dowhile.UpdateMission.class),
        @XmlElement(name = "update_objective_endtime", type = Dowhile.UpdateObjectiveEndtime.class),
        @XmlElement(name = "update_offer", type = Dowhile.UpdateOffer.class),
        @XmlElement(name = "enter_playership", type = Dowhile.EnterPlayership.class),
        @XmlElement(name = "leave_cockpit", type = Dowhile.LeaveCockpit.class),
        @XmlElement(name = "force_player_speed", type = Dowhile.ForcePlayerSpeed.class),
        @XmlElement(name = "signal_cue", type = Dowhile.SignalCue.class),
        @XmlElement(name = "signal_cue_instantly", type = Dowhile.SignalCueInstantly.class)
    })
    protected List<Object> doAllOrDoAnyOrDoIf;
    @XmlAttribute(name = "value", required = true)
    protected String value;
    @XmlAttribute(name = "negate")
    protected Boolean negate;
    @XmlAttribute(name = "exact")
    protected String exact;
    @XmlAttribute(name = "list")
    protected String list;
    @XmlAttribute(name = "min")
    protected String min;
    @XmlAttribute(name = "max")
    protected String max;
    @XmlAttribute(name = "chance")
    protected String chance;
    @XmlAttribute(name = "weight")
    protected String weight;
    @XmlAttribute(name = "comment")
    protected String comment;

    /**
     * Gets the value of the doAllOrDoAnyOrDoIf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the doAllOrDoAnyOrDoIf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDoAllOrDoAnyOrDoIf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Doall }
     * {@link Doany }
     * {@link Doif }
     * {@link Doelseif }
     * {@link Doelse }
     * {@link Dowhile }
     * {@link Dowhile.AbortHack }
     * {@link Dowhile.AbortScan }
     * {@link Dowhile.AbortScripts }
     * {@link Dowhile.ActivateBattlestate }
     * {@link Dowhile.ActivateFlaks }
     * {@link Dowhile.ActivateWeapon }
     * {@link Dowhile.AddActorToPlatform }
     * {@link Dowhile.AddActorToPlayership }
     * {@link Dowhile.AddCopilot }
     * {@link Dowhile.CreateBuildPlan }
     * {@link Dowhile.AddBuildPlan }
     * {@link Dowhile.AddAmmo }
     * {@link Dowhile.RemoveAmmo }
     * {@link Dowhile.DepleteAmmo }
     * {@link Dowhile.EvaluateAmmoStorage }
     * {@link Dowhile.AddCargo }
     * {@link Dowhile.RemoveCargo }
     * {@link Dowhile.AddCommission }
     * {@link Dowhile.AddPlayerCommission }
     * {@link Dowhile.RemoveCommission }
     * {@link Dowhile.RemovePlayerCommission }
     * {@link Dowhile.AddDefaultProductionWares }
     * {@link Dowhile.AddSkill }
     * {@link Dowhile.AddTradeware }
     * {@link Dowhile.RemoveTradeware }
     * {@link Dowhile.AddDiscount }
     * {@link Dowhile.AddPlayerDiscount }
     * {@link Dowhile.RemoveDiscount }
     * {@link Dowhile.RemovePlayerDiscount }
     * {@link Dowhile.AddProductionSalesreps }
     * {@link Dowhile.AddWatchdogUnitsToMasstraffic }
     * {@link Dowhile.GetNextBonusUnlocktime }
     * {@link Dowhile.GetProductionSpecialistTypes }
     * {@link Dowhile.SetNextBonusUnlocktime }
     * {@link Dowhile.AddBuyOrder }
     * {@link Dowhile.AddSellOrder }
     * {@link Dowhile.RemoveTradeOrder }
     * {@link Dowhile.GetTradeFromShoppinglist }
     * {@link Dowhile.GetTradeofferLocations }
     * {@link Dowhile.AddConversationView }
     * {@link Dowhile.AddFactionRelation }
     * {@link Dowhile.GetFactionsByRelation }
     * {@link Dowhile.SetFactionKnown }
     * {@link Dowhile.SetKnown }
     * {@link Dowhile.AddInventory }
     * {@link Dowhile.RemoveInventory }
     * {@link Dowhile.AddLicence }
     * {@link Dowhile.RemoveLicence }
     * {@link Dowhile.AddNpcLine }
     * {@link Dowhile.AddPlayerChoice }
     * {@link Dowhile.AddPlayerChoiceSub }
     * {@link Dowhile.AddPlayerChoiceSubconv }
     * {@link Dowhile.AddPlayerChoiceReturn }
     * {@link Dowhile.SetConversationReturnSection }
     * {@link Dowhile.AddRelationBoost }
     * {@link Dowhile.AddToGroup }
     * {@link Dowhile.AddToPlayerSquad }
     * {@link Dowhile.AddToleranceBoost }
     * {@link Dowhile.AimTurret }
     * {@link Dowhile.AddUnits }
     * {@link Dowhile.RemoveUnits }
     * {@link Dowhile.RequestUnits }
     * {@link Dowhile.ReturnUnits }
     * {@link Dowhile.AllowConversationEscape }
     * {@link Dowhile.AppendToList }
     * {@link Dowhile.ApplyAttackstrength }
     * {@link Dowhile.Assert }
     * {@link Dowhile.AssignPilot }
     * {@link Dowhile.AssignArchitect }
     * {@link Dowhile.AssignBoardingCommander }
     * {@link Dowhile.AssignDefenceManager }
     * {@link Dowhile.AssignEngineer }
     * {@link Dowhile.AssignTradeManager }
     * {@link Dowhile.AssignControlEntity }
     * {@link Dowhile.DismissControlEntity }
     * {@link Dowhile.GetControlEntities }
     * {@link Dowhile.AttachObjectToTarget }
     * {@link Dowhile.Break }
     * {@link Dowhile.BreakFormation }
     * {@link Dowhile.CeaseFire }
     * {@link Dowhile.ChangeRelationOnAttack }
     * {@link Dowhile.ChangeRelationOnKill }
     * {@link Dowhile.CheckLineOfSight }
     * {@link Dowhile.CheckIsInSecurityArea }
     * {@link Dowhile.CheckIsAreaObstructed }
     * {@link Dowhile.StartObservation }
     * {@link Dowhile.StopObservation }
     * {@link Dowhile.StartAttack }
     * {@link Dowhile.StopAttack }
     * {@link Dowhile.ReportIllegalActivity }
     * {@link Dowhile.ClaimShip }
     * {@link Dowhile.ClearCollisionFilter }
     * {@link Dowhile.ClearGroup }
     * {@link Dowhile.ClearList }
     * {@link Dowhile.CloseDockingbayDoors }
     * {@link Dowhile.GetBuildingPosition }
     * {@link Dowhile.ConnectToBuildLocation }
     * {@link Dowhile.ConnectToTradeLocation }
     * {@link Dowhile.DisconnectFromTradeLocation }
     * {@link Dowhile.ConstructShip }
     * {@link Dowhile.ConstructStation }
     * {@link Dowhile.SetBuildmoduleMacro }
     * {@link Dowhile.ClearBuildmodule }
     * {@link Dowhile.Continue }
     * {@link Dowhile.CreateAiUnit }
     * {@link Dowhile.CreateGroup }
     * {@link Dowhile.CreateList }
     * {@link Dowhile.CreateFormation }
     * {@link Dowhile.CreateObject }
     * {@link Dowhile.CreateOrientation }
     * {@link Dowhile.CreateRandomPositionInBoundingbox }
     * {@link Dowhile.CreateRandomPositionOutsideBoundingbox }
     * {@link Dowhile.CreateTradeOffer }
     * {@link Dowhile.AddTradeOffer }
     * {@link Dowhile.RemoveTradeOffer }
     * {@link Dowhile.CreatePositionOutsideBoundingbox }
     * {@link Dowhile.FindObjectSurface }
     * {@link Dowhile.CreatePosition }
     * {@link Dowhile.TransformPosition }
     * {@link Dowhile.CreateRotation }
     * {@link Dowhile.CreateShip }
     * {@link Dowhile.CreateStation }
     * {@link Dowhile.CreateDefenceOfficer }
     * {@link Dowhile.CreateEngineer }
     * {@link Dowhile.CreatePilot }
     * {@link Dowhile.CutsceneEvent }
     * {@link Dowhile.DebugText }
     * {@link Dowhile.DepleteYield }
     * {@link Dowhile.GetResourceGatherrate }
     * {@link Dowhile.DestroyObject }
     * {@link Dowhile.DestroyGroup }
     * {@link Dowhile.RestoreObject }
     * {@link Dowhile.RepairObject }
     * {@link Dowhile.RepairComponent }
     * {@link Dowhile.DisableCollisionsBetween }
     * {@link Dowhile.Dock }
     * {@link Dowhile.DockDrone }
     * {@link Dowhile.DropCargo }
     * {@link Dowhile.DropIllegalCargo }
     * {@link Dowhile.DropIllegalInventory }
     * {@link Dowhile.DropInventory }
     * {@link Dowhile.EjectNpcs }
     * {@link Dowhile.EnableCollisionsBetween }
     * {@link Dowhile.EquipWeapon }
     * {@link Dowhile.FindAsteroidInRegion }
     * {@link Dowhile.FindBuyOffer }
     * {@link Dowhile.FindClosestNavmeshObject }
     * {@link Dowhile.FindClosestRegion }
     * {@link Dowhile.FindClosestResource }
     * {@link Dowhile.FindClosestStationPart }
     * {@link Dowhile.FindCluster }
     * {@link Dowhile.FindDockLocation }
     * {@link Dowhile.FindDockingbayForTrade }
     * {@link Dowhile.FindGravidarContact }
     * {@link Dowhile.FindInfopointLocation }
     * {@link Dowhile.FindObjectComponent }
     * {@link Dowhile.FindResource }
     * {@link Dowhile.CheckObject }
     * {@link Dowhile.FindPosInMassTrafficAtTime }
     * {@link Dowhile.FindRandomPosInMassTraffic }
     * {@link Dowhile.FindSummarisedAdsign }
     * {@link Dowhile.FindSummarisedEfficiencyupgrade }
     * {@link Dowhile.FindSummarisedFlakcontroller }
     * {@link Dowhile.FindSummarisedShield }
     * {@link Dowhile.FindSummarisedSurfacedestructible }
     * {@link Dowhile.FindSummarisedTurret }
     * {@link Dowhile.FindObject }
     * {@link Dowhile.FindSector }
     * {@link Dowhile.FindSellOffer }
     * {@link Dowhile.FindShip }
     * {@link Dowhile.FindStation }
     * {@link Dowhile.FindTradeofferParkingSlot }
     * {@link Dowhile.FindZone }
     * {@link Dowhile.FireTurret }
     * {@link Dowhile.GetAttackstrength }
     * {@link Dowhile.GetCharacterDefinition }
     * {@link Dowhile.GetDockingApproachPos }
     * {@link Dowhile.GetGateApproachPos }
     * {@link Dowhile.GetGlobalPath }
     * {@link Dowhile.GetJumpPath }
     * {@link Dowhile.GetClosestHighwayOffset }
     * {@link Dowhile.GetClosestJumpbeacon }
     * {@link Dowhile.GetSafePos }
     * {@link Dowhile.GetShipDefinition }
     * {@link Dowhile.GetTargetPoints }
     * {@link Dowhile.GetTextIdsInRange }
     * {@link Dowhile.GetTradeParkingPos }
     * {@link Dowhile.GetZoneExitPos }
     * {@link Dowhile.PrecacheHint }
     * {@link Dowhile.IsInQuadrant }
     * {@link Dowhile.JoinFormation }
     * {@link Dowhile.LaunchDrone }
     * {@link Dowhile.LaunchMasstrafficDrone }
     * {@link Dowhile.LaunchWarDrones }
     * {@link Dowhile.LaunchRepairDrones }
     * {@link Dowhile.LeaveFormation }
     * {@link Dowhile.OpenConversationMenu }
     * {@link Dowhile.OpenDockingbayDoors }
     * {@link Dowhile.PickupTarget }
     * {@link Dowhile.PlayCutscene }
     * {@link Dowhile.RemoveActorAccount }
     * {@link Dowhile.RemoveActorFromRoom }
     * {@link Dowhile.RemoveFromGroup }
     * {@link Dowhile.RemoveFromPlayerSquad }
     * {@link Dowhile.RemoveObjectCommander }
     * {@link Dowhile.RemoveRepresentative }
     * {@link Dowhile.RemoveValue }
     * {@link Dowhile.RemoveWeapon }
     * {@link Dowhile.CheckWeaponActive }
     * {@link Dowhile.CheckWeaponInstalled }
     * {@link Dowhile.RequestDocking }
     * {@link Dowhile.AddMassTrafficQuota }
     * {@link Dowhile.StopMassTrafficQuota }
     * {@link Dowhile.GetMacrosInMassTraffic }
     * {@link Dowhile.RequestMassTrafficShip }
     * {@link Dowhile.RequestUndocking }
     * {@link Dowhile.RequestBoardingSupport }
     * {@link Dowhile.NotifyBoardingSupportFailed }
     * {@link Dowhile.NotifyBoardingSupportSucceeded }
     * {@link Dowhile.RequestRepair }
     * {@link Dowhile.ResetRelationBoost }
     * {@link Dowhile.ResetToleranceBoost }
     * {@link Dowhile.ResetTurret }
     * {@link Dowhile.ResizeList }
     * {@link Dowhile.RewardPlayer }
     * {@link Dowhile.SetActorAccount }
     * {@link Dowhile.SetActorMaxBudget }
     * {@link Dowhile.SetActorMinBudget }
     * {@link Dowhile.TransferMoney }
     * {@link Dowhile.SetBuildanchor }
     * {@link Dowhile.SetCockpitTint }
     * {@link Dowhile.SetCommHandler }
     * {@link Dowhile.SetObjectActive }
     * {@link Dowhile.SetObjectCapturable }
     * {@link Dowhile.SetObjectRadarVisible }
     * {@link Dowhile.SetObjectCommander }
     * {@link Dowhile.AddDrone }
     * {@link Dowhile.SetObjectMinHull }
     * {@link Dowhile.SetObjectMinShield }
     * {@link Dowhile.SetObjectHull }
     * {@link Dowhile.SetObjectRelationBehaviour }
     * {@link Dowhile.SetObjectShield }
     * {@link Dowhile.SetObjectMaxHull }
     * {@link Dowhile.SetSummarisedAdsignState }
     * {@link Dowhile.SetSummarisedEfficiencyupgradeState }
     * {@link Dowhile.SetSummarisedFlakcontrollerState }
     * {@link Dowhile.SetSummarisedShieldState }
     * {@link Dowhile.SetSummarisedSurfacedestructibleState }
     * {@link Dowhile.SetSummarisedTurretState }
     * {@link Dowhile.SetObjectScanned }
     * {@link Dowhile.SetObjectHacked }
     * {@link Dowhile.SetRoomLocked }
     * {@link Dowhile.SetAllowDrop }
     * {@link Dowhile.SetDropObject }
     * {@link Dowhile.SpawnDrop }
     * {@link Dowhile.SetEntityType }
     * {@link Dowhile.SetFactionRelation }
     * {@link Dowhile.SetMassTrafficObjectPersistence }
     * {@link Dowhile.SetRegionObjectPersistence }
     * {@link Dowhile.EndMassTraffic }
     * {@link Dowhile.SetOrderMoveto }
     * {@link Dowhile.SetOrderPickupTarget }
     * {@link Dowhile.SetOwner }
     * {@link Dowhile.SetCoverOwner }
     * {@link Dowhile.SetPlayerActivity }
     * {@link Dowhile.SetPlayerEntityPosition }
     * {@link Dowhile.SetRelationBoost }
     * {@link Dowhile.SetRepresentative }
     * {@link Dowhile.SetHackTarget }
     * {@link Dowhile.SetScanTarget }
     * {@link Dowhile.SetSkill }
     * {@link Dowhile.SetSkillsVisible }
     * {@link Dowhile.SetToleranceBoost }
     * {@link Dowhile.SetAllowedWeaponSystems }
     * {@link Dowhile.SetTradeRestrictions }
     * {@link Dowhile.SetTurretTargets }
     * {@link Dowhile.SetValue }
     * {@link Dowhile.SetupConversationMinigame }
     * {@link Dowhile.ShowHelp }
     * {@link Dowhile.RemoveHelp }
     * {@link Dowhile.SaveAiActionState }
     * {@link Dowhile.ShowInputHelp }
     * {@link Dowhile.ShowNotification }
     * {@link Dowhile.SignalObjects }
     * {@link Dowhile.Speak }
     * {@link Dowhile.StartBoost }
     * {@link Dowhile.StartConversation }
     * {@link Dowhile.CancelConversation }
     * {@link Dowhile.StartLongRangeScan }
     * {@link Dowhile.StopLongRangeScan }
     * {@link Dowhile.StartScript }
     * {@link Dowhile.StopBoost }
     * {@link Dowhile.StopCutscene }
     * {@link Dowhile.StopFiringAtTarget }
     * {@link Dowhile.SubstituteText }
     * {@link Dowhile.TriggerAutosave }
     * {@link Dowhile.TriggerBoarding }
     * {@link Dowhile.Undock }
     * {@link Dowhile.UnlockAchievement }
     * {@link Dowhile.IndicateAchievementProgress }
     * {@link Dowhile.UpdateTrade }
     * {@link Dowhile.UpgradeObjectByMacro }
     * {@link Dowhile.UpgradeObjectByTag }
     * {@link Dowhile.BuildObjectUpgrades }
     * {@link Dowhile.BuildComponentUpgrades }
     * {@link Dowhile.GetBuildSlotPrice }
     * {@link Dowhile.GetPilotDockslot }
     * {@link Dowhile.Warp }
     * {@link Dowhile.SortTrades }
     * {@link Dowhile.AddExperienceProgress }
     * {@link Dowhile.SetExperienceProgress }
     * {@link Dowhile.AddEffect }
     * {@link Dowhile.RemoveEffect }
     * {@link Dowhile.PlaySound }
     * {@link Dowhile.PlayMusic }
     * {@link Dowhile.StopMusic }
     * {@link Dowhile.QuitGameover }
     * {@link Dowhile.QuitToDesktop }
     * {@link Dowhile.QuitToStartmenu }
     * {@link Dowhile.CancelCue }
     * {@link Dowhile.CompleteCue }
     * {@link Dowhile.CreateCueActor }
     * {@link Dowhile.CreateMission }
     * {@link Dowhile.CreateOffer }
     * {@link Dowhile.CreatePlatformActor }
     * {@link Dowhile.CreatePresentationCluster }
     * {@link Dowhile.CreateRepresentativeActor }
     * {@link Dowhile.CreateTargetPoints }
     * {@link Dowhile.FindMissionOfferLocation }
     * {@link Dowhile.ForceCue }
     * {@link Dowhile.IncludeActions }
     * {@link Dowhile.PopulatePlatforms }
     * {@link Dowhile.RemoveAllCueActors }
     * {@link Dowhile.RemoveCueActor }
     * {@link Dowhile.RemoveMission }
     * {@link Dowhile.RemoveOffer }
     * {@link Dowhile.RemoveTargetPoints }
     * {@link Dowhile.ResetCue }
     * {@link Dowhile.AddHolomap }
     * {@link Dowhile.RemoveHolomap }
     * {@link Dowhile.SetHolomapTarget }
     * {@link Dowhile.SetJobActive }
     * {@link Dowhile.SetMissionActor }
     * {@link Dowhile.SetObjective }
     * {@link Dowhile.UpdateObjectiveProgress }
     * {@link Dowhile.UpdateMission }
     * {@link Dowhile.UpdateObjectiveEndtime }
     * {@link Dowhile.UpdateOffer }
     * {@link Dowhile.EnterPlayership }
     * {@link Dowhile.LeaveCockpit }
     * {@link Dowhile.ForcePlayerSpeed }
     * {@link Dowhile.SignalCue }
     * {@link Dowhile.SignalCueInstantly }
     * 
     * 
     */
    public List<Object> getDoAllOrDoAnyOrDoIf() {
        if (doAllOrDoAnyOrDoIf == null) {
            doAllOrDoAnyOrDoIf = new ArrayList<Object>();
        }
        return this.doAllOrDoAnyOrDoIf;
    }

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the negate property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isNegate() {
        return negate;
    }

    /**
     * Sets the value of the negate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setNegate(Boolean value) {
        this.negate = value;
    }

    /**
     * Gets the value of the exact property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExact() {
        return exact;
    }

    /**
     * Sets the value of the exact property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExact(String value) {
        this.exact = value;
    }

    /**
     * Gets the value of the list property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getList() {
        return list;
    }

    /**
     * Sets the value of the list property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setList(String value) {
        this.list = value;
    }

    /**
     * Gets the value of the min property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMin() {
        return min;
    }

    /**
     * Sets the value of the min property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMin(String value) {
        this.min = value;
    }

    /**
     * Gets the value of the max property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMax() {
        return max;
    }

    /**
     * Sets the value of the max property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMax(String value) {
        this.max = value;
    }

    /**
     * Gets the value of the chance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChance() {
        return chance;
    }

    /**
     * Sets the value of the chance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChance(String value) {
        this.chance = value;
    }

    /**
     * Gets the value of the weight property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWeight() {
        return weight;
    }

    /**
     * Sets the value of the weight property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWeight(String value) {
        this.weight = value;
    }

    /**
     * Gets the value of the comment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the value of the comment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComment(String value) {
        this.comment = value;
    }

}
