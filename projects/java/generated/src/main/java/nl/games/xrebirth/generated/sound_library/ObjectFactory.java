//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.28 at 10:08:50 PM CET 
//


package nl.games.xrebirth.generated.sound_library;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the nl.meijboom.neo4j.xrebirth.generated.sound_library package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nl.meijboom.neo4j.xrebirth.generated.sound_library
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Sample }
     * 
     */
    public Sample createSample() {
        return new Sample();
    }

    /**
     * Create an instance of {@link Effects }
     * 
     */
    public Effects createEffects() {
        return new Effects();
    }

    /**
     * Create an instance of {@link Volumecurve }
     * 
     */
    public Volumecurve createVolumecurve() {
        return new Volumecurve();
    }

    /**
     * Create an instance of {@link RandomNoise }
     * 
     */
    public RandomNoise createRandomNoise() {
        return new RandomNoise();
    }

    /**
     * Create an instance of {@link Soundlibrary }
     * 
     */
    public Soundlibrary createSoundlibrary() {
        return new Soundlibrary();
    }

    /**
     * Create an instance of {@link Sound }
     * 
     */
    public Sound createSound() {
        return new Sound();
    }

    /**
     * Create an instance of {@link Volume }
     * 
     */
    public Volume createVolume() {
        return new Volume();
    }

    /**
     * Create an instance of {@link Sample.Select }
     * 
     */
    public Sample.Select createSampleSelect() {
        return new Sample.Select();
    }

    /**
     * Create an instance of {@link Effects.Doppler }
     * 
     */
    public Effects.Doppler createEffectsDoppler() {
        return new Effects.Doppler();
    }

    /**
     * Create an instance of {@link Effects.Fade }
     * 
     */
    public Effects.Fade createEffectsFade() {
        return new Effects.Fade();
    }

    /**
     * Create an instance of {@link Effects.Filter }
     * 
     */
    public Effects.Filter createEffectsFilter() {
        return new Effects.Filter();
    }

    /**
     * Create an instance of {@link Effects.Reverb }
     * 
     */
    public Effects.Reverb createEffectsReverb() {
        return new Effects.Reverb();
    }

    /**
     * Create an instance of {@link Effects.Pitch }
     * 
     */
    public Effects.Pitch createEffectsPitch() {
        return new Effects.Pitch();
    }

    /**
     * Create an instance of {@link Volumecurve.Point }
     * 
     */
    public Volumecurve.Point createVolumecurvePoint() {
        return new Volumecurve.Point();
    }

    /**
     * Create an instance of {@link RandomNoise.Override }
     * 
     */
    public RandomNoise.Override createRandomNoiseOverride() {
        return new RandomNoise.Override();
    }

}
