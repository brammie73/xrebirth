//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.12.28 at 10:04:53 PM CET 
//


package nl.games.xrebirth.generated.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for dockpopulationtypelookup.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="dockpopulationtypelookup">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="build"/>
 *     &lt;enumeration value="trade"/>
 *     &lt;enumeration value="drones"/>
 *     &lt;enumeration value="ships"/>
 *     &lt;enumeration value="repair"/>
 *     &lt;enumeration value="ammo"/>
 *     &lt;enumeration value="bar"/>
 *     &lt;enumeration value="administrative"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "dockpopulationtypelookup")
@XmlEnum
public enum Dockpopulationtypelookup {

    @XmlEnumValue("build")
    BUILD("build"),
    @XmlEnumValue("trade")
    TRADE("trade"),
    @XmlEnumValue("drones")
    DRONES("drones"),
    @XmlEnumValue("ships")
    SHIPS("ships"),
    @XmlEnumValue("repair")
    REPAIR("repair"),
    @XmlEnumValue("ammo")
    AMMO("ammo"),
    @XmlEnumValue("bar")
    BAR("bar"),
    @XmlEnumValue("administrative")
    ADMINISTRATIVE("administrative");
    private final String value;

    Dockpopulationtypelookup(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Dockpopulationtypelookup fromValue(String v) {
        for (Dockpopulationtypelookup c: Dockpopulationtypelookup.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
